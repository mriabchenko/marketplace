{"version":3,"sources":["webpack:///static/js/app.14119619f1da17c7cd3c.js","webpack:///./src/store/index.js","webpack:///./src/components/global/image_block.vue","webpack:///./src/components/global/info_divided.vue","webpack:///./src/functions.js","webpack:///./src/router/index.js","webpack:///./src/App.vue","webpack:///./src/components/idar/banner.vue","webpack:///./src/components/home/gallery.vue","webpack:///./src/components/global/contact.vue","webpack:///App.vue","webpack:///Home.vue","webpack:///contact.vue","webpack:///image_block.vue","webpack:///info_divided.vue","webpack:///nav_global.vue","webpack:///preloader.vue","webpack:///gallery.vue?1228","webpack:///gallery__slide.vue","webpack:///banner.vue","webpack:///./src/assets/libs/js/mirrorFx.js","webpack:///./src/assets/libs/js/slideshow.js","webpack:///./src/assets/libs/js/smoke.js","webpack:///./src/main.js","webpack:///./src/components/Home.vue","webpack:///./src/components/global/nav_global.vue","webpack:///./src/components/global/preloader.vue","webpack:///./src/components/home/farnosova.vue","webpack:///./src/components/home/gallery__slide.vue","webpack:///./src/components/home/lastestProjectsImage.vue","webpack:///./src/components/global/image_block.vue?7404","webpack:///./src/components/home/farnosova.vue?35c5","webpack:///./src/components/home/gallery.vue?92ce","webpack:///./src/components/idar/banner.vue?57ec","webpack:///./src/App.vue?c74f","webpack:///./src/components/home/gallery__slide.vue?9ccc","webpack:///./src/components/global/contact.vue?b3cf","webpack:///./src/components/global/info_divided.vue?be8e","webpack:///./src/components/global/preloader.vue?dd3c","webpack:///./src/components/home/lastestProjectsImage.vue?a91d","webpack:///./src/components/Home.vue?0b99","webpack:///./src/components/global/nav_global.vue?b654","webpack:///./static/js/three.min.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1_vuex__","use","Store","state","nav","visible","lang","currentPath","preloaderDone","transitionName","scrollIsDone","currentPageSlide","mutations","setLang","actions","increment","context","commit","exports","Component","__WEBPACK_IMPORTED_MODULE_0__store__","getPageInfo","fetch","then","response","console","log","onePageScroll","direction","currentPos","windowHeight","stepSize","step","finalPos","i","scrollIime","stepsNumber","stepsInterval","window","innerHeight","scrollY","Math","floor","this","documentHeight","setInterval","scroll","clearInterval","body","document","html","documentElement","max","scrollHeight","offsetHeight","clientHeight","__WEBPACK_IMPORTED_MODULE_1_vue_router__","__WEBPACK_IMPORTED_MODULE_2__store__","__WEBPACK_IMPORTED_MODULE_3__components_Home_vue__","__WEBPACK_IMPORTED_MODULE_3__components_Home_vue___default","n","Idar","resolve","e","bind","catch","oe","Fashion","Gallery_fashion","Services","Farnosova","Contact","Page_404","Gallery_lastest","Gallery_idar_project","Idar_items","Videos","Media","Styleguide","Test","mode","routes","path","redirect","component","a","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__components_global_preloader_vue__","__WEBPACK_IMPORTED_MODULE_0__components_global_preloader_vue___default","__WEBPACK_IMPORTED_MODULE_1__components_global_nav_global_vue__","__WEBPACK_IMPORTED_MODULE_1__components_global_nav_global_vue___default","__WEBPACK_IMPORTED_MODULE_2__functions__","data","name","components","appNavGlobal","appPreloader","methods","handleScroll","scrollDirection","wheelDelta","$store","mounted","watch","$store.state.scrollIsDone","isDone","__WEBPACK_IMPORTED_MODULE_0__home_gallery_vue__","__WEBPACK_IMPORTED_MODULE_0__home_gallery_vue___default","__WEBPACK_IMPORTED_MODULE_1__idar_banner_vue__","__WEBPACK_IMPORTED_MODULE_2__global_info_divided_vue__","__WEBPACK_IMPORTED_MODULE_2__global_info_divided_vue___default","__WEBPACK_IMPORTED_MODULE_3__home_farnosova_vue__","__WEBPACK_IMPORTED_MODULE_3__home_farnosova_vue___default","__WEBPACK_IMPORTED_MODULE_4__home_lastestProjectsImage_vue__","__WEBPACK_IMPORTED_MODULE_4__home_lastestProjectsImage_vue___default","__WEBPACK_IMPORTED_MODULE_5__global_contact_vue__","__WEBPACK_IMPORTED_MODULE_5__global_contact_vue___default","__WEBPACK_IMPORTED_MODULE_6__global_image_block_vue__","__WEBPACK_IMPORTED_MODULE_6__global_image_block_vue___default","one_page_scroll","enable","navigation","page_home","ru","gallery","button_idar","button_fashion","info_1","title","description","button","image","info_2","info_3","en","appBlockImage","appGallery","appInfo","farnosova","lastestProjectsImage","appIdarGallery","appContact","navigateToFarnosova","$router","push","$route","params","navigateToLastest","navigateToMedia","created","$","__WEBPACK_IMPORTED_MODULE_0__info_divided_vue__","__WEBPACK_IMPORTED_MODULE_0__info_divided_vue___default","__WEBPACK_IMPORTED_MODULE_1__global_image_block_vue__","__WEBPACK_IMPORTED_MODULE_1__global_image_block_vue___default","contact_info","matchHeight","byRow","goToContact","call","dynamicStyle","props","bg_image","type","String","default","alt","computed","staticStyle","backgroundImage","first","nav_global","pages","idar","fashion","services","contact","social","instagram","text","url","pinterest","facebook","youtube","filters","alternateLang","changeLang","substring","preloaderInit","preloaderBlock","getElementById","style","opacity","interPreloader","display","setTimeout","__WEBPACK_IMPORTED_MODULE_0_animejs__","__WEBPACK_IMPORTED_MODULE_0_animejs___default","__WEBPACK_IMPORTED_MODULE_1__assets_libs_js_mirrorFx_js__","__WEBPACK_IMPORTED_MODULE_2__assets_libs_js_slideshow_js__","__WEBPACK_IMPORTED_MODULE_4__gallery_slide_vue__","__WEBPACK_IMPORTED_MODULE_4__gallery_slide_vue___default","anime","slider","navigateToIdar","navigateToFashion","nextSlide","itemsTotal","current","_navigate","slide","Slideshow","querySelector","appendChild","smoke","required","extend","b","key","hasOwnProperty","getMousePos","posx","posy","event","pageX","pageY","clientX","clientY","scrollLeft","scrollTop","x","y","lineEq","y2","y1","x2","x1","currentVal","m","MirrorFx","el","options","imgs","side1","side2","undefined","getAttribute","visibleArea","layout","tilt","prototype","duration","show","hide","easing","tiltFactor","tiltRotation","_initTilt","self","WebkitTransition","transition","mousemoveFn","ev","requestAnimationFrame","mousepos","docScrolls","left","top","win","width","innerWidth","height","relmousepos","d","tVal","rz","WebkitTransform","transform","addEventListener","_removeTilt","removeEventListener","_animate","action","callback","opts","targets","rotateZ","translateX","ceil","translateY","complete","remove","items","slice","querySelectorAll","length","_init","delay","mirrorElems","forEach","item","classList","add","pos","currentItem","nextItem","isAnimating","animate","delta","clock","getDelta","evolveSmoke","render","sp","smokeParticles","rotation","z","mesh","cubeSineDriver","position","sin","renderer","scene","camera","geometry","material","__WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js__","__WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default","light","smokeTexture","smokeMaterial","smokeGeo","p","Clock","WebGLRenderer","setSize","Scene","PerspectiveCamera","CubeGeometry","MeshLambertMaterial","color","wireframe","Mesh","DirectionalLight","set","ImageUtils","loadTexture","map","transparent","PlaneGeometry","particle","random","domElement","__WEBPACK_IMPORTED_MODULE_1__App__","__WEBPACK_IMPORTED_MODULE_1__App___default","__WEBPACK_IMPORTED_MODULE_3__router__","__WEBPACK_IMPORTED_MODULE_4_vue_resource__","__WEBPACK_IMPORTED_MODULE_5_jquery__","__WEBPACK_IMPORTED_MODULE_5_jquery___default","__WEBPACK_IMPORTED_MODULE_6_jquery_match_height__","__WEBPACK_IMPORTED_MODULE_6_jquery_match_height___default","config","productionTip","store","router","template","App","afterEach","scrollTo","history","fullPath","substr","_vm","_h","$createElement","_self","_c","staticClass","attrs","_t","staticRenderFns","_m","background-image","_v","on","click","_s","_e","after-enter","$event","data-visible-area","src","slot","domProps","innerHTML","class","col-sm-push-6","col-sm-pull-6","id","enable-background","xmlns","xmlns:xlink","viewBox","xml:space","flood-color","flood-opacity","in2","operator","stdDeviation","dx","dy","result","data-svg-origin","filter","version","points","to","fill","_l","link","href","target","_f","activeClass","tag","THREE","REVISION","sign","apply","arguments","warn","error","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoShading","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","projectVector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","createElement","clear","setClearColor","Color","setRGB","constructor","r","g","copy","setHex","setStyle","c","setHSL","test","exec","min","parseInt","ColorKeywords","copyGammaToLinear","pow","copyLinearToGamma","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","toString","getHSL","h","s","l","f","k","getStyle","offsetHSL","addColors","addScalar","multiply","multiplyScalar","lerp","equals","fromArray","toArray","clone","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","_x","_y","_z","_w","onChangeCallback","w","setFromEuler","Euler","Error","cos","order","setFromAxisAngle","setFromRotationMatrix","elements","setFromUnitVectors","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","lengthSq","multiplyQuaternions","multiplyVector3","applyQuaternion","slerp","acos","onChange","Vector2","setX","setY","setComponent","getComponent","addVectors","sub","subVectors","subScalar","divide","divideScalar","clamp","clampScalar","round","roundToZero","negate","distanceTo","distanceToSquared","setLength","lerpVectors","fromAttribute","itemSize","array","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","lengthManhattan","cross","projectOnVector","projectOnPlane","reflect","angleTo","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","PI","_order","DefaultOrder","RotationOrders","split","q","asin","atan2","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","toVector3","Line3","start","end","center","distanceSq","distance","at","closestPointToPointParameter","closestPointToPoint","Box2","Infinity","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","empty","size","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","intersect","union","translate","Box3","setFromObject","updateMatrixWorld","traverse","Geometry","vertices","BufferGeometry","attributes","getBoundingSphere","Sphere","radius","Matrix3","Float32Array","identity","multiplyVector3Array","applyToVector3Array","determinant","transpose","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","t","u","extractPosition","copyPosition","extractBasis","makeBasis","extractRotation","makeRotationFromEuler","setRotationFromQuaternion","lookAt","v","D","A","E","G","F","I","U","M","H","L","P","N","R","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateByAxis","scale","getMaxScaleOnAxis","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","compose","decompose","makeFrustum","makePerspective","degToRad","makeOrthographic","Ray","origin","recast","distanceSqToSegment","isIntersectionSphere","intersectSphere","isIntersectionPlane","normal","distanceToPlane","constant","intersectPlane","intersectBox","intersectTriangle","intersectsSphere","getBoundingBox","Frustum","planes","Plane","setFromMatrix","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","intersectsBox","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","distanceToSphere","projectPoint","orthoPoint","isIntersectionLine","intersectLine","coplanarPoint","generateUUID","Array","join","clampBottom","mapLinear","smoothstep","smootherstep","random16","randInt","randFloat","randFloatSpread","radToDeg","isPowerOfTwo","nextPowerOfTwo","Spline","initFromArray","getPoint","getControlPointsArray","getLength","chunks","total","reparametrizeByArcLength","Triangle","barycoordFromPoint","setFromPointsAndIndices","area","midpoint","plane","autoStart","elapsedTime","oldTime","startTime","running","performance","now","Date","stop","getElapsedTime","EventDispatcher","hasEventListener","dispatchEvent","_listeners","indexOf","splice","Raycaster","ray","near","far","Sprite","PointCloud","threshold","LOD","Line","raycast","children","precision","linePrecision","setFromCamera","OrthographicCamera","intersectObject","sort","intersectObjects","Object3D","Object3DIdCount","uuid","parent","up","DefaultUp","defineProperties","enumerable","quaternion","rotationAutoUpdate","matrix","matrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","castShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","translateOnAxis","translateZ","localToWorld","worldToLocal","getChildByName","getObjectByName","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","toJSON","metadata","generator","materials","JSON","stringify","fov","aspect","right","bottom","AmbientLight","intensity","PointLight","decay","SpotLight","angle","exponent","HemisphereLight","groundColor","geometries","object","parse","Face3","vertexNormals","vertexColors","vertexTangents","materialIndex","Face4","BufferAttribute","needsUpdate","copyAt","setXY","setXYZ","setXYZW","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","DynamicBufferAttribute","updateRange","offset","count","create","GeometryIdCount","attributesKeys","offsets","drawcalls","boundingBox","addAttribute","keys","addDrawCall","index","computeBoundingBox","fromGeometry","faces","faceVertexUvs","isNaN","computeFaceNormals","computeVertexNormals","normalizeNormals","computeTangents","ha","O","ba","oa","ja","qa","ca","uv","tangent","V","J","computeOffsets","Uint16Array","Int32Array","reorderBuffers","merge","numItems","dispose","colors","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","hasTangents","dynamic","groupsNeedUpdate","lineDistancesNeedUpdate","colorsNeedUpdate","tangentsNeedUpdate","normalsNeedUpdate","uvsNeedUpdate","elementsNeedUpdate","verticesNeedUpdate","fromBufferGeometry","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","faceNormals","computeLineDistances","mergeMesh","mergeVertices","parameters","normals","uvs","Camera","matrixWorldInverse","CubeCamera","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","generateMipmaps","activeCubeFace","zoom","updateProjectionMatrix","setLens","atan","setViewOffset","fullWidth","fullHeight","Light","AreaLight","constantAttenuation","linearAttenuation","quadraticAttenuation","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraTop","shadowCameraRight","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapHeight","shadowMapWidth","shadowCascade","shadowCascadeOffset","shadowCascadeCount","shadowCascadeBias","shadowCascadeWidth","shadowCascadeHeight","shadowCascadeNearZ","shadowCascadeFarZ","shadowCascadeArray","shadowMatrix","shadowCamera","shadowMapSize","shadowMap","shadowCameraFov","Cache","files","get","Loader","statusDomElement","showStatus","addStatusElement","imageLoader","ImageLoader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","fontSize","textAlign","background","padding","zIndex","updateProgress","loaded","toFixed","extractUrlBase","pop","initMaterials","createMaterial","needsTangents","ShaderMaterial","LN2","Handlers","load","Texture","getContext","drawImage","sourceFile","repeat","wrapS","wrapT","mirror","anisotropy","lightMap","normalMap","bumpMap","shading","toLowerCase","blending","depthTest","depthWrite","flipSided","side","doubleSided","colorDiffuse","DbgColor","colorSpecular","specular","colorEmissive","emissive","transparency","specularCoef","shininess","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","handlers","XHRLoader","manager","DefaultLoadingManager","XMLHttpRequest","open","itemEnd","responseType","send","itemStart","setResponseType","setCrossOrigin","JSONLoader","withCredentials","loadAjaxJSON","onreadystatechange","readyState","DONE","status","responseText","LOADING","getResponseHeader","HEADERS_RECEIVED","influencesPerVertex","bones","animation","animations","LoadingManager","onLoad","onProgress","onError","BufferGeometryLoader","MaterialLoader","uniforms","vertexShader","fragmentShader","sizeAttenuation","ObjectLoader","texturePath","lastIndexOf","setTexturePath","parseGeometries","parseImages","images","parseTextures","textures","parseMaterials","parseObject","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleGeometry","segments","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","IcosahedronGeometry","detail","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","alphaMap","envMap","specularMap","wrap","Group","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendEquationAlpha","blendDstAlpha","blendSrcAlpha","colorWrite","polygonOffset","overdraw","alphaTest","polygonOffsetUnits","polygonOffsetFactor","_needsUpdate","update","setValues","Number","MeshBasicMaterial","MeshPhongMaterial","MeshNormalMaterial","MeshDepthMaterial","PointCloudMaterial","SpriteMaterial","LineBasicMaterial","linewidth","linejoin","linecap","fog","LineDashedMaterial","dashSize","gapSize","combine","reflectivity","refractionRatio","wireframeLinewidth","wireframeLinejoin","wireframeLinecap","skinning","wrapAround","wrapRGB","metal","MeshFaceMaterial","ParticleBasicMaterial","ParticleSystemMaterial","defines","lights","defaultAttributeValues","uv2","index0AttributeName","UniformsUtils","RawShaderMaterial","TextureIdCount","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","CubeTexture","VideoTexture","HAVE_ENOUGH_DATA","distanceToRay","point","face","ParticleSystem","LineStrip","LinePieces","offsetIndex","faceIndex","updateMorphTargets","morphTargetBase","morphTargetForcedOrder","morphTargetInfluences","morphTargetDictionary","getMorphTargetIndexByName","Bone","skin","Skeleton","useVertexTexture","identityMatrix","boneTextureHeight","boneTextureWidth","boneMatrices","boneTexture","calculateInverses","boneInverses","pose","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","rotq","scl","normalizeSkinWeights","skeleton","MorphAnimMesh","mirroredLoop","currentKeyframe","lastKeyframe","time","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","match","firstAnimation","setAnimationLabel","playAnimation","updateAnimation","interpolateTargets","objects","addLevel","getObjectForDistance","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","texture","updateLensFlares","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","common","alphatest_fragment","lights_lambert_vertex","map_particle_pars_fragment","default_vertex","map_pars_fragment","skinnormal_vertex","logdepthbuf_pars_vertex","lightmap_pars_vertex","lights_phong_fragment","fog_pars_fragment","morphnormal_vertex","envmap_pars_fragment","logdepthbuf_fragment","normalmap_pars_fragment","lights_phong_pars_vertex","lightmap_pars_fragment","shadowmap_vertex","lights_phong_vertex","map_fragment","lightmap_vertex","map_particle_fragment","color_pars_fragment","color_vertex","skinning_vertex","envmap_pars_vertex","linear_to_gamma_fragment","color_pars_vertex","lights_lambert_pars_vertex","map_pars_vertex","envmap_fragment","specularmap_pars_fragment","logdepthbuf_vertex","morphtarget_pars_vertex","specularmap_fragment","fog_fragment","bumpmap_pars_fragment","defaultnormal_vertex","lights_phong_pars_fragment","skinbase_vertex","map_vertex","lightmap_fragment","shadowmap_pars_vertex","color_fragment","morphtarget_vertex","envmap_vertex","shadowmap_fragment","worldpos_vertex","shadowmap_pars_fragment","skinning_pars_vertex","logdepthbuf_pars_fragment","alphamap_fragment","alphamap_pars_fragment","UniformsLib","diffuse","offsetRepeat","flipEnvMap","bump","normalmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","particle_basic","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","__webglCustomAttributesList","__webglInitialized","createUniqueBuffers","buffer","createBuffer","belongsToAttribute","bindBuffer","ARRAY_BUFFER","W","enableAttribute","vertexAttribPointer","FLOAT","vertexAttrib2fv","vertexAttrib3fv","disableUnusedAttributes","__webglInit","_modelViewMatrix","_normalMatrix","wb","jb","B","info","memory","__webglVertexBuffer","__webglColorBuffer","__webglLineDistanceBuffer","__vertexArray","__colorArray","__lineDistanceArray","__webglLineCount","__webglParticleCount","__webglActive","Ua","ImmediateRenderObject","immediateRenderCallback","opaque","Xa","Ya","cb","Qa","Ka","sortObjects","wa","db","setMaterialFaces","renderBufferDirect","renderBuffer","renderImmediateObject","da","hash","counter","Qb","faces3","numMorphTargets","numMorphNormals","__webglNormalBuffer","__webglTangentBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","__webglMorphTargetsBuffers","__webglMorphNormalsBuffers","__normalArray","__uvArray","__uv2Array","__tangentArray","__skinIndexArray","__skinWeightArray","Uint32Array","__typeArray","__faceArray","__lineArray","__morphTargetsArrays","__morphNormalsArrays","__webglFaceCount","__original","__inittedArrays","morphTargetsNeedUpdate","ELEMENT_ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","STATIC_DRAW","bufferSubData","BYTES_PER_ELEMENT","subarray","Pa","ka","Q","ia","ob","Y","ub","pa","ab","Ca","ta","na","La","Ma","kb","yb","zb","Ra","Aa","eb","Ha","la","ra","K","za","Sa","Ab","lb","Na","sa","Da","Ea","Fa","Gb","Bb","mb","C","Va","Ta","ea","fb","vb","Mb","Ob","ib","sb","Cb","xa","Hb","Oa","$a","Ga","nb","bb","boundTo","T","S","aa","Z","Ba","X","Eb","Jb","ua","Kb","Ia","fa","Db","Rb","Ib","gb","ya","pb","qb","Wa","tb","hb","$b","Fb","Sb","Tb","Ub","ac","ma","bc","ec","va","Lb","Ja","ga","Nb","Vb","Pb","rb","cc","dc","gc","setBlending","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","program","hc","ic","pc","__webglShader","MAX_VERTEX_UNIFORM_VECTORS","supportsVertexTextures","envMapMode","useFog","fogExp","flatShading","logarithmicDepthBuffer","maxBones","maxMorphTargets","maxMorphNormals","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","shadowMapEnabled","shadowMapType","shadowMapDebug","shadowMapCascade","code","usedTimes","WebGLProgram","programs","numSupportedMorphTargets","numSupportedMorphNormals","uniformsList","__webglMorphTargetInfluences","useProgram","uniformMatrix4fv","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","uniform1i","setTexture","boneGlobalMatrices","Za","xb","jc","directional","positions","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","ambient","Wb","Xb","_shadowPass","fc","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniformMatrix3fv","_array","__webglTextureCube","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","autoScaleCubemaps","qc","Yb","Zb","kc","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","texImage2D","generateMipmap","__webglTexture","modelViewMatrix","normalMatrix","modelMatrix","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","FRAMEBUFFER","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","TEXTURE_2D","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","canvas","alpha","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","autoClearStencil","autoClearDepth","autoClearColor","autoClear","gammaFactor","gammaOutput","gammaInput","shadowMapCullFace","calls","preventDefault","lc","rc","WebGLState","getShaderPrecisionFormat","rangeMin","rangeMax","WebGLExtensions","clearColor","clearDepth","clearStencil","DEPTH_TEST","depthFunc","LEQUAL","frontFace","CCW","cullFace","BACK","CULL_FACE","BLEND","blendFunc","viewport","reset","MAX_TEXTURE_IMAGE_UNITS","sc","MAX_VERTEX_TEXTURE_IMAGE_UNITS","tc","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","uc","VERTEX_SHADER","HIGH_FLOAT","vc","MEDIUM_FLOAT","wc","FRAGMENT_SHADER","xc","COMPRESSED_TEXTURE_FORMATS","yc","mc","zc","ShadowMapPlugin","Ac","SpritePlugin","Bc","LensFlarePlugin","forceContextLoss","loseContext","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","setViewport","setScissor","scissor","enableScissorTest","SCISSOR_TEST","disable","getClearColor","getClearAlpha","setClearAlpha","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","setRenderTarget","resetGLState","deleteBuffer","nc","deleteTexture","oc","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","deleteProgram","renderBufferImmediate","initAttributes","hasPositions","hasNormals","hasUvs","__webglUvBuffer","hasColors","positionArray","normalArray","uvArray","colorArray","drawArrays","TRIANGLES","LINES","drawElements","POINTS","LINE_STRIP","setLineWidth","skinIndex","skinWeight","lineDistance","setFaceCulling","CW","FRONT","FRONT_AND_BACK","setDoubleSided","setFlipSided","uploadTexture","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","createFramebuffer","createRenderbuffer","bindFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","shareDepthFrom","readRenderTargetPixels","WebGLRenderTarget","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","getExtension","createProgram","WebGLShader","attachShader","bindAttribLocation","linkProgram","getProgramInfoLog","getProgramParameter","LINK_STATUS","getError","VALIDATE_STATUS","deleteShader","getUniformLocation","getAttribLocation","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","Uint8Array","enableVertexAttribArray","disableVertexAttribArray","blendEquationSeparate","blendFuncSeparate","depthMask","colorMask","lineWidth","POLYGON_OFFSET_FILL","TEXTURE1","copyTexImage2D","isVirtual","pointsWorld","pointsFrustum","originalCamera","Gyroscope","cameraHelper","CameraHelper","customDepthMaterial","fillStyle","fillRect","GeometryUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","getImageData","createImageData","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","weight","divisions","getFace","loadFace","familyName","cssFontWeight","cssFontStyle","drawText","resolution","Path","extractGlyphPoints","paths","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","b2","bezierCurveTo","b3","generateShapes","curveSegments","font","toShapes","Triangulate","_typeface_js","typeface_js","Audio","source","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","isPlaying","onload","decodeAudioData","play","loop","pause","currentTime","setLoop","setRefDistance","refDistance","setRolloffFactor","rolloffFactor","setVolume","AudioListener","AudioContext","webkitAudioContext","listener","setOrientation","setVelocity","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","getLengths","__arcLengthDivisions","cacheArcLengths","updateArcLengths","getTangent","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","interpolate","CurvePath","curves","bends","autoClose","checkConnection","closePath","LineCurve","getCurveLengths","cacheLengths","NEGATIVE_INFINITY","POSITIVE_INFINITY","minX","minY","maxX","maxY","maxZ","minZ","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","getTransformedPoints","getWrapPoints","getTransformedSpacedPoints","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","args","QuadraticBezierCurve","CubicBezierCurve","splineThru","SplineCurve","absarc","absellipse","ellipse","EllipseCurve","useSpacedPoints","concat","isClockWise","froms","tos","hole","holes","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","getSpacedPointsHoles","extractAllPoints","shape","extractPoints","extractAllSpacedPoints","triangulateShape","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","v1","v2","v0","v3","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","init","initialized","hierarchy","rot","usedMorphTargets","morphTargetsInfluences","resetBlendWeights","Animation","root","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","getPrevKeyWith","KeyFrameAnimation","node","isPaused","sids","endTime","hasTarget","MorphAnimation","frames","currentFrame","lastFrame","addShapeList","addShape","generateSideWallUV","generateTopUV","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","steps","extrudePath","extrudeMaterial","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","reverse","binormals","LatheGeometry","PlaneBufferGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TextGeometry","closed","NoTaper","tangents","SinusoidalTaper","MAX_VALUE","PolyhedronGeometry","indices","DodecahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","func","slices","stacks","AxisHelper","ArrowHelper","line","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","box","pointMap","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","vert1","vert2","face1","face2","FaceNormalsHelper","GridHelper","color1","color2","setColors","HemisphereLightHelper","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","SpotLightHelper","VertexNormalsHelper","VertexTangentsHelper","WireframeHelper","MorphBlendMesh","animationsMap","animationsList","createAnimation","setAnimationWeight","startFrame","endFrame","fps","active","autoCreateAnimations","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","file":"static/js/app.14119619f1da17c7cd3c.js","sourcesContent":["webpackJsonp([14],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(80);\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"a\" /* default */]);\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_1_vuex__[\"a\" /* default */].Store({\n\tstate: {\n\t\tnav: {\n\t\t\tvisible: false\n\t\t},\n\t\tlang: 'ru',\n\t\tcurrentPath: '/',\n\n\t\tpreloaderDone: true,\n\t\ttransitionName: 'fade',\n\t\tscrollIsDone: true,\n\t\tcurrentPageSlide: 1\n\t},\n\tmutations: {\n\t\tsetLang: function setLang(state, lang) {\n\t\t\tstate.lang = lang;\n\t\t}\n\t},\n\tactions: {\n\t\tincrement: function increment(context, lang) {\n\t\t\tcontext.commit('setLang', lang);\n\t\t}\n\t}\n}));\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(44)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(33),\n  /* template */\n  __webpack_require__(66),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(54)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(34),\n  /* template */\n  __webpack_require__(73),\n  /* scopeId */\n  \"data-v-4959ffbf\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__store__ = __webpack_require__(3);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  getPageInfo: function getPageInfo() {\n    fetch('http://farnosovadmin2.krokus.info/page/home').then(function (response) {\n      console.log(response);\n    });\n  },\n  onePageScroll: function onePageScroll(direction) {\n    var currentPos = void 0,\n        windowHeight = void 0,\n        stepSize = void 0,\n        step = void 0,\n        finalPos = void 0,\n        i = void 0,\n        scrollIime = void 0,\n        stepsNumber = void 0,\n        stepsInterval = void 0;\n    scrollIime = 500;\n    windowHeight = window.innerHeight;\n    stepSize = 10;\n    __WEBPACK_IMPORTED_MODULE_0__store__[\"a\" /* default */].state.scrollIsDone = false;\n    currentPos = window.scrollY;\n    stepsNumber = Math.floor(windowHeight / stepSize);\n    stepsInterval = Math.floor(scrollIime / stepsNumber);\n    if (direction == 'up') {\n      finalPos = currentPos - windowHeight;\n      step = -1 * stepSize;\n    } else if (direction == 'down') {\n      finalPos = currentPos + windowHeight;\n      step = stepSize;\n    }\n    if (finalPos + windowHeight < this.documentHeight()) {\n      i = setInterval(function () {\n        window.scroll(0, currentPos + step);\n        currentPos = window.scrollY;\n        if (currentPos == finalPos || i > stepsNumber) {\n          window.clearInterval(i);\n          __WEBPACK_IMPORTED_MODULE_0__store__[\"a\" /* default */].state.scrollIsDone = true;\n        }\n      }, stepsInterval);\n    } else __WEBPACK_IMPORTED_MODULE_0__store__[\"a\" /* default */].state.scrollIsDone = true;\n  },\n  documentHeight: function documentHeight() {\n    var body = document.body,\n        html = document.documentElement;\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n  }\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__(78);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__store__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Home_vue__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Home_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__components_Home_vue__);\n\n\n\n\n\nvar Idar = function Idar(resolve) {\n\t__webpack_require__.e/* require.ensure */(1).then((function () {\n\t\tresolve(__webpack_require__(17));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\nvar Fashion = function Fashion(resolve) {\n\t__webpack_require__.e/* require.ensure */(2).then((function () {\n\t\tresolve(__webpack_require__(16));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\nvar Gallery_fashion = function Gallery_fashion(resolve) {\n\t__webpack_require__.e/* require.ensure */(7).then((function () {\n\t\tresolve(__webpack_require__(25));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\nvar Services = function Services(resolve) {\n\t__webpack_require__.e/* require.ensure */(8).then((function () {\n\t\tresolve(__webpack_require__(21));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\nvar Farnosova = function Farnosova(resolve) {\n\t__webpack_require__.e/* require.ensure */(9).then((function () {\n\t\tresolve(__webpack_require__(15));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\nvar Contact = function Contact(resolve) {\n\t__webpack_require__.e/* require.ensure */(0).then((function () {\n\t\tresolve(__webpack_require__(14));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\nvar Page_404 = function Page_404(resolve) {\n\t__webpack_require__.e/* require.ensure */(11).then((function () {\n\t\tresolve(__webpack_require__(20));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\nvar Gallery_lastest = function Gallery_lastest(resolve) {\n\t__webpack_require__.e/* require.ensure */(4).then((function () {\n\t\tresolve(__webpack_require__(27));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\nvar Gallery_idar_project = function Gallery_idar_project(resolve) {\n\t__webpack_require__.e/* require.ensure */(5).then((function () {\n\t\tresolve(__webpack_require__(26));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\n\nvar Idar_items = function Idar_items(resolve) {\n\t__webpack_require__.e/* require.ensure */(6).then((function () {\n\t\tresolve(__webpack_require__(18));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\n\nvar Videos = function Videos(resolve) {\n\t__webpack_require__.e/* require.ensure */(10).then((function () {\n\t\tresolve(__webpack_require__(24));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\n\nvar Media = function Media(resolve) {\n\t__webpack_require__.e/* require.ensure */(3).then((function () {\n\t\tresolve(__webpack_require__(19));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\n\nvar Styleguide = function Styleguide(resolve) {\n\t__webpack_require__.e/* require.ensure */(12).then((function () {\n\t\tresolve(__webpack_require__(22));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\n\nvar Test = function Test(resolve) {\n\t__webpack_require__.e/* require.ensure */(13).then((function () {\n\t\tresolve(__webpack_require__(23));\n\t}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n};\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]({\n\tmode: 'history',\n\troutes: [{ path: '/', redirect: __WEBPACK_IMPORTED_MODULE_2__store__[\"a\" /* default */].state.lang }, { path: '/:lang/', component: __WEBPACK_IMPORTED_MODULE_3__components_Home_vue___default.a }, { path: '/:lang/idar', component: Idar }, { path: '/:lang/idar/:filter', component: Idar_items }, { path: '/:lang/fashion', component: Fashion }, { path: '/:lang/fashion/videos', component: Videos }, { path: '/:lang/fashion/:project_id', component: Gallery_fashion }, { path: '/:lang/services', component: Services }, { path: '/:lang/farnosova', component: Farnosova }, { path: '/:lang/contact', component: Contact }, { path: '/:lang/gallery/lastest/:gallery_category', component: Gallery_lastest }, { path: '/:lang/gallery/idar/:project_id', component: Gallery_idar_project }, { path: '/:lang/media', component: Media }, { path: '/:lang/test', component: Test }, { path: '/:lang/styleguide', component: Styleguide }, { path: '/:lang/*', component: Page_404 }]\n}));\n\n/***/ }),\n/* 8 */,\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(51)\n__webpack_require__(52)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(30),\n  /* template */\n  __webpack_require__(70),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 10 */,\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(50)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(39),\n  /* template */\n  __webpack_require__(69),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 12 */,\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(45)\n__webpack_require__(46)\n__webpack_require__(49)\n__webpack_require__(47)\n__webpack_require__(48)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(37),\n  /* template */\n  __webpack_require__(68),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(53)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(32),\n  /* template */\n  __webpack_require__(72),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 29 */,\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_global_preloader_vue__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_global_preloader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_global_preloader_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_global_nav_global_vue__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_global_nav_global_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_global_nav_global_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__functions__ = __webpack_require__(6);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      transitionName: ''\n    };\n  },\n\n  name: 'app',\n  components: {\n    appNavGlobal: __WEBPACK_IMPORTED_MODULE_1__components_global_nav_global_vue___default.a,\n    appPreloader: __WEBPACK_IMPORTED_MODULE_0__components_global_preloader_vue___default.a\n  },\n  methods: {\n    handleScroll: function handleScroll(e) {\n      var scrollDirection = void 0;\n      e.wheelDelta < 0 ? scrollDirection = 'down' : scrollDirection = 'up';\n      if (typeof this.$store.state.scrollIsDone == 'undefined') this.$store.state.scrollIsDone = true;\n      if (this.$store.state.scrollIsDone) __WEBPACK_IMPORTED_MODULE_2__functions__[\"a\" /* default */].onePageScroll(scrollDirection);\n    }\n  },\n  mounted: function mounted() {},\n\n  watch: {\n    '$store.state.scrollIsDone': function $storeStateScrollIsDone(isDone) {\n      if (isDone) {\n        this.$store.state.currentPageSlide = window.scrollY / window.innerHeight + 1;\n      }\n    }\n  }\n});\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__home_gallery_vue__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__home_gallery_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__home_gallery_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__idar_banner_vue__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__idar_banner_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__idar_banner_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__global_info_divided_vue__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__global_info_divided_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__global_info_divided_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__home_farnosova_vue__ = __webpack_require__(63);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__home_farnosova_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__home_farnosova_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__home_lastestProjectsImage_vue__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__home_lastestProjectsImage_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__home_lastestProjectsImage_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__global_contact_vue__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__global_contact_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__global_contact_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__global_image_block_vue__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__global_image_block_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__global_image_block_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__functions__ = __webpack_require__(6);\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      one_page_scroll: {\n        enable: true,\n        navigation: true\n      },\n      page_home: {\n        ru: {\n          gallery: {\n            button_idar: 'Дизайн интерьера',\n            button_fashion: 'Мода'\n          },\n          info_1: {\n            title: 'Наталья Фарносова',\n            description: 'Я – архитектор Наталья Фарносова. Свою трудовую деятельность я начала будучи студенткой архитектурного факультета Киевского инженерно-строительного института.',\n            button: 'подробнее',\n            image: '/static/img/Home_about.png'\n          },\n          info_2: {\n            title: 'Последние реализованные проекты',\n            image: '/static/img/Home_lastwork.png'\n          },\n          info_3: {\n            title: 'СМИ и публикации',\n            description: 'Публикации и видео с участием дизайнера',\n            image: '/static/img/Home_news.png'\n          }\n        },\n        en: {\n          gallery: {\n            button_idar: 'Interiour design',\n            button_fashion: 'Fashion'\n          },\n          info_1: {\n            title: 'Natalya Farnosova',\n            description: 'lorem ipsum',\n            button: 'more info'\n          },\n          info_2: {\n            title: 'Lastest projects'\n          },\n          info_3: {\n            title: 'Media',\n            description: 'lorem'\n          }\n        }\n      }\n    };\n  },\n\n  components: {\n    appBlockImage: __WEBPACK_IMPORTED_MODULE_6__global_image_block_vue___default.a,\n    appGallery: __WEBPACK_IMPORTED_MODULE_0__home_gallery_vue___default.a,\n    appInfo: __WEBPACK_IMPORTED_MODULE_2__global_info_divided_vue___default.a,\n    farnosova: __WEBPACK_IMPORTED_MODULE_3__home_farnosova_vue___default.a,\n    lastestProjectsImage: __WEBPACK_IMPORTED_MODULE_4__home_lastestProjectsImage_vue___default.a,\n    appIdarGallery: __WEBPACK_IMPORTED_MODULE_5__global_contact_vue___default.a,\n    appContact: __WEBPACK_IMPORTED_MODULE_5__global_contact_vue___default.a\n  },\n  methods: {\n    navigateToFarnosova: function navigateToFarnosova() {\n      this.$router.push('/' + this.$route.params.lang + '/farnosova');\n    },\n    navigateToLastest: function navigateToLastest() {\n      this.$router.push('/' + this.$route.params.lang + '/gallery/lastest/idar');\n    },\n    navigateToMedia: function navigateToMedia() {\n      this.$router.push('/' + this.$route.params.lang + '/media');\n    }\n  },\n  created: function created() {}\n});\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__info_divided_vue__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__info_divided_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__info_divided_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__global_image_block_vue__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__global_image_block_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__global_image_block_vue__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      contact_info: {\n        ru: {\n          image: '/static/img/Home_contact.png',\n          title: 'Контакты',\n          description: '<p>+38 (044) 232 4242    +38 (067) 226 3377</p><p>г.Киев, ул Шелковичная 36/7</p><p>f-style@ukr.net</p>',\n          button: 'подробнее'\n        },\n        en: {\n          title: 'Contacts',\n          description: '<p>+38 (044) 232 4242    +38 (067) 226 3377</p><p>Shelkovichna str. Kyiv 36/7</p><p>f-style@ukr.net</p>',\n          button: 'Details'\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    $('.match-height').matchHeight({ byRow: true });\n  },\n\n  components: {\n    appInfo: __WEBPACK_IMPORTED_MODULE_0__info_divided_vue___default.a,\n    appBlockImage: __WEBPACK_IMPORTED_MODULE_1__global_image_block_vue___default.a\n  },\n  methods: {\n    goToContact: function goToContact() {\n      this.$router.push('/' + this.$route.params.lang + '/contact');\n    }\n  }\n});\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      dynamicStyle: {}\n    };\n  },\n\n  props: {\n    bg_image: {\n      type: String,\n      default: \"/static/images/image_none.png\"\n    },\n    alt: {\n      type: String,\n      default: \"FARNOSOVA\"\n    }\n  },\n  computed: {\n    staticStyle: function staticStyle() {\n      var v = this;\n      var s = {\n        backgroundImage: 'url(' + v.bg_image + ')'\n      };\n      return s;\n    }\n  }\n});\n\n/***/ }),\n/* 34 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    first: {\n      type: String,\n      default: \"image\"\n    }\n  }\n});\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      nav_global: {\n        ru: {\n          pages: {\n            idar: 'Дизайн интерьера',\n            fashion: 'Мода',\n            services: 'Услуги',\n            farnosova: 'Наталья Фарносова',\n            contact: 'Контакты'\n          },\n          social: {\n            instagram: {\n              text: 'IN',\n              url: 'https://www.instagram.com/nataly_farnosova_design_studio/'\n            },\n            pinterest: {\n              text: 'P',\n              url: 'https://www.pinterest.com/pin/567664728008063851/'\n            },\n            facebook: {\n              text: 'F',\n              url: 'https://www.facebook.com/pages/fSTYLE/107532029277973'\n            },\n            youtube: {\n              text: 'YOU',\n              url: 'https://www.youtube.com/user/TVFStyle'\n            }\n          }\n        },\n        en: {\n          pages: {\n            idar: 'ID&A',\n            fashion: 'Fashion',\n            services: 'Services',\n            farnosova: 'Farnosova',\n            contact: 'Contact'\n          },\n          social: {\n            instagram: {\n              text: 'IN',\n              url: 'https://www.instagram.com/nataly_farnosova_design_studio/'\n            },\n            pinterest: {\n              text: 'P',\n              url: 'https://www.pinterest.com/pin/567664728008063851/'\n            },\n            facebook: {\n              text: 'F',\n              url: 'https://www.facebook.com/pages/fSTYLE/107532029277973'\n            },\n            youtube: {\n              text: 'YOU',\n              url: 'https://www.youtube.com/user/TVFStyle'\n            }\n          }\n        }\n      }\n    };\n  },\n\n  filters: {\n    alternateLang: function alternateLang(value) {\n      if (value == 'ru') return 'en';else if (value == 'en') return 'ru';\n    }\n  },\n  methods: {\n    changeLang: function changeLang() {\n      if (this.$route.params.lang == 'ru') {\n        this.$router.push('/en' + this.$route.path.substring(3));\n      } else if (this.$route.params.lang == 'en') {\n        this.$router.push('/ru' + this.$route.path.substring(3));\n      }\n    }\n  }\n});\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  mounted: function mounted() {\n    var preloaderInit = function preloaderInit() {\n      var preloaderBlock = document.getElementById(\"section-preloader\");\n      preloaderBlock.style.opacity = 1;\n      var interPreloader = setInterval(function () {\n        preloaderBlock.style.opacity = preloaderBlock.style.opacity - 0.05;\n        if (preloaderBlock.style.opacity <= 0.05) {\n          clearInterval(interPreloader);\n          preloaderBlock.style.display = \"none\";\n        }\n      }, 16);\n      this.$store.state.preloaderDone = true;\n    };\n    setTimeout(preloaderInit.bind(this), 3500);\n  }\n});\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_animejs__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_animejs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_animejs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__assets_libs_js_mirrorFx_js__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__assets_libs_js_mirrorFx_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__assets_libs_js_mirrorFx_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__assets_libs_js_slideshow_js__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__assets_libs_js_slideshow_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__assets_libs_js_slideshow_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__assets_libs_js_smoke_js__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__gallery_slide_vue__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__gallery_slide_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__gallery_slide_vue__);\n\n\n\nwindow.anime = __WEBPACK_IMPORTED_MODULE_0_animejs___default.a;\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      slider: {}\n    };\n  },\n\n  methods: {\n    navigateToIdar: function navigateToIdar() {\n      this.$store.state.transitionName = 'slide-right';\n      this.$router.push('/' + this.$route.params.lang + '/idar');\n    },\n    navigateToFashion: function navigateToFashion() {\n      this.$store.state.transitionName = 'slide-left';\n      this.$router.push('/' + this.$route.params.lang + '/fashion');\n    },\n    nextSlide: function nextSlide() {\n      if (this.slider.itemsTotal > this.slider.current + 1) this.slider._navigate(this.slider.current + 1);else if (this.slider.itemsTotal = this.slider.current + 1) this.slider._navigate(0);\n    }\n  },\n  components: {\n    slide: __WEBPACK_IMPORTED_MODULE_4__gallery_slide_vue___default.a\n  },\n  mounted: function mounted() {\n    this.slider = new Slideshow(document.querySelector('.slideshow'));\n    document.querySelector('.slideshow').appendChild(window.smoke);\n    setInterval(this.nextSlide, 7000);\n  }\n});\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    image: {\n      type: String,\n      required: true\n    },\n    alt: {\n      type: String,\n      default: 'Farnosova'\n    }\n  }\n});\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n\tprops: {\n\t\timage: {\n\t\t\ttype: String\n\t\t},\n\t\ttext: {\n\t\t\ttype: String\n\t\t}\n\t}\n});\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n\n\n;(function (window) {\n\n\t'use strict';\n\n\tfunction extend(a, b) {\n\t\tfor (var key in b) {\n\t\t\tif (b.hasOwnProperty(key)) {\n\t\t\t\ta[key] = b[key];\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tfunction getMousePos(e) {\n\t\tvar posx = 0,\n\t\t    posy = 0;\n\t\tif (!e) var e = window.event;\n\t\tif (e.pageX || e.pageY) {\n\t\t\tposx = e.pageX;\n\t\t\tposy = e.pageY;\n\t\t} else if (e.clientX || e.clientY) {\n\t\t\tposx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\tposy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t}\n\t\treturn { x: posx, y: posy };\n\t}\n\n\tfunction lineEq(y2, y1, x2, x1, currentVal) {\n\t\tvar m = (y2 - y1) / (x2 - x1),\n\t\t    b = y1 - m * x1;\n\n\t\treturn m * currentVal + b;\n\t}\n\n\tfunction MirrorFx(el, options) {\n\t\tthis.el = el;\n\t\tthis.options = extend({}, this.options);\n\t\textend(this.options, options);\n\t\tthis.imgs = {\n\t\t\tside1: this.el.querySelector('.mirror__side--one > img.mirror__img'),\n\t\t\tside2: this.el.querySelector('.mirror__side--two > img.mirror__img')\n\t\t};\n\n\t\tif (this.el.getAttribute('data-visible-area') != undefined) {\n\t\t\tthis.options.visibleArea = this.el.getAttribute('data-visible-area');\n\t\t}\n\t\tif (this.el.getAttribute('data-layout') != undefined) {\n\t\t\tthis.options.layout = this.el.getAttribute('data-layout');\n\t\t}\n\t\tif (this.el.getAttribute('data-tilt') != undefined) {\n\t\t\tthis.options.tilt = true;\n\t\t}\n\t}\n\n\tMirrorFx.prototype.options = {\n\t\tduration: { show: 1500, hide: 1000 },\n\n\t\teasing: { show: 'easeOutExpo', hide: 'easeOutQuint' },\n\n\t\tlayout: 'horizontal',\n\n\t\tvisibleArea: 1,\n\n\t\ttilt: false,\n\n\t\ttiltFactor: 0.6,\n\n\t\ttiltRotation: 10\n\t};\n\n\tMirrorFx.prototype._initTilt = function () {\n\t\tvar self = this;\n\t\tthis.imgs.side1.style.WebkitTransition = this.imgs.side2.style.transition = 'transform 0.2s ease-out';\n\n\t\tthis.mousemoveFn = function (ev) {\n\t\t\trequestAnimationFrame(function () {\n\t\t\t\tvar mousepos = getMousePos(ev),\n\t\t\t\t    docScrolls = { left: document.body.scrollLeft + document.documentElement.scrollLeft, top: document.body.scrollTop + document.documentElement.scrollTop },\n\t\t\t\t    win = { width: window.innerWidth, height: window.innerHeight },\n\t\t\t\t    relmousepos = { x: mousepos.x - docScrolls.left, y: mousepos.y - docScrolls.top },\n\t\t\t\t    d = self.options.layout === 'horizontal' ? win.width : win.height,\n\t\t\t\t    m = self.options.layout === 'horizontal' ? relmousepos.x : relmousepos.y,\n\t\t\t\t    tVal = m < d / 2 ? lineEq(self.options.visibleArea, self.options.visibleArea * self.options.tiltFactor, d / 2, 0, m) : lineEq(self.options.visibleArea * self.options.tiltFactor, self.options.visibleArea, d, d / 2, m),\n\t\t\t\t    rz = self.options.tiltRotation / win.height * relmousepos.y;\n\n\t\t\t\tself.imgs.side1.style.WebkitTransform = self.imgs.side1.style.transform = self.imgs.side2.style.WebkitTransform = self.imgs.side2.style.transform = 'translate' + (self.options.layout === 'horizontal' ? 'X' : 'Y') + '(' + (1 - tVal) * 100 + '%) rotateZ(' + rz + 'deg)';\n\t\t\t});\n\t\t};\n\t\twindow.addEventListener('mousemove', this.mousemoveFn);\n\t};\n\n\tMirrorFx.prototype._removeTilt = function () {\n\t\tthis.imgs.side1.style.WebkitTransition = this.imgs.side2.style.transition = 'none';\n\t\twindow.removeEventListener('mousemove', this.mousemoveFn);\n\t};\n\n\tMirrorFx.prototype._animate = function (action, callback) {\n\t\tthis._removeTilt();\n\n\t\tvar opts = {\n\t\t\ttargets: [this.imgs.side1, this.imgs.side2],\n\t\t\tduration: this.options.duration[action],\n\t\t\teasing: this.options.easing[action],\n\t\t\topacity: {\n\t\t\t\tvalue: action === 'show' ? [0, 1] : [1, 0],\n\t\t\t\tduration: action === 'show' ? this.options.duration[action] : this.options.duration[action] * .5,\n\t\t\t\teasing: this.options.easing[action]\n\t\t\t},\n\t\t\trotateZ: 0\n\t\t};\n\n\t\tif (this.options.layout === 'horizontal') {\n\t\t\topts.translateX = action === 'show' ? ['100%', Math.ceil((1 - this.options.visibleArea) * 100) + '%'] : '100%';\n\t\t} else {\n\t\t\topts.translateY = action === 'show' ? ['100%', Math.ceil((1 - this.options.visibleArea) * 100) + '%'] : '100%';\n\t\t}\n\n\t\tvar self = this;\n\n\t\topts.complete = typeof callback === 'function' ? function () {\n\t\t\tcallback();\n\t\t\tif (self.options.tilt && action === 'show') {\n\t\t\t\tself._initTilt();\n\t\t\t}\n\t\t} : function () {\n\t\t\tif (self.options.tilt && action === 'show') {\n\t\t\t\tself._initTilt();\n\t\t\t}\n\t\t};\n\n\t\tanime.remove(this.imgs.side1);\n\t\tanime.remove(this.imgs.side2);\n\t\tanime(opts);\n\t};\n\n\tMirrorFx.prototype.show = function (callback) {\n\t\tthis._animate('show', callback);\n\t};\n\n\tMirrorFx.prototype.hide = function (callback) {\n\t\tthis._animate('hide', callback);\n\t};\n\n\twindow.MirrorFx = MirrorFx;\n})(window);\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n;(function (window) {\n\t'use strict';\n\n\tfunction extend(a, b) {\n\t\tfor (var key in b) {\n\t\t\tif (b.hasOwnProperty(key)) {\n\t\t\t\ta[key] = b[key];\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tfunction Slideshow(el, options) {\n\t\tthis.el = el;\n\t\tthis.options = extend({}, this.options);\n\t\textend(this.options, options);\n\t\tthis.items = [].slice.call(this.el.querySelectorAll('.slide'));\n\t\tthis.itemsTotal = this.items.length;\n\t\tthis.current = 0;\n\t\tthis._init();\n\t}\n\n\tSlideshow.prototype.options = {\n\t\tduration: { show: 1500, hide: 500 },\n\t\tdelay: { show: 250, hide: 0 },\n\t\teasing: { show: 'easeOutExpo', hide: 'easeOutExpo' }\n\t};\n\n\tSlideshow.prototype._init = function () {\n\t\tvar self = this;\n\n\t\tthis.mirrorElems = [];\n\t\tthis.items.forEach(function (item) {\n\t\t\tself.mirrorElems.push(new MirrorFx(item.querySelector('.mirror')));\n\t\t});\n\n\t\tthis.items[this.current].classList.add('slide--current');\n\t\tthis.mirrorElems[this.current].show();\n\t};\n\n\tSlideshow.prototype._navigate = function (pos) {\n\t\tvar self = this,\n\t\t    currentItem = this.items[this.current],\n\t\t    nextItem = this.items[pos];\n\n\t\tthis.mirrorElems[this.current].hide(function () {\n\t\t\tcurrentItem.style.opacity = 0;\n\t\t\tcurrentItem.classList.remove('slide--current');\n\n\t\t\tself.current = pos;\n\n\t\t\tself.mirrorElems[self.current].show();\n\n\t\t\tnextItem.style.opacity = 1;\n\t\t\tnextItem.classList.add('slide--current');\n\n\t\t\tself.isAnimating = false;\n\t\t});\n\t};\n\n\twindow.Slideshow = Slideshow;\n})(window);\n\n/***/ }),\n/* 42 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js__ = __webpack_require__(81);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js__);\n\n\nvar camera, scene, renderer, geometry, material, mesh;\n\nvar clock = void 0,\n    cubeSineDriver = void 0,\n    light = void 0,\n    smokeTexture = void 0,\n    smokeMaterial = void 0,\n    smokeGeo = void 0,\n    smokeParticles = void 0,\n    p = void 0,\n    delta = void 0;\ninit();\nanimate();\n\nfunction init() {\n  clock = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.Clock();\n\n  renderer = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.WebGLRenderer();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  scene = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.Scene();\n\n  camera = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000);\n  camera.position.z = 1000;\n  scene.add(camera);\n\n  geometry = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.CubeGeometry(200, 200, 200);\n  material = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.MeshLambertMaterial({ color: 0xaa6666, wireframe: false });\n  mesh = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.Mesh(geometry, material);\n\n  cubeSineDriver = 0;\n\n  light = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.DirectionalLight(0xffffff, 0.5);\n  light.position.set(-1, 0, 1);\n  scene.add(light);\n\n  smokeTexture = __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.ImageUtils.loadTexture('/static/images/Smoke-Element.png');\n  smokeMaterial = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.MeshLambertMaterial({ color: 0x7317ef, map: smokeTexture, transparent: true });\n  smokeGeo = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.PlaneGeometry(300, 300);\n  smokeParticles = [];\n\n  for (p = 0; p < 150; p++) {\n    var particle = new __WEBPACK_IMPORTED_MODULE_0__static_js_three_min_js___default.a.Mesh(smokeGeo, smokeMaterial);\n    particle.position.set(Math.random() * 500 - 250, Math.random() * 500 - 250, Math.random() * 1000 - 100);\n    particle.rotation.z = Math.random() * 360;\n    scene.add(particle);\n    smokeParticles.push(particle);\n  }\n}\n\nfunction animate() {\n  delta = clock.getDelta();\n  requestAnimationFrame(animate);\n  evolveSmoke();\n  render();\n}\n\nfunction evolveSmoke() {\n  var sp = smokeParticles.length;\n  while (sp--) {\n    smokeParticles[sp].rotation.z += delta * 0.2;\n  }\n}\n\nfunction render() {\n\n  mesh.rotation.x += 0.005;\n  mesh.rotation.y += 0.01;\n  cubeSineDriver += .01;\n  mesh.position.z = 100 + Math.sin(cubeSineDriver) * 500;\n  renderer.render(scene, camera);\n}\n\nwindow.smoke = renderer.domElement;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__App__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__store__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__router__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vue_resource__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_jquery__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_jquery__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_jquery_match_height__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_jquery_match_height___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_jquery_match_height__);\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_4_vue_resource__[\"a\" /* default */]);\n\nwindow.$ = __WEBPACK_IMPORTED_MODULE_5_jquery___default.a;\nwindow.$.matchHeight = __WEBPACK_IMPORTED_MODULE_6_jquery_match_height___default.a;\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].config.productionTip = false;\n\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n  el: '#app',\n  store: __WEBPACK_IMPORTED_MODULE_2__store__[\"a\" /* default */],\n  router: __WEBPACK_IMPORTED_MODULE_3__router__[\"a\" /* default */],\n  template: '<App/>',\n  components: { App: __WEBPACK_IMPORTED_MODULE_1__App___default.a }\n});\n\n__WEBPACK_IMPORTED_MODULE_3__router__[\"a\" /* default */].afterEach(function () {\n  window.scrollTo(0, 0);\n  window.scrollIsDone = true;\n  __WEBPACK_IMPORTED_MODULE_2__store__[\"a\" /* default */].state.currentPath = __WEBPACK_IMPORTED_MODULE_3__router__[\"a\" /* default */].history.current.fullPath;\n  __WEBPACK_IMPORTED_MODULE_2__store__[\"a\" /* default */].state.lang = __WEBPACK_IMPORTED_MODULE_3__router__[\"a\" /* default */].history.current.fullPath.substr(1, 2);\n  __WEBPACK_IMPORTED_MODULE_2__store__[\"a\" /* default */].state.nav.visible = false;\n});\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(58)\n__webpack_require__(56)\n__webpack_require__(57)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(31),\n  /* template */\n  __webpack_require__(76),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(59)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(35),\n  /* template */\n  __webpack_require__(77),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(55)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(36),\n  /* template */\n  __webpack_require__(74),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(67),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(38),\n  /* template */\n  __webpack_require__(71),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(75),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    key: \"initial\",\n    staticClass: \"block_image\",\n    style: (_vm.staticStyle),\n    attrs: {\n      \"title\": _vm.alt\n    }\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"page_home__farnosova\"\n  }, [_c('div', {\n    staticClass: \"layer layer_image\",\n    staticStyle: {\n      \"background-image\": \"url('/static/images/image_NF.jpg\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"layer layer_padder --top draw\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"layer layer_padder --bottom draw\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"layer layer_image\",\n    staticStyle: {\n      \"background-image\": \"url('/static/images/image_NF_transparent.png\"\n    }\n  })])\n}]}\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"slideshow\"\n  }, [_c('slide', {\n    attrs: {\n      \"image\": \"/static/images/slider/image-girl.png\"\n    }\n  }), _vm._v(\" \"), _c('slide', {\n    attrs: {\n      \"image\": \"/static/images/slider/image-girl2.png\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"button-wrap button__arrow-right slider-button slider-button__left\"\n  }, [_c('a', {\n    staticClass: \"button__full button-border__regular button__slider \",\n    on: {\n      \"click\": _vm.navigateToIdar\n    }\n  }, [_c('span', [_vm._v(\"Interior Design & architecture\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"button-wrap button__arrow-right slider-button slider-button__right\"\n  }, [_c('a', {\n    staticClass: \"button__full button__full_inverse button-border__regular button__slider \",\n    on: {\n      \"click\": _vm.navigateToFashion\n    }\n  }, [_c('span', [_vm._v(\"Fashion\")])])])], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"col-xs-12\"\n  }, [_c('div', {\n    staticClass: \"row h100\"\n  }, [_c('div', {\n    staticClass: \"banner\",\n    style: ({\n      backgroundImage: 'url(' + _vm.image + ')'\n    })\n  }, [(_vm.text) ? _c('h1', {\n    staticClass: \"banner__title\"\n  }, [_vm._v(_vm._s(_vm.text))]) : _vm._e(), _vm._v(\" \"), _vm._t(\"default\")], 2)])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [(!this.$store.state.preloaderDone) ? _c('app-preloader') : _vm._e(), _vm._v(\" \"), (this.$store.state.preloaderDone) ? _c('app-nav-global') : _vm._e(), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": _vm.$store.state.transitionName\n    },\n    on: {\n      \"after-enter\": function($event) {\n        _vm.$store.state.transitionName = 'fade'\n      }\n    }\n  }, [(this.$store.state.preloaderDone) ? _c('router-view') : _vm._e()], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"slide\"\n  }, [_c('div', {\n    staticClass: \"mirror\",\n    attrs: {\n      \"data-visible-area\": \"0.85\"\n    }\n  }, [_c('div', {\n    staticClass: \"mirror__side mirror__side--one\"\n  }, [_c('img', {\n    staticClass: \"mirror__img\",\n    attrs: {\n      \"src\": _vm.image,\n      \"alt\": _vm.alt\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"mirror__side mirror__side--two\"\n  }, [_c('img', {\n    staticClass: \"mirror__img\",\n    attrs: {\n      \"src\": _vm.image,\n      \"alt\": _vm.alt\n    }\n  })])])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('app-info', {\n    attrs: {\n      \"first\": \"image\"\n    }\n  }, [_c('h4', {\n    staticClass: \"title\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.contact_info[_vm.$route.params.lang]['title']))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"description contacts\",\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.contact_info[_vm.$route.params.lang]['description'])\n    },\n    slot: \"text\"\n  }), _vm._v(\" \"), _c('a', {\n    staticClass: \"button__full button-border__regular\",\n    on: {\n      \"click\": _vm.goToContact\n    },\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.contact_info[_vm.$route.params.lang]['button']))]), _vm._v(\" \"), _c('div', {\n    slot: \"image\"\n  }, [_c('app-block-image', {\n    staticClass: \"bg-image image\",\n    attrs: {\n      \"bg_image\": _vm.contact_info[_vm.$route.params.lang]['image']\n    }\n  })], 1)])], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"col-xs-12 info_divided\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-sm-6 col-lg-6 info-block match-height\",\n    class: {\n      'col-sm-push-6': (_vm.first == 'text')\n    }\n  }, [_vm._t(\"image\")], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-6 col-lg-3 col-lg-offset-1 info-block match-height\",\n    class: {\n      'col-sm-pull-6': (_vm.first == 'text')\n    }\n  }, [_c('div', {\n    staticClass: \"table h100\"\n  }, [_c('div', {\n    staticClass: \"table-cell vam\"\n  }, [_vm._t(\"text\")], 2)])])])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"section-preloader\",\n    attrs: {\n      \"id\": \"section-preloader\"\n    }\n  }, [_c('div', {\n    staticClass: \"section-border\",\n    attrs: {\n      \"id\": \"section-border\"\n    }\n  }, [_c('div', {\n    staticClass: \"pre-hr pre-hr_top\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"pre-hr pre-hr_bottom\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"pre-hr pre-hr_left\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"pre-hr pre-hr_right\"\n  }), _vm._v(\" \"), _c('svg', {\n    staticClass: \"svg-farnosova\",\n    staticStyle: {\n      \"enable-background\": \"new 0 0 999.9 88\"\n    },\n    attrs: {\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n      \"x\": \"0px\",\n      \"y\": \"0px\",\n      \"viewBox\": \"0 0 999.9 88\",\n      \"xml:space\": \"preserve\"\n    }\n  }, [_c('defs', {\n    attrs: {\n      \"xmlns\": \"http://www.w3.org/2000/svg\"\n    }\n  }, [_c('filter', {\n    attrs: {\n      \"x\": \"-50%\",\n      \"y\": \"-50%\",\n      \"width\": \"200%\",\n      \"height\": \"200%\",\n      \"id\": \"boom\"\n    }\n  }, [_c('feFlood', {\n    attrs: {\n      \"id\": \"flood-loader\",\n      \"flood-color\": \"rgb(0, 0, 0)\",\n      \"flood-opacity\": \"1\"\n    }\n  }), _vm._v(\" \"), _c('feComposite', {\n    attrs: {\n      \"in2\": \"SourceGraphic\",\n      \"operator\": \"out\"\n    }\n  }), _vm._v(\" \"), _c('feGaussianBlur', {\n    attrs: {\n      \"stdDeviation\": \"9\"\n    }\n  }), _vm._v(\" \"), _c('feOffset', {\n    attrs: {\n      \"dx\": \"6\",\n      \"dy\": \"6\"\n    }\n  }), _vm._v(\" \"), _c('feComposite', {\n    attrs: {\n      \"in2\": \"SourceAlpha\",\n      \"operator\": \"in\",\n      \"result\": \"r1\"\n    }\n  })], 1)]), _vm._v(\" \"), _c('path', {\n    staticClass: \"logo-letters\",\n    attrs: {\n      \"data-svg-origin\": \"0 5.1999969482421875\",\n      \"filter\": \"url(#boom)\",\n      \"d\": \"M1000.9 85c-9.8 1.1-18.5-1.1-26.9-6.7-11.8-7.7-24.2-14.4-36.9-21.8-3.2 6.9-6.5 13.2-9.2 19.8-3.6 8.7-5.1 9.9-14.5 8.9-1.1-.1-2.3-.1-4.3-.2 5.5-11.8 10.7-23.2 16.2-35.1C916.1 44.4 907 39 898 33.6c11.1-.7 22.4-4 32.5 5.1 3-6.3 5.7-12.1 8.4-17.9 1.2-2.6 2.4-5.1 3.6-7.7 3.8-8.3 8.5-11 17.3-8.7 2.6.7 5.3 3.5 6.5 6 11.4 24.1 22.4 48.3 33.6 72.4.2.4.6.8.9 1.2.1.3.1.7.1 1zm-23.5-19.4c-7.7-16.5-14.8-31.8-22.4-48-4.5 9.8-8.6 18.6-12.8 27.7 10.7 6.4 20.9 12.5 31.2 18.6.8.5 1.8.8 4 1.7zM801.2 5c.9-.2 1.3-.4 1.8-.4 11.7-.9 11.7-.9 16.5 9.6 8.1 17.3 16.1 34.7 24.2 52 .8 1.6 1.6 3.2 2.7 5.5 1.7-3.4 3-6.2 4.4-9.1 8-17.2 16.2-34.3 23.8-51.6 2.2-5.1 5-7.4 10.5-6.5 2.1.3 4.2.1 7.2.1-.9 2.2-1.5 3.7-2.2 5.2-11 23.7-22.3 47.2-33 71.1-2.8 6.3-7.9 4.1-12.3 4.9-3.9.7-7.2-.7-9-4.6-11.5-24.9-22.9-49.9-34.4-74.8-.1-.4-.1-.7-.2-1.4zm-59.5-5c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44-20.4-44-45.5-44zm0 75.6c-18 0-32.6-14.1-32.6-31.6s14.6-31.6 32.6-31.6 32.6 14.1 32.6 31.6-14.6 31.6-32.6 31.6zm-154.4-2.5c2.3-3.5 4.4-6.8 6.7-10.4 3.9 2 7.6 3.9 11.3 5.7 11.9 5.5 24.2 7 36.9 3.7 2.8-.7 5.6-2.1 8.1-3.7 3.5-2.1 4.5-5.6 3.8-9.5-.7-4-3.3-6.2-7.1-6.7-10.4-1.5-20.8-2.7-31.2-4.1-2.8-.4-5.6-.6-8.4-1.1-8.6-1.7-15.2-5.7-17.1-15.1-1.8-8.6 1.3-18 9.4-22.4 6.1-3.4 13.2-5.6 20.1-6.6 12.9-1.8 25.6 0 37.3 6.1 2.6 1.4 5 3.1 8 5-2.9 3.6-5.4 6.7-8.2 10.2-10.3-5.9-21.3-8.9-33-8.1-4.3.3-8.6 1-12.8 2-4.1 1-6.7 4-6.3 8.4.3 4.1 3.6 5.1 7.1 5.7 13 2.1 25.9 4.3 38.9 6.5 9.2 1.6 15.8 6.3 17.5 15.9 1.8 10.1-.3 19.4-9.3 25-5.3 3.3-11.8 5.7-18 6.6-19.1 2.7-37.5.1-53.7-13.1zM515 0c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44S540.1 0 515 0zm0 75.6c-18 0-32.6-14.1-32.6-31.6S497 12.4 515 12.4s32.6 14.1 32.6 31.6-14.5 31.6-32.6 31.6zM374.1 19.8v65h-12.5V4.9c6.1 0 12.2-.4 18.2.2 1.8.2 3.6 2.7 4.9 4.6 13.1 18.6 26.2 37.4 39.2 56.1 1.1 1.6 2.3 3.1 4.6 4.5V5.2h12.8v80c-6 0-11.8.3-17.5-.2-1.8-.2-3.8-2.4-5-4.2-13.4-18.9-26.6-37.9-39.9-56.8-1.1-1.6-2.3-3.1-3.5-4.7-.5.1-.9.3-1.3.5zm-64.2 36.3c5.5 9.1 11.3 18.7 17.6 29-5 0-9.2.3-13.2-.2-1.6-.2-3.3-2-4.3-3.6-4.5-7-8.9-14.1-13-21.3-2-3.4-4.4-4.9-8.4-4.9-9.4.2-18.9.1-29 .1v29.5h-13.1V4.5h13.1c13.5-.1 27-.1 40.5-.2 9.6-.1 18.1 2.4 22.8 11.4 5.1 9.8 5.4 20.1-.6 29.5-2.9 4.3-7.9 7-12.4 10.9zm-49.8-15c14.8 0 29.1.1 43.4 0 4.6 0 7.3-2.8 8.5-7.1 2.3-8.8-1.9-15-11.1-15.3-13-.4-26-.1-38.9-.1-.6 0-1.2.3-1.8.5-.1 7.4-.1 14.5-.1 22zM157 56.3c-3.3 7.3-6.3 13.5-9.1 19.9-3.8 8.9-4.4 9.4-14 8.9-1.3-.1-2.6 0-4.8 0 5.5-12 10.8-23.4 16.3-35.3-9.2-5.5-18.3-10.9-27.3-16.3 11.3-1.1 22.6-3.8 32.7 4.8 4.6-9.8 8.9-19.1 13.3-28.5 3.4-7.3 16.4-8.4 21.1-1.6.9 1.2 1.5 2.6 2.2 3.9 10.6 22.8 21.2 45.5 31.7 68.3.6 1.3 1.1 2.7 1.7 4.3-8.9 1.4-16.7-.3-24.1-4.9-13-7.8-26-15.4-39.7-23.5zm5.3-11c11.5 6.9 22.7 13.5 33.8 20.1.3-.3.5-.6.8-1-7.1-15.3-14.2-30.5-21.8-46.9-4.5 9.8-8.6 18.6-12.8 27.8zM1 36h30.8V5.3h71.8V17H46.1v18.4h39.5v13.4h-40v35.7H32.3V48.9H1V36z\"\n    }\n  })])])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"page_home__lastestProjectImage\"\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"page page_home page_no-pagination\"\n  }, [_c('app-gallery'), _vm._v(\" \"), _c('app-info', {\n    class: _vm.$store.state.currentPageSlide == 2 ? 'current' : '',\n    attrs: {\n      \"first\": \"text\"\n    }\n  }, [_c('h4', {\n    staticClass: \"title\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_1']['title']))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"description\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_1']['description']))]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button__full button-border__regular\",\n    on: {\n      \"click\": _vm.navigateToFarnosova\n    },\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_1']['button']))]), _vm._v(\" \"), _c('div', {\n    slot: \"image\"\n  }, [_c('farnosova')], 1)]), _vm._v(\" \"), _c('app-info', {\n    class: _vm.$store.state.currentPageSlide == 3 ? 'current' : '',\n    attrs: {\n      \"first\": \"image\"\n    }\n  }, [_c('h4', {\n    staticClass: \"title\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_2']['title']))]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button_arrow button_arrow__big white\",\n    on: {\n      \"click\": _vm.navigateToLastest\n    },\n    slot: \"text\"\n  }, [_c('svg', {\n    staticClass: \"svg-line\",\n    staticStyle: {\n      \"enable-background\": \"new 0 0 151 7\"\n    },\n    attrs: {\n      \"version\": \"1.1\",\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n      \"x\": \"0px\",\n      \"y\": \"0px\",\n      \"viewBox\": \"0 0 150 5\",\n      \"xml:space\": \"preserve\"\n    }\n  }, [_c('polygon', {\n    staticClass: \"svg_path-line\",\n    attrs: {\n      \"points\": \"151,3.5 147,0 147,3 0,3 0,4 147,4 147,7  \"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    slot: \"image\"\n  }, [_c('lastestProjectsImage')], 1)]), _vm._v(\" \"), _c('app-info', {\n    attrs: {\n      \"first\": \"text\"\n    }\n  }, [_c('h4', {\n    staticClass: \"title\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_3']['title']))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"description\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_3']['description']))]), _vm._v(\" \"), _c('a', {\n    staticClass: \" button_arrow button_arrow__big white\",\n    on: {\n      \"click\": _vm.navigateToMedia\n    },\n    slot: \"text\"\n  }, [_c('svg', {\n    staticClass: \"svg-line\",\n    staticStyle: {\n      \"enable-background\": \"new 0 0 151 7\"\n    },\n    attrs: {\n      \"version\": \"1.1\",\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n      \"x\": \"0px\",\n      \"y\": \"0px\",\n      \"viewBox\": \"0 0 150 5\",\n      \"xml:space\": \"preserve\"\n    }\n  }, [_c('polygon', {\n    staticClass: \"svg_path-line\",\n    attrs: {\n      \"points\": \"151,3.5 147,0 147,3 0,3 0,4 147,4 147,7  \"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    slot: \"image\"\n  }, [_c('app-block-image', {\n    staticClass: \"bg-image image\",\n    attrs: {\n      \"bg_image\": _vm.page_home[_vm.$route.params.lang]['info_3']['image']\n    }\n  })], 1)]), _vm._v(\" \"), _c('app-contact')], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return (_vm.$route.params.lang) ? _c('nav', {\n    staticClass: \" navbar-default\",\n    attrs: {\n      \"id\": \"nav_global\"\n    }\n  }, [_c('div', {\n    staticClass: \"container-fluid\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"logo fixed\"\n  }, [_c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/'\n    }\n  }, [_c('svg', {\n    staticClass: \"svg-farnosova\",\n    staticStyle: {\n      \"enable-background\": \"new 0 0 999.9 88\"\n    },\n    attrs: {\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n      \"x\": \"0px\",\n      \"y\": \"0px\",\n      \"viewBox\": \"0 0 999.9 88\",\n      \"xml:space\": \"preserve\"\n    }\n  }, [_c('path', {\n    staticStyle: {\n      \"fill\": \"#fff\"\n    },\n    attrs: {\n      \"d\": \"M1000.9 85c-9.8 1.1-18.5-1.1-26.9-6.7-11.8-7.7-24.2-14.4-36.9-21.8-3.2 6.9-6.5 13.2-9.2 19.8-3.6 8.7-5.1 9.9-14.5 8.9-1.1-.1-2.3-.1-4.3-.2 5.5-11.8 10.7-23.2 16.2-35.1C916.1 44.4 907 39 898 33.6c11.1-.7 22.4-4 32.5 5.1 3-6.3 5.7-12.1 8.4-17.9 1.2-2.6 2.4-5.1 3.6-7.7 3.8-8.3 8.5-11 17.3-8.7 2.6.7 5.3 3.5 6.5 6 11.4 24.1 22.4 48.3 33.6 72.4.2.4.6.8.9 1.2.1.3.1.7.1 1zm-23.5-19.4c-7.7-16.5-14.8-31.8-22.4-48-4.5 9.8-8.6 18.6-12.8 27.7 10.7 6.4 20.9 12.5 31.2 18.6.8.5 1.8.8 4 1.7zM801.2 5c.9-.2 1.3-.4 1.8-.4 11.7-.9 11.7-.9 16.5 9.6 8.1 17.3 16.1 34.7 24.2 52 .8 1.6 1.6 3.2 2.7 5.5 1.7-3.4 3-6.2 4.4-9.1 8-17.2 16.2-34.3 23.8-51.6 2.2-5.1 5-7.4 10.5-6.5 2.1.3 4.2.1 7.2.1-.9 2.2-1.5 3.7-2.2 5.2-11 23.7-22.3 47.2-33 71.1-2.8 6.3-7.9 4.1-12.3 4.9-3.9.7-7.2-.7-9-4.6-11.5-24.9-22.9-49.9-34.4-74.8-.1-.4-.1-.7-.2-1.4zm-59.5-5c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44-20.4-44-45.5-44zm0 75.6c-18 0-32.6-14.1-32.6-31.6s14.6-31.6 32.6-31.6 32.6 14.1 32.6 31.6-14.6 31.6-32.6 31.6zm-154.4-2.5c2.3-3.5 4.4-6.8 6.7-10.4 3.9 2 7.6 3.9 11.3 5.7 11.9 5.5 24.2 7 36.9 3.7 2.8-.7 5.6-2.1 8.1-3.7 3.5-2.1 4.5-5.6 3.8-9.5-.7-4-3.3-6.2-7.1-6.7-10.4-1.5-20.8-2.7-31.2-4.1-2.8-.4-5.6-.6-8.4-1.1-8.6-1.7-15.2-5.7-17.1-15.1-1.8-8.6 1.3-18 9.4-22.4 6.1-3.4 13.2-5.6 20.1-6.6 12.9-1.8 25.6 0 37.3 6.1 2.6 1.4 5 3.1 8 5-2.9 3.6-5.4 6.7-8.2 10.2-10.3-5.9-21.3-8.9-33-8.1-4.3.3-8.6 1-12.8 2-4.1 1-6.7 4-6.3 8.4.3 4.1 3.6 5.1 7.1 5.7 13 2.1 25.9 4.3 38.9 6.5 9.2 1.6 15.8 6.3 17.5 15.9 1.8 10.1-.3 19.4-9.3 25-5.3 3.3-11.8 5.7-18 6.6-19.1 2.7-37.5.1-53.7-13.1zM515 0c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44S540.1 0 515 0zm0 75.6c-18 0-32.6-14.1-32.6-31.6S497 12.4 515 12.4s32.6 14.1 32.6 31.6-14.5 31.6-32.6 31.6zM374.1 19.8v65h-12.5V4.9c6.1 0 12.2-.4 18.2.2 1.8.2 3.6 2.7 4.9 4.6 13.1 18.6 26.2 37.4 39.2 56.1 1.1 1.6 2.3 3.1 4.6 4.5V5.2h12.8v80c-6 0-11.8.3-17.5-.2-1.8-.2-3.8-2.4-5-4.2-13.4-18.9-26.6-37.9-39.9-56.8-1.1-1.6-2.3-3.1-3.5-4.7-.5.1-.9.3-1.3.5zm-64.2 36.3c5.5 9.1 11.3 18.7 17.6 29-5 0-9.2.3-13.2-.2-1.6-.2-3.3-2-4.3-3.6-4.5-7-8.9-14.1-13-21.3-2-3.4-4.4-4.9-8.4-4.9-9.4.2-18.9.1-29 .1v29.5h-13.1V4.5h13.1c13.5-.1 27-.1 40.5-.2 9.6-.1 18.1 2.4 22.8 11.4 5.1 9.8 5.4 20.1-.6 29.5-2.9 4.3-7.9 7-12.4 10.9zm-49.8-15c14.8 0 29.1.1 43.4 0 4.6 0 7.3-2.8 8.5-7.1 2.3-8.8-1.9-15-11.1-15.3-13-.4-26-.1-38.9-.1-.6 0-1.2.3-1.8.5-.1 7.4-.1 14.5-.1 22zM157 56.3c-3.3 7.3-6.3 13.5-9.1 19.9-3.8 8.9-4.4 9.4-14 8.9-1.3-.1-2.6 0-4.8 0 5.5-12 10.8-23.4 16.3-35.3-9.2-5.5-18.3-10.9-27.3-16.3 11.3-1.1 22.6-3.8 32.7 4.8 4.6-9.8 8.9-19.1 13.3-28.5 3.4-7.3 16.4-8.4 21.1-1.6.9 1.2 1.5 2.6 2.2 3.9 10.6 22.8 21.2 45.5 31.7 68.3.6 1.3 1.1 2.7 1.7 4.3-8.9 1.4-16.7-.3-24.1-4.9-13-7.8-26-15.4-39.7-23.5zm5.3-11c11.5 6.9 22.7 13.5 33.8 20.1.3-.3.5-.6.8-1-7.1-15.3-14.2-30.5-21.8-46.9-4.5 9.8-8.6 18.6-12.8 27.8zM1 36h30.8V5.3h71.8V17H46.1v18.4h39.5v13.4h-40v35.7H32.3V48.9H1V36z\"\n    }\n  })])])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"social-icons fixed\"\n  }, [_c('ul', {\n    staticClass: \"social-list\"\n  }, _vm._l((_vm.nav_global[_vm.$route.params.lang]['social']), function(link) {\n    return _c('li', {\n      key: link\n    }, [_c('a', {\n      staticClass: \"social__link\",\n      attrs: {\n        \"href\": link.url,\n        \"target\": \"_blank\"\n      }\n    }, [_vm._v(_vm._s(link.text))])])\n  }))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"lang-switch fixed\"\n  }, [_c('a', {\n    staticClass: \"lang__link\",\n    on: {\n      \"click\": function($event) {\n        _vm.changeLang()\n      }\n    }\n  }, [_vm._v(_vm._s(_vm._f(\"alternateLang\")(_vm.$route.params.lang)))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"menu fixed\"\n  }, [_c('ul', [_c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/idar',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['idar']))])]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/fashion',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['fashion']))])]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/services',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['services']))])]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/farnosova',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['farnosova']))])]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/contact',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['contact']))])])], 1)])]) : _vm._e()\n},staticRenderFns: []}\n\n/***/ }),\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// threejs.org/license\nvar THREE={REVISION:\"71\"};\"object\"===typeof module&&(module.exports=THREE);void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});THREE.log=function(){console.log.apply(console,arguments)};THREE.warn=function(){console.warn.apply(console,arguments)};THREE.error=function(){console.error.apply(console,arguments)};THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;\nTHREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;\nTHREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;\nTHREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;\nTHREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;\nTHREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;\nTHREE.Projector=function(){THREE.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\");this.projectVector=function(a,b){THREE.warn(\"THREE.Projector: .projectVector() is now vector.project().\");a.project(b)};this.unprojectVector=function(a,b){THREE.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");a.unproject(b)};this.pickingRay=function(a,b){THREE.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}};\nTHREE.CanvasRenderer=function(){THREE.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\");this.domElement=document.createElement(\"canvas\");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};\nTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):\"number\"===typeof a?this.setHex(a):\"string\"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*\nc:.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a};b=.5>=c?c*(1+b):c+b-c*b;c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(a))return a=/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(a))return a=/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(a),this.r=\nMath.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\\#([0-9a-f]{6})$/i.test(a))return a=/^\\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=\na.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var c=0<b?1/b:1;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=Math.pow(a.b,c);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=\nMath.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k/(e+f):k/(2-e-f);switch(e){case b:g=(c-d)/k+(c<d?6:0);break;case c:g=(d-b)/k+2;break;case d:g=(b-c)/k+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return\"rgb(\"+\n(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;\nreturn this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};\nTHREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,\ndarkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,\ngrey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,\nlime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,\npalegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,\ntomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};\nTHREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;\nthis._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error(\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);\"XYZ\"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"YXZ\"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=\nc*d*h-f*g*e,this._w=c*d*e+f*g*h):\"ZXY\"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"ZYX\"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"YZX\"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):\"XZY\"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,\nb){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5/Math.sqrt(l+1),this._w=.25/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=\n.25*c,this._z=(g+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+k)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=\n-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},\nmultiply:function(a,b){return void 0!==b?(THREE.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,k=b._z,l=b._w;this._x=c*l+f*g+d*k-e*h;this._y=d*l+f*h+e*g-c*k;this._z=e*l+f*k+c*h-d*g;this._w=f*l-c*g-d*h-e*k;this.onChangeCallback();return this},multiplyVector3:function(a){THREE.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");\nreturn a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),k=Math.sqrt(1-g*g);if(.001>Math.abs(k))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;g=Math.sin((1-b)*h)/k;h=\nMath.sin(b*h)/k;this._w=f*g+this._w*h;this._x=c*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=\na;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\nTHREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error(\"index is out of range: \"+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,\nb){if(void 0!==b)return THREE.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},sub:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},\nsubScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);\nthis.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=\nMath.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},\ndistanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===\na&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];return this},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\nTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error(\"index is out of range: \"+\na);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),\nthis.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=\na;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&THREE.error(\"THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.\");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,\nc));return this}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*\nc+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),\nunproject:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=\na):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,\nb=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):\nMath.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},\nsetLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},cross:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=\ne*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this},projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===\na&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){THREE.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},\nsetEulerFromQuaternion:function(a,b){THREE.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(a){THREE.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){THREE.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,\nb){THREE.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;\nreturn this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=\na.array[b+2];return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\nTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;\ncase 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error(\"index is out of range: \"+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,\nb){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=\na;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>\nb?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var l=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>Math.abs(k-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(k+b)&&.1>Math.abs(e+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+g)/4;f=(f+c)/4;k=(k+b)/4;e>h&&e>l?.01>e?(b=0,d=c=.707106781):(b=\nMath.sqrt(e),c=d/b,d=f/b):h>l?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),b=d/c,d=k/c):.01>l?(c=b=.707106781,d=0):(d=Math.sqrt(l),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-k)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+l-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&\n(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=\nMath.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);\nthis.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+\nMath.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},\nfromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=a.array[b+3];return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};\nTHREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=\"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");THREE.Euler.DefaultOrder=\"XYZ\";\nTHREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},copy:function(a){this._x=\na._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],l=e[9],p=e[2],q=e[6],e=e[10];b=b||this._order;\"XYZ\"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,e),this._z=Math.atan2(-f,a)):(this._x=Math.atan2(q,k),this._z=0)):\"YXZ\"===b?(this._x=Math.asin(-d(l,-1,1)),.99999>Math.abs(l)?(this._y=Math.atan2(g,e),this._z=Math.atan2(h,\nk)):(this._y=Math.atan2(-p,a),this._z=0)):\"ZXY\"===b?(this._x=Math.asin(d(q,-1,1)),.99999>Math.abs(q)?(this._y=Math.atan2(-p,e),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,a))):\"ZYX\"===b?(this._y=Math.asin(-d(p,-1,1)),.99999>Math.abs(p)?(this._x=Math.atan2(q,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-f,k))):\"YZX\"===b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-p,a)):(this._x=0,this._y=Math.atan2(g,e))):\"XZY\"===b?(this._z=\nMath.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(q,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-l,e),this._y=0)):THREE.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeRotationFromQuaternion(b);this.setFromRotationMatrix(a,c,d);return this}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,\nb||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._order;return a},toVector3:function(a){return a?\na.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};\nTHREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,\nb){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);\nthis.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};\nTHREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=\nthis.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);\nthis.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>\nthis.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\na.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};\nTHREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);\nthis.makeEmpty();b.traverse(function(b){var e=b.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var f=e.vertices,e=0,g=f.length;e<g;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(e instanceof THREE.BufferGeometry&&void 0!==e.attributes.position)for(f=e.attributes.position.array,e=0,g=f.length;e<g;e+=3)a.set(f[e],f[e+1],f[e+2]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},\nmakeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);\nthis.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-\nthis.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=\nnew THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,\nthis.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);\nthis.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&THREE.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[3]=b;l[6]=c;l[1]=d;l[4]=e;l[7]=f;l[2]=g;l[5]=h;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){THREE.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");return a.applyMatrix3(this)},\nmultiplyVector3Array:function(a){THREE.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=\na;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];\nc=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");THREE.warn(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];\na[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}};\nTHREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&THREE.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,k,l,p,q,n,t,r,s){var u=this.elements;u[0]=a;u[4]=b;u[8]=c;u[12]=d;u[1]=e;u[5]=f;u[9]=g;u[13]=h;u[2]=k;u[6]=l;u[10]=p;u[14]=q;u[3]=n;u[7]=t;u[11]=r;u[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){THREE.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");return this.copyPosition(a)},\ncopyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){var d=this.elements;a.set(d[0],d[1],d[2]);b.set(d[4],d[5],d[6]);c.set(d[8],d[9],d[10]);return this},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements;b=b.elements;var d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),\nf=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&THREE.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if(\"XYZ\"===a.order){a=f*h;var k=f*e,\nl=c*h,p=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=k+l*d;b[5]=a-p*d;b[9]=-c*g;b[2]=p-a*d;b[6]=l+k*d;b[10]=f*g}else\"YXZ\"===a.order?(a=g*h,k=g*e,l=d*h,p=d*e,b[0]=a+p*c,b[4]=l*c-k,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=k*c-l,b[6]=p+a*c,b[10]=f*g):\"ZXY\"===a.order?(a=g*h,k=g*e,l=d*h,p=d*e,b[0]=a-p*c,b[4]=-f*e,b[8]=l+k*c,b[1]=k+l*c,b[5]=f*h,b[9]=p-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):\"ZYX\"===a.order?(a=f*h,k=f*e,l=c*h,p=c*e,b[0]=g*h,b[4]=l*d-k,b[8]=a*d+p,b[1]=g*e,b[5]=p*d+a,b[9]=k*d-l,b[2]=-d,b[6]=c*g,b[10]=f*g):\"YZX\"===\na.order?(a=f*g,k=f*d,l=c*g,p=c*d,b[0]=g*h,b[4]=p-a*e,b[8]=l*e+k,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+l,b[10]=a-p*e):\"XZY\"===a.order&&(a=f*g,k=f*d,l=c*g,p=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+p,b[5]=f*h,b[9]=k*e-l,b[2]=l*e-k,b[6]=c*h,b[10]=p*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){THREE.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");return this.makeRotationFromQuaternion(a)},\nmakeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*h,c=c*k,p=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(p+e);b[4]=l-f;b[8]=c+h;b[1]=l+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+p);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,\nc).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(THREE.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],\nk=c[12],l=c[1],p=c[5],q=c[9],n=c[13],t=c[2],r=c[6],s=c[10],u=c[14],v=c[3],x=c[7],D=c[11],c=c[15],w=d[0],y=d[4],A=d[8],E=d[12],G=d[1],F=d[5],z=d[9],I=d[13],U=d[2],M=d[6],H=d[10],L=d[14],P=d[3],N=d[7],R=d[11],d=d[15];e[0]=f*w+g*G+h*U+k*P;e[4]=f*y+g*F+h*M+k*N;e[8]=f*A+g*z+h*H+k*R;e[12]=f*E+g*I+h*L+k*d;e[1]=l*w+p*G+q*U+n*P;e[5]=l*y+p*F+q*M+n*N;e[9]=l*A+p*z+q*H+n*R;e[13]=l*E+p*I+q*L+n*d;e[2]=t*w+r*G+s*U+u*P;e[6]=t*y+r*F+s*M+u*N;e[10]=t*A+r*z+s*H+u*R;e[14]=t*E+r*I+s*L+u*d;e[3]=v*w+x*G+D*U+c*P;e[7]=v*y+\nx*F+D*M+c*N;e[11]=v*A+x*z+D*H+c*R;e[15]=v*E+x*I+D*L+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=\na;b[15]*=a;return this},multiplyVector3:function(a){THREE.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\");return a.applyProjection(this)},multiplyVector4:function(a){THREE.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},multiplyVector3Array:function(a){THREE.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");\nreturn this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix4(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){THREE.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");a.transformDirection(this)},crossVector:function(a){THREE.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");\nreturn a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],k=a[13],l=a[2],p=a[6],q=a[10],n=a[14];return a[3]*(+e*h*p-d*k*p-e*g*q+c*k*q+d*g*n-c*h*n)+a[7]*(+b*h*n-b*k*q+e*f*q-d*f*n+d*k*l-e*h*l)+a[11]*(+b*k*p-b*g*n-e*f*p+c*f*n+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*p+b*g*q+d*f*p-c*f*q+c*h*l)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];\na[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){THREE.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");var b=\nthis.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],k=d[1],l=d[5],p=d[9],q=d[13],n=d[2],t=d[6],r=d[10],s=d[14],u=d[3],v=d[7],x=d[11],d=d[15];c[0]=p*s*v-q*r*v+q*t*x-l*s*x-p*t*d+l*r*d;c[4]=h*r*v-g*s*v-h*t*x+f*s*x+g*t*d-f*r*d;c[8]=g*q*v-h*p*v+h*l*x-f*q*x-g*l*d+f*p*d;c[12]=h*p*t-g*q*t-h*l*r+f*q*r+g*l*s-f*p*s;c[1]=q*r*u-p*s*u-q*n*x+\nk*s*x+p*n*d-k*r*d;c[5]=g*s*u-h*r*u+h*n*x-e*s*x-g*n*d+e*r*d;c[9]=h*p*u-g*q*u-h*k*x+e*q*x+g*k*d-e*p*d;c[13]=g*q*n-h*p*n+h*k*r-e*q*r-g*k*s+e*p*s;c[2]=l*s*u-q*t*u+q*n*v-k*s*v-l*n*d+k*t*d;c[6]=h*t*u-f*s*u-h*n*v+e*s*v+f*n*d-e*t*d;c[10]=f*q*u-h*l*u+h*k*v-e*q*v-f*k*d+e*l*d;c[14]=h*l*n-f*q*n-h*k*t+e*q*t+f*k*s-e*l*s;c[3]=p*t*u-l*r*u-p*n*v+k*r*v+l*n*x-k*t*x;c[7]=f*r*u-g*t*u+g*n*v-e*r*v-f*n*x+e*t*x;c[11]=g*l*u-f*p*u-g*k*v+e*p*v+f*k*x-e*l*x;c[15]=f*p*n-g*l*n+g*k*t-e*p*t-f*k*r+e*l*r;c=e*c[0]+k*c[4]+n*c[8]+u*c[12];\nif(0==c){if(b)throw Error(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");THREE.warn(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(a){THREE.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(a){THREE.error(\"THREE.Matrix4: .rotateX() has been removed.\")},rotateY:function(a){THREE.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(a){THREE.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},\nrotateByAxis:function(a,b){THREE.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,\nc,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,k=e*f,l=e*g;this.set(k*f+c,k*g-d*h,k*h+d*g,0,k*g+\nd*h,l*g+c,l*h-d*f,0,k*h-d*g,l*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];\nc.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,l=1/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;\ng[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*a));var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,k=c-d,l=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/k;g[9]=0;g[13]=-((c+d)/k);g[2]=0;g[6]=0;g[10]=-2/l;g[14]=-((f+e)/l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],\na[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};\nTHREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);\nvar d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);\nb.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),l=c.dot(this.direction),p=-c.dot(b),q=c.lengthSq(),n=Math.abs(1-k*k),t;0<n?(d=k*p-l,e=k*l-p,t=h*n,0<=d?e>=-t?e<=t?(h=1/n,d*=h,e*=h,k=d*(d+k*e+2*l)+e*(k*d+e+2*p)+q):(e=h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*p)+q):(e=-h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*p)+q):e<=-t?(d=Math.max(0,-(-k*h+l)),e=0<d?-h:Math.min(Math.max(-h,-p),h),k=-d*d+e*(e+2*p)+q):e<=t?(d=0,e=Math.min(Math.max(-h,-p),h),k=e*(e+\n2*p)+q):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-p),h),k=-d*d+e*(e+2*p)+q)):(e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*p)+q);f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=new THREE.Vector3;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;\nif(e>f)return null;f=Math.sqrt(f-e);e=d-f;d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},\nisIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*\ng,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));\nif(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/f,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};\nTHREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=\nthis.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);\nreturn a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};\nTHREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};\nTHREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],p=c[8],q=c[9],n=c[10],t=c[11],r=c[12],s=c[13],u=c[14],c=c[15];b[0].setComponents(f-a,l-g,t-p,c-r).normalize();b[1].setComponents(f+\na,l+g,t+p,c+r).normalize();b[2].setComponents(f+d,l+h,t+q,c+s).normalize();b[3].setComponents(f-d,l-h,t-q,c-s).normalize();b[4].setComponents(f-e,l-k,t-n,c-u).normalize();b[5].setComponents(f+e,l+k,t+n,c+u).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,\nc=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),\ncontainsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};\nTHREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,\nc);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,\nb){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),\ncoplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),g=this.coplanarPoint(b);g.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,g);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&\na.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};\nTHREE.Math={generateUUID:function(){var a=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?b[e]=\"-\":14==e?b[e]=\"4\":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join(\"\")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=\nb)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return Math.floor(this.randFloat(a,b))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=\n180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};\nTHREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,k,l,p,q,n;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+\n2;l=this.points[c[0]];p=this.points[c[1]];q=this.points[c[2]];n=this.points[c[3]];h=g*g;k=g*h;d.x=b(l.x,p.x,q.x,n.x,g,h,k);d.y=b(l.y,p.y,q.y,n.y,g,h,k);d.z=b(l.z,p.z,q.z,n.z,g,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=\na/c,d=this.getPoint(b),g.copy(d),k+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],k=new THREE.Vector3,n=this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=n.chunks[b]-n.chunks[b-1];g=Math.ceil(a*c/n.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),h.push(k.copy(d).clone());\nh.push(k.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();\nTHREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new THREE.Vector3;if(0==l)return h.set(-2,-1,-1);l=1/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}();\nTHREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();\nTHREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||\nnew THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},\nclone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};\nTHREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),\na=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};\nTHREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&\nc[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};\n(function(a){a.Raycaster=function(b,c,f,g){this.ray=new a.Ray(b,c);this.near=f||0;this.far=g||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var b=function(a,b){return a.distance-b.distance},c=function(a,b,f,g){a.raycast(b,f);if(!0===g){a=a.children;g=0;for(var h=a.length;g<h;g++)c(a[g],b,f,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,precision:1E-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c instanceof a.PerspectiveCamera?\n(this.ray.origin.copy(c.position),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(c.position).normalize()):c instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,-1).unproject(c),this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)):a.error(\"THREE.Raycaster: Unsupported camera type.\")},intersectObject:function(a,e){var f=[];c(a,this,f,e);f.sort(b);return f},intersectObjects:function(d,e){var f=[];if(!1===d instanceof Array)return a.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),\nf;for(var g=0,h=d.length;g<h;g++)c(d[g],this,f,e);f.sort(b);return f}}})(THREE);\nTHREE.Object3D=function(){Object.defineProperty(this,\"id\",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Object3D\";this.parent=void 0;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,\nvalue:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d}});this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);\nTHREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){THREE.warn(\"THREE.Object3D: .eulerOrder has been moved to .rotation.order.\");return this.rotation.order},set eulerOrder(a){THREE.warn(\"THREE.Object3D: .eulerOrder has been moved to .rotation.order.\");this.rotation.order=a},get useQuaternion(){THREE.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set useQuaternion(a){THREE.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},\napplyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,\nc);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));\nreturn this}}(),translate:function(a,b){THREE.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,\nb)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return THREE.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",\na),this;a instanceof THREE.Object3D?(void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:\"added\"}),this.children.push(a)):THREE.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",a);return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=void 0,a.dispatchEvent({type:\"removed\"}),this.children.splice(b,1))},getChildByName:function(a){THREE.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");\nreturn this.getObjectByName(a)},getObjectById:function(a){return this.getObjectByProperty(\"id\",a)},getObjectByName:function(a){return this.getObjectByProperty(\"name\",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new THREE.Vector3;this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=\nnew THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,\nb,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverseVisible(a)}},traverseAncestors:function(a){this.parent&&(a(this.parent),\nthis.parent.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},\ntoJSON:function(){var a={metadata:{version:4.3,type:\"Object\",generator:\"ObjectExporter\"}},b={},c={},d=function(b){void 0===a.materials&&(a.materials=[]);if(void 0===c[b.uuid]){var d=b.toJSON();delete d.metadata;c[b.uuid]=d;a.materials.push(d)}return b.uuid},e=function(c){var g={};g.uuid=c.uuid;g.type=c.type;\"\"!==c.name&&(g.name=c.name);\"{}\"!==JSON.stringify(c.userData)&&(g.userData=c.userData);!0!==c.visible&&(g.visible=c.visible);if(c instanceof THREE.PerspectiveCamera)g.fov=c.fov,g.aspect=c.aspect,\ng.near=c.near,g.far=c.far;else if(c instanceof THREE.OrthographicCamera)g.left=c.left,g.right=c.right,g.top=c.top,g.bottom=c.bottom,g.near=c.near,g.far=c.far;else if(c instanceof THREE.AmbientLight)g.color=c.color.getHex();else if(c instanceof THREE.DirectionalLight)g.color=c.color.getHex(),g.intensity=c.intensity;else if(c instanceof THREE.PointLight)g.color=c.color.getHex(),g.intensity=c.intensity,g.distance=c.distance,g.decay=c.decay;else if(c instanceof THREE.SpotLight)g.color=c.color.getHex(),\ng.intensity=c.intensity,g.distance=c.distance,g.angle=c.angle,g.exponent=c.exponent,g.decay=c.decay;else if(c instanceof THREE.HemisphereLight)g.color=c.color.getHex(),g.groundColor=c.groundColor.getHex();else if(c instanceof THREE.Mesh||c instanceof THREE.Line||c instanceof THREE.PointCloud){var h=c.geometry;void 0===a.geometries&&(a.geometries=[]);if(void 0===b[h.uuid]){var k=h.toJSON();delete k.metadata;b[h.uuid]=k;a.geometries.push(k)}g.geometry=h.uuid;g.material=d(c.material);c instanceof THREE.Line&&\n(g.mode=c.mode)}else c instanceof THREE.Sprite&&(g.material=d(c.material));g.matrix=c.matrix.toArray();if(0<c.children.length)for(g.children=[],h=0;h<c.children.length;h++)g.children.push(e(c.children[h]));return g};a.object=e(this);return a},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);\na.matrixWorld.copy(this.matrixWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;\nTHREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0};\nTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.materialIndex=this.materialIndex;for(var b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}};\nTHREE.Face4=function(a,b,c,d,e,f,g){THREE.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");return new THREE.Face3(a,b,c,e,f,g)};THREE.BufferAttribute=function(a,b){this.array=a;this.itemSize=b;this.needsUpdate=!1};\nTHREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},setX:function(a,b){this.array[a*this.itemSize]=b;return this},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},setXY:function(a,\nb,c){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}};\nTHREE.Int8Attribute=function(a,b){THREE.warn(\"THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.Uint8Attribute=function(a,b){THREE.warn(\"THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};\nTHREE.Uint8ClampedAttribute=function(a,b){THREE.warn(\"THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.Int16Attribute=function(a,b){THREE.warn(\"THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};\nTHREE.Uint16Attribute=function(a,b){THREE.warn(\"THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.Int32Attribute=function(a,b){THREE.warn(\"THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};\nTHREE.Uint32Attribute=function(a,b){THREE.warn(\"THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.Float32Attribute=function(a,b){THREE.warn(\"THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};\nTHREE.Float64Attribute=function(a,b){THREE.warn(\"THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.DynamicBufferAttribute=function(a,b){THREE.BufferAttribute.call(this,a,b);this.updateRange={offset:0,count:-1}};THREE.DynamicBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.DynamicBufferAttribute.prototype.constructor=THREE.DynamicBufferAttribute;\nTHREE.DynamicBufferAttribute.prototype.clone=function(){return new THREE.DynamicBufferAttribute(new this.array.constructor(this.array),this.itemSize)};THREE.BufferGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"BufferGeometry\";this.attributes={};this.attributesKeys=[];this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};\nTHREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c){!1===b instanceof THREE.BufferAttribute?(THREE.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.attributes[a]={array:b,itemSize:c}):(this.attributes[a]=b,this.attributesKeys=Object.keys(this.attributes))},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!==c?c:0})},applyMatrix:function(a){var b=\nthis.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.applyMatrix((new THREE.Matrix4).setPosition(a));return a},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};\nvar c=a.vertices,d=a.faces,e=a.faceVertexUvs,f=b.vertexColors,g=0<e[0].length,h=3==d[0].vertexNormals.length,k=new Float32Array(9*d.length);this.addAttribute(\"position\",new THREE.BufferAttribute(k,3));var l=new Float32Array(9*d.length);this.addAttribute(\"normal\",new THREE.BufferAttribute(l,3));if(f!==THREE.NoColors){var p=new Float32Array(9*d.length);this.addAttribute(\"color\",new THREE.BufferAttribute(p,3))}if(!0===g){var q=new Float32Array(6*d.length);this.addAttribute(\"uv\",new THREE.BufferAttribute(q,\n2))}for(var n=0,t=0,r=0;n<d.length;n++,t+=6,r+=9){var s=d[n],u=c[s.a],v=c[s.b],x=c[s.c];k[r]=u.x;k[r+1]=u.y;k[r+2]=u.z;k[r+3]=v.x;k[r+4]=v.y;k[r+5]=v.z;k[r+6]=x.x;k[r+7]=x.y;k[r+8]=x.z;!0===h?(u=s.vertexNormals[0],v=s.vertexNormals[1],x=s.vertexNormals[2],l[r]=u.x,l[r+1]=u.y,l[r+2]=u.z,l[r+3]=v.x,l[r+4]=v.y,l[r+5]=v.z,l[r+6]=x.x,l[r+7]=x.y,l[r+8]=x.z):(u=s.normal,l[r]=u.x,l[r+1]=u.y,l[r+2]=u.z,l[r+3]=u.x,l[r+4]=u.y,l[r+5]=u.z,l[r+6]=u.x,l[r+7]=u.y,l[r+8]=u.z);f===THREE.FaceColors?(s=s.color,p[r]=\ns.r,p[r+1]=s.g,p[r+2]=s.b,p[r+3]=s.r,p[r+4]=s.g,p[r+5]=s.b,p[r+6]=s.r,p[r+7]=s.g,p[r+8]=s.b):f===THREE.VertexColors&&(u=s.vertexColors[0],v=s.vertexColors[1],s=s.vertexColors[2],p[r]=u.r,p[r+1]=u.g,p[r+2]=u.b,p[r+3]=v.r,p[r+4]=v.g,p[r+5]=v.b,p[r+6]=s.r,p[r+7]=s.g,p[r+8]=s.b);!0===g&&(s=e[0][n][0],u=e[0][n][1],v=e[0][n][2],q[t]=s.x,q[t+1]=s.y,q[t+2]=u.x,q[t+3]=u.y,q[t+4]=v.x,q[t+5]=v.y)}this.computeBoundingSphere();return this},computeBoundingBox:function(){var a=new THREE.Vector3;return function(){null===\nthis.boundingBox&&(this.boundingBox=new THREE.Box3);var b=this.attributes.position.array;if(b){var c=this.boundingBox;c.makeEmpty();for(var d=0,e=b.length;d<e;d+=3)a.set(b[d],b[d+1],b[d+2]),c.expandByPoint(a)}if(void 0===b||0===b.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&THREE.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.')}}(),\ncomputeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.expandByPoint(b);a.center(d);for(var g=0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g);isNaN(this.boundingSphere.radius)&&\nTHREE.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.attributes;if(a.position){var b=a.position.array;if(void 0===a.normal)this.addAttribute(\"normal\",new THREE.BufferAttribute(new Float32Array(b.length),3));else for(var c=a.normal.array,d=0,e=c.length;d<e;d++)c[d]=0;var c=a.normal.array,f,g,h,k=new THREE.Vector3,l=new THREE.Vector3,\np=new THREE.Vector3,q=new THREE.Vector3,n=new THREE.Vector3;if(a.index)for(var t=a.index.array,r=0<this.offsets.length?this.offsets:[{start:0,count:t.length,index:0}],s=0,u=r.length;s<u;++s){e=r[s].start;f=r[s].count;for(var v=r[s].index,d=e,e=e+f;d<e;d+=3)f=3*(v+t[d]),g=3*(v+t[d+1]),h=3*(v+t[d+2]),k.fromArray(b,f),l.fromArray(b,g),p.fromArray(b,h),q.subVectors(p,l),n.subVectors(k,l),q.cross(n),c[f]+=q.x,c[f+1]+=q.y,c[f+2]+=q.z,c[g]+=q.x,c[g+1]+=q.y,c[g+2]+=q.z,c[h]+=q.x,c[h+1]+=q.y,c[h+2]+=q.z}else for(d=\n0,e=b.length;d<e;d+=9)k.fromArray(b,d),l.fromArray(b,d+3),p.fromArray(b,d+6),q.subVectors(p,l),n.subVectors(k,l),q.cross(n),c[d]=q.x,c[d+1]=q.y,c[d+2]=q.z,c[d+3]=q.x,c[d+4]=q.y,c[d+5]=q.z,c[d+6]=q.x,c[d+7]=q.y,c[d+8]=q.z;this.normalizeNormals();a.normal.needsUpdate=!0}},computeTangents:function(){function a(a,b,c){q.fromArray(d,3*a);n.fromArray(d,3*b);t.fromArray(d,3*c);r.fromArray(f,2*a);s.fromArray(f,2*b);u.fromArray(f,2*c);v=n.x-q.x;x=t.x-q.x;D=n.y-q.y;w=t.y-q.y;y=n.z-q.z;A=t.z-q.z;E=s.x-r.x;G=\nu.x-r.x;F=s.y-r.y;z=u.y-r.y;I=1/(E*z-G*F);U.set((z*v-F*x)*I,(z*D-F*w)*I,(z*y-F*A)*I);M.set((E*x-G*v)*I,(E*w-G*D)*I,(E*A-G*y)*I);k[a].add(U);k[b].add(U);k[c].add(U);l[a].add(M);l[b].add(M);l[c].add(M)}function b(a){ha.fromArray(e,3*a);O.copy(ha);ba=k[a];oa.copy(ba);oa.sub(ha.multiplyScalar(ha.dot(ba))).normalize();ja.crossVectors(O,ba);qa=ja.dot(l[a]);ca=0>qa?-1:1;h[4*a]=oa.x;h[4*a+1]=oa.y;h[4*a+2]=oa.z;h[4*a+3]=ca}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||\nvoid 0===this.attributes.uv)THREE.warn(\"THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()\");else{var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&this.addAttribute(\"tangent\",new THREE.BufferAttribute(new Float32Array(4*g),4));for(var h=this.attributes.tangent.array,k=[],l=[],p=0;p<g;p++)k[p]=new THREE.Vector3,\nl[p]=new THREE.Vector3;var q=new THREE.Vector3,n=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector2,s=new THREE.Vector2,u=new THREE.Vector2,v,x,D,w,y,A,E,G,F,z,I,U=new THREE.Vector3,M=new THREE.Vector3,H,L,P,N,R;0===this.drawcalls.length&&this.addDrawCall(0,c.length,0);var V=this.drawcalls,p=0;for(L=V.length;p<L;++p){H=V[p].start;P=V[p].count;var J=V[p].index,g=H;for(H+=P;g<H;g+=3)P=J+c[g],N=J+c[g+1],R=J+c[g+2],a(P,N,R)}var oa=new THREE.Vector3,ja=new THREE.Vector3,ha=new THREE.Vector3,O=new THREE.Vector3,\nca,ba,qa,p=0;for(L=V.length;p<L;++p)for(H=V[p].start,P=V[p].count,J=V[p].index,g=H,H+=P;g<H;g+=3)P=J+c[g],N=J+c[g+1],R=J+c[g+2],b(P),b(N),b(R)}},computeOffsets:function(a){void 0===a&&(a=65535);for(var b=this.attributes.index.array,c=this.attributes.position.array,d=b.length/3,e=new Uint16Array(b.length),f=0,g=0,h=[{start:0,count:0,index:0}],k=h[0],l=0,p=0,q=new Int32Array(6),n=new Int32Array(c.length),t=new Int32Array(c.length),r=0;r<c.length;r++)n[r]=-1,t[r]=-1;for(c=0;c<d;c++){for(var s=p=0;3>\ns;s++)r=b[3*c+s],-1==n[r]?(q[2*s]=r,q[2*s+1]=-1,p++):n[r]<k.index?(q[2*s]=r,q[2*s+1]=-1,l++):(q[2*s]=r,q[2*s+1]=n[r]);if(g+p>k.index+a)for(k={start:f,count:0,index:g},h.push(k),p=0;6>p;p+=2)s=q[p+1],-1<s&&s<k.index&&(q[p+1]=-1);for(p=0;6>p;p+=2)r=q[p],s=q[p+1],-1===s&&(s=g++),n[r]=s,t[s]=r,e[f++]=s-k.index,k.count++}this.reorderBuffers(e,t,g);return this.drawcalls=this.offsets=h},merge:function(a,b){if(!1===a instanceof THREE.BufferGeometry)THREE.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",\na);else{void 0===b&&(b=0);var c=this.attributes,d;for(d in c)if(void 0!==a.attributes[d])for(var e=c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},reorderBuffers:function(a,b,c){var d={},e;for(e in this.attributes)\"index\"!=e&&(d[e]=new this.attributes[e].array.constructor(this.attributes[e].itemSize*\nc));for(var f=0;f<c;f++){var g=b[f];for(e in this.attributes)if(\"index\"!=e)for(var h=this.attributes[e].array,k=this.attributes[e].itemSize,l=d[e],p=0;p<k;p++)l[f*k+p]=h[g*k+p]}this.attributes.index.array=a;for(e in this.attributes)\"index\"!=e&&(this.attributes[e].array=d[e],this.attributes[e].numItems=this.attributes[e].itemSize*c)},toJSON:function(){var a={metadata:{version:4,type:\"BufferGeometry\",generator:\"BufferGeometryExporter\"},uuid:this.uuid,type:this.type,data:{attributes:{}}},b=this.attributes,\nc=this.offsets,d=this.boundingSphere,e;for(e in b){var f=b[e],g=Array.prototype.slice.call(f.array);a.data.attributes[e]={itemSize:f.itemSize,type:f.array.constructor.name,array:g}}0<c.length&&(a.data.offsets=JSON.parse(JSON.stringify(c)));null!==d&&(a.data.boundingSphere={center:d.center.toArray(),radius:d.radius});return a},clone:function(){var a=new THREE.BufferGeometry,b;for(b in this.attributes)a.addAttribute(b,this.attributes[b].clone());b=0;for(var c=this.offsets.length;b<c;b++){var d=this.offsets[b];\na.offsets.push({start:d.start,index:d.index,count:d.count})}return a},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);\nTHREE.Geometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Geometry\";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=\nthis.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};\nTHREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=\nthis.verticesNeedUpdate=!0},fromBufferGeometry:function(a){for(var b=this,c=a.attributes,d=c.position.array,e=void 0!==c.index?c.index.array:void 0,f=void 0!==c.normal?c.normal.array:void 0,g=void 0!==c.color?c.color.array:void 0,h=void 0!==c.uv?c.uv.array:void 0,k=[],l=[],p=c=0;c<d.length;c+=3,p+=2)b.vertices.push(new THREE.Vector3(d[c],d[c+1],d[c+2])),void 0!==f&&k.push(new THREE.Vector3(f[c],f[c+1],f[c+2])),void 0!==g&&b.colors.push(new THREE.Color(g[c],g[c+1],g[c+2])),void 0!==h&&l.push(new THREE.Vector2(h[p],\nh[p+1]));var q=function(a,c,d){var e=void 0!==f?[k[a].clone(),k[c].clone(),k[d].clone()]:[],n=void 0!==g?[b.colors[a].clone(),b.colors[c].clone(),b.colors[d].clone()]:[];b.faces.push(new THREE.Face3(a,c,d,e,n));void 0!==h&&b.faceVertexUvs[0].push([l[a].clone(),l[c].clone(),l[d].clone()])};if(void 0!==e)if(d=a.drawcalls,0<d.length)for(c=0;c<d.length;c++)for(var p=d[c],n=p.start,t=p.count,r=p.index,p=n,n=n+t;p<n;p+=3)q(r+e[p],r+e[p+1],r+e[p+2]);else for(c=0;c<e.length;c+=3)q(e[c],e[c+1],e[c+2]);else for(c=\n0;c<d.length/3;c+=3)q(c,c+1,c+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.applyMatrix((new THREE.Matrix4).setPosition(a));return a},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],\ng=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new THREE.Vector3;if(a){var e,f,g,h=new THREE.Vector3,k=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),k.subVectors(e,f),h.cross(k),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=\n0,b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=\ne.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=\nthis.morphNormals[a].vertexNormals,h,k;c=0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,k={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(h),g.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<\nd;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var a,b,c,d,e,f,g,h,k,l,p,q,n,t,r,s,u,v=[],x=[];c=new THREE.Vector3;var D=new THREE.Vector3,w=new THREE.Vector3,y=new THREE.Vector3,A=new THREE.Vector3;a=0;for(b=this.vertices.length;a<b;a++)v[a]=new THREE.Vector3,x[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)e=this.faces[a],f=this.faceVertexUvs[0][a],d=e.a,u=e.b,e=e.c,g=this.vertices[d],h=this.vertices[u],k=this.vertices[e],\nl=f[0],p=f[1],q=f[2],f=h.x-g.x,n=k.x-g.x,t=h.y-g.y,r=k.y-g.y,h=h.z-g.z,g=k.z-g.z,k=p.x-l.x,s=q.x-l.x,p=p.y-l.y,l=q.y-l.y,q=1/(k*l-s*p),c.set((l*f-p*n)*q,(l*t-p*r)*q,(l*h-p*g)*q),D.set((k*n-s*f)*q,(k*r-s*t)*q,(k*g-s*h)*q),v[d].add(c),v[u].add(c),v[e].add(c),x[d].add(D),x[u].add(D),x[e].add(D);D=[\"a\",\"b\",\"c\",\"d\"];a=0;for(b=this.faces.length;a<b;a++)for(e=this.faces[a],c=0;c<Math.min(e.vertexNormals.length,3);c++)A.copy(e.vertexNormals[c]),d=e[D[c]],u=v[d],w.copy(u),w.sub(A.multiplyScalar(A.dot(u))).normalize(),\ny.crossVectors(e.vertexNormals[c],u),d=y.dot(x[d]),d=0>d?-1:1,e.vertexTangents[c]=new THREE.Vector4(w.x,w.y,w.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);\nthis.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)THREE.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",a);else{var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var p=0,q=g.length;p<q;p++){var n=g[p].clone();void 0!==b&&n.applyMatrix4(b);f.push(n)}p=0;for(q=k.length;p<\nq;p++){var g=k[p],t,r=g.vertexNormals,s=g.vertexColors,n=new THREE.Face3(g.a+e,g.b+e,g.c+e);n.normal.copy(g.normal);void 0!==d&&n.normal.applyMatrix3(d).normalize();b=0;for(f=r.length;b<f;b++)t=r[b].clone(),void 0!==d&&t.applyMatrix3(d).normalize(),n.vertexNormals.push(t);n.color.copy(g.color);b=0;for(f=s.length;b<f;b++)t=s[b],n.vertexColors.push(t.clone());n.materialIndex=g.materialIndex+c;h.push(n)}p=0;for(q=a.length;p<q;p++)if(c=a[p],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());\nl.push(d)}}},mergeMesh:function(a){!1===a instanceof THREE.Mesh?THREE.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",a):(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+\"_\"+Math.round(d.y*e)+\"_\"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<\ng;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return f},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length/3;k.push(a.x,a.y,\na.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==q[b])return q[b];q[b]=p.length;p.push(a.getHex());return q[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==t[b])return t[b];t[b]=n.length/2;n.push(a.x,a.y);return t[b]}var e={metadata:{version:4,type:\"BufferGeometry\",generator:\"BufferGeometryExporter\"},uuid:this.uuid,type:this.type};\"\"!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==\nf[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},p=[],q={},n=[],t={};for(g=0;g<this.faces.length;g++){var r=this.faces[g],s=void 0!==this.faceVertexUvs[0][g],u=0<r.normal.length(),v=0<r.vertexNormals.length,x=1!==r.color.r||1!==r.color.g||1!==r.color.b,D=0<r.vertexColors.length,w=0,w=a(w,0,0),w=a(w,1,!1),w=a(w,2,!1),w=a(w,3,s),w=a(w,4,u),w=a(w,5,v),w=a(w,6,x),w=a(w,7,D);h.push(w);h.push(r.a,r.b,r.c);s&&(s=this.faceVertexUvs[0][g],\nh.push(d(s[0]),d(s[1]),d(s[2])));u&&h.push(b(r.normal));v&&(u=r.vertexNormals,h.push(b(u[0]),b(u[1]),b(u[2])));x&&h.push(c(r.color));D&&(r=r.vertexColors,h.push(c(r[0]),c(r[1]),c(r[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<p.length&&(e.data.colors=p);0<n.length&&(e.data.uvs=[n]);e.data.faces=h;return e},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());c=0;\nfor(d=this.faceVertexUvs.length;c<d;c++){b=this.faceVertexUvs[c];void 0===a.faceVertexUvs[c]&&(a.faceVertexUvs[c]=[]);for(var e=0,f=b.length;e<f;e++){for(var g=b[e],h=[],k=0,l=g.length;k<l;k++)h.push(g[k].clone());a.faceVertexUvs[c].push(h)}}return a},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;\nTHREE.Camera=function(){THREE.Object3D.call(this);this.type=\"Camera\";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();\nTHREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);return a};\nTHREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);this.type=\"CubeCamera\";var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));\nthis.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var k=new THREE.PerspectiveCamera(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,-1));this.add(k);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,n=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=\n1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=n;c.activeCubeFace=5;a.render(b,k,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;\nTHREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.type=\"OrthographicCamera\";this.zoom=1;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(c-a,c+a,d+b,d-b,this.near,this.far)};\nTHREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,a);a.zoom=this.zoom;a.left=this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return a};\nTHREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type=\"PerspectiveCamera\";this.zoom=1;this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;\nTHREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var b=this.fullWidth/this.fullHeight,a=Math.tan(THREE.Math.degToRad(.5*a))*this.near,c=-a,d=b*c,b=Math.abs(b*a-d),c=Math.abs(a-c);this.projectionMatrix.makeFrustum(d+this.x*b/this.fullWidth,d+(this.x+this.width)*b/this.fullWidth,a-(this.y+this.height)*c/this.fullHeight,a-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(a,\nthis.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.zoom=this.zoom;a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return a};THREE.Light=function(a){THREE.Object3D.call(this);this.type=\"Light\";this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;\nTHREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};THREE.AmbientLight=function(a){THREE.Light.call(this,a);this.type=\"AmbientLight\"};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,a);return a};\nTHREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.type=\"AreaLight\";this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight.prototype.constructor=THREE.AreaLight;\nTHREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.type=\"DirectionalLight\";this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;\nthis.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;\nTHREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraLeft=this.shadowCameraLeft;a.shadowCameraRight=this.shadowCameraRight;a.shadowCameraTop=this.shadowCameraTop;a.shadowCameraBottom=this.shadowCameraBottom;a.shadowCameraVisible=\nthis.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;a.shadowCascade=this.shadowCascade;a.shadowCascadeOffset.copy(this.shadowCascadeOffset);a.shadowCascadeCount=this.shadowCascadeCount;a.shadowCascadeBias=this.shadowCascadeBias.slice(0);a.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);a.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);a.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);\na.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return a};THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.type=\"HemisphereLight\";this.position.set(0,100,0);this.groundColor=new THREE.Color(b);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;\nTHREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,a);a.groundColor.copy(this.groundColor);a.intensity=this.intensity;return a};THREE.PointLight=function(a,b,c,d){THREE.Light.call(this,a);this.type=\"PointLight\";this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;\nTHREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.intensity=this.intensity;a.distance=this.distance;a.decay=this.decay;return a};\nTHREE.SpotLight=function(a,b,c,d,e,f){THREE.Light.call(this,a);this.type=\"SpotLight\";this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.exponent=void 0!==e?e:10;this.decay=void 0!==f?f:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=\n512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;\nTHREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.decay=this.decay;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraFov=this.shadowCameraFov;a.shadowCameraVisible=this.shadowCameraVisible;a.shadowBias=this.shadowBias;\na.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;return a};THREE.Cache={files:{},add:function(a,b){this.files[a]=b},get:function(a){return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};\nTHREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\nTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var a=document.createElement(\"div\");a.style.position=\"absolute\";a.style.right=\"0px\";a.style.top=\"0px\";a.style.fontSize=\"0.8em\";a.style.textAlign=\"left\";a.style.background=\"rgba(0,0,0,0.25)\";a.style.color=\"#fff\";a.style.width=\"120px\";a.style.padding=\"0.5em 0.5em 0.5em 0.5em\";a.style.zIndex=1E3;a.innerHTML=\"Loading ...\";return a},updateProgress:function(a){var b=\"Loaded \",b=a.total?b+((100*a.loaded/a.total).toFixed(0)+\n\"%\"):b+((a.loaded/1024).toFixed(2)+\" KB\");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split(\"/\");if(1===a.length)return\"./\";a.pop();return a.join(\"/\")+\"/\"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=this.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function d(a,\nd,e,g,h,k,s){var u=b+e,v,x=THREE.Loader.Handlers.get(u);null!==x?v=x.load(u):(v=new THREE.Texture,x=f.imageLoader,x.crossOrigin=f.crossOrigin,x.load(u,function(a){if(!1===THREE.Math.isPowerOfTwo(a.width)||!1===THREE.Math.isPowerOfTwo(a.height)){var b=c(a.width),d=c(a.height),e=document.createElement(\"canvas\");e.width=b;e.height=d;e.getContext(\"2d\").drawImage(a,0,0,b,d);v.image=e}else v.image=a;v.needsUpdate=!0}));v.sourceFile=e;g&&(v.repeat.set(g[0],g[1]),1!==g[0]&&(v.wrapS=THREE.RepeatWrapping),\n1!==g[1]&&(v.wrapT=THREE.RepeatWrapping));h&&v.offset.set(h[0],h[1]);k&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==e[k[0]]&&(v.wrapS=e[k[0]]),void 0!==e[k[1]]&&(v.wrapT=e[k[1]]));s&&(v.anisotropy=s);a[d]=v}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var f=this,g=\"MeshLambertMaterial\",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();\"phong\"===k?g=\"MeshPhongMaterial\":\n\"basic\"===k&&(g=\"MeshBasicMaterial\")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(h.blending=THREE[a.blending]);void 0!==a.transparent&&(h.transparent=a.transparent);void 0!==a.opacity&&1>a.opacity&&(h.transparent=!0);void 0!==a.depthTest&&(h.depthTest=a.depthTest);void 0!==a.depthWrite&&(h.depthWrite=a.depthWrite);void 0!==a.visible&&(h.visible=a.visible);void 0!==a.flipSided&&(h.side=THREE.BackSide);void 0!==a.doubleSided&&(h.side=THREE.DoubleSide);void 0!==a.wireframe&&(h.wireframe=a.wireframe);\nvoid 0!==a.vertexColors&&(\"face\"===a.vertexColors?h.vertexColors=THREE.FaceColors:a.vertexColors&&(h.vertexColors=THREE.VertexColors));a.colorDiffuse?h.color=e(a.colorDiffuse):a.DbgColor&&(h.color=a.DbgColor);a.colorSpecular&&(h.specular=e(a.colorSpecular));a.colorEmissive&&(h.emissive=e(a.colorEmissive));void 0!==a.transparency&&(console.warn(\"THREE.Loader: transparency has been renamed to opacity\"),a.opacity=a.transparency);void 0!==a.opacity&&(h.opacity=a.opacity);a.specularCoef&&(h.shininess=\na.specularCoef);a.mapDiffuse&&b&&d(h,\"map\",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&d(h,\"lightMap\",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&d(h,\"bumpMap\",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&d(h,\"normalMap\",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&d(h,\"specularMap\",\na.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapAlpha&&b&&d(h,\"alphaMap\",a.mapAlpha,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy);a.mapBumpScale&&(h.bumpScale=a.mapBumpScale);a.mapNormalFactor&&(h.normalScale=new THREE.Vector2(a.mapNormalFactor,a.mapNormalFactor));g=new THREE[g](h);void 0!==a.DbgName&&(g.name=a.DbgName);return g}};\nTHREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,c=this.handlers.length;b<c;b+=2){var d=this.handlers[b+1];if(this.handlers[b].test(a))return d}return null}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=THREE.Cache.get(a);void 0!==f?b&&b(f):(f=new XMLHttpRequest,f.open(\"GET\",a,!0),f.addEventListener(\"load\",function(c){THREE.Cache.add(a,this.response);b&&b(this.response);e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener(\"progress\",function(a){c(a)},!1),void 0!==d&&f.addEventListener(\"error\",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(f.responseType=\nthis.responseType),f.send(null),e.manager.itemStart(a))},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=THREE.Cache.get(a);if(void 0!==f)b(f);else return f=document.createElement(\"img\"),f.addEventListener(\"load\",function(c){THREE.Cache.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener(\"progress\",function(a){c(a)},!1),void 0!==d&&f.addEventListener(\"error\",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.src=a,e.manager.itemStart(a),f},setCrossOrigin:function(a){this.crossOrigin=\na}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&\"string\"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};\nTHREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText),k=h.metadata;if(void 0!==k){if(\"object\"===k.type){THREE.error(\"THREE.JSONLoader: \"+b+\" should be loaded with THREE.ObjectLoader instead.\");return}if(\"scene\"===k.type){THREE.error(\"THREE.JSONLoader: \"+b+\" seems to be a Scene. Use THREE.SceneLoader instead.\");return}}h=a.parse(h,\nd);c(h.geometry,h.materials)}else THREE.error(\"THREE.JSONLoader: \"+b+\" seems to be unreachable or the file is empty.\");a.onLoadComplete()}else THREE.error(\"THREE.JSONLoader: Couldn't load \"+b+\" (\"+f.status+\")\");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader(\"Content-Length\")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader(\"Content-Length\"))};f.open(\"GET\",b,!0);f.withCredentials=this.withCredentials;f.send(null)};\nTHREE.JSONLoader.prototype.parse=function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1;(function(b){var d,g,h,k,l,p,q,n,t,r,s,u,v,x=a.faces;p=a.vertices;var D=a.normals,w=a.colors,y=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&y++;for(d=0;d<y;d++)c.faceVertexUvs[d]=[]}k=0;for(l=p.length;k<l;)d=new THREE.Vector3,d.x=p[k++]*b,d.y=p[k++]*b,d.z=p[k++]*b,c.vertices.push(d);k=0;for(l=x.length;k<l;)if(b=x[k++],t=b&1,h=b&2,d=b&8,q=b&16,r=b&32,p=b&64,b&=128,t){t=new THREE.Face3;\nt.a=x[k];t.b=x[k+1];t.c=x[k+3];s=new THREE.Face3;s.a=x[k+1];s.b=x[k+2];s.c=x[k+3];k+=4;h&&(h=x[k++],t.materialIndex=h,s.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<y;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4>g;g++)n=x[k++],v=u[2*n],n=u[2*n+1],v=new THREE.Vector2(v,n),2!==g&&c.faceVertexUvs[d][h].push(v),0!==g&&c.faceVertexUvs[d][h+1].push(v);q&&(q=3*x[k++],t.normal.set(D[q++],D[q++],D[q]),s.normal.copy(t.normal));if(r)for(d=0;4>d;d++)q=3*x[k++],r=new THREE.Vector3(D[q++],\nD[q++],D[q]),2!==d&&t.vertexNormals.push(r),0!==d&&s.vertexNormals.push(r);p&&(p=x[k++],p=w[p],t.color.setHex(p),s.color.setHex(p));if(b)for(d=0;4>d;d++)p=x[k++],p=w[p],2!==d&&t.vertexColors.push(new THREE.Color(p)),0!==d&&s.vertexColors.push(new THREE.Color(p));c.faces.push(t);c.faces.push(s)}else{t=new THREE.Face3;t.a=x[k++];t.b=x[k++];t.c=x[k++];h&&(h=x[k++],t.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<y;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],g=0;3>g;g++)n=x[k++],v=u[2*n],n=u[2*n+1],\nv=new THREE.Vector2(v,n),c.faceVertexUvs[d][h].push(v);q&&(q=3*x[k++],t.normal.set(D[q++],D[q++],D[q]));if(r)for(d=0;3>d;d++)q=3*x[k++],r=new THREE.Vector3(D[q++],D[q++],D[q]),t.vertexNormals.push(r);p&&(p=x[k++],t.color.setHex(w[p]));if(b)for(d=0;3>d;d++)p=x[k++],t.vertexColors.push(new THREE.Color(w[p]));c.faces.push(t)}})(d);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinWeights.push(new THREE.Vector4(a.skinWeights[d],\n1<b?a.skinWeights[d+1]:0,2<b?a.skinWeights[d+2]:0,3<b?a.skinWeights[d+3]:0));if(a.skinIndices)for(d=0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new THREE.Vector4(a.skinIndices[d],1<b?a.skinIndices[d+1]:0,2<b?a.skinIndices[d+2]:0,3<b?a.skinIndices[d+3]:0));c.bones=a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&THREE.warn(\"THREE.JSONLoader: When skinning, number of vertices (\"+c.vertices.length+\"), skinIndices (\"+\nc.skinIndices.length+\"), and skinWeights (\"+c.skinWeights.length+\") should match.\");c.animation=a.animation;c.animations=a.animations})();(function(b){if(void 0!==a.morphTargets){var d,g,h,k,l,p;d=0;for(g=a.morphTargets.length;d<g;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=a.morphTargets[d].name,c.morphTargets[d].vertices=[],l=c.morphTargets[d].vertices,p=a.morphTargets[d].vertices,h=0,k=p.length;h<k;h+=3){var q=new THREE.Vector3;q.x=p[h]*b;q.y=p[h+1]*b;q.z=p[h+2]*b;l.push(q)}}if(void 0!==\na.morphColors)for(d=0,g=a.morphColors.length;d<g;d++)for(c.morphColors[d]={},c.morphColors[d].name=a.morphColors[d].name,c.morphColors[d].colors=[],k=c.morphColors[d].colors,l=a.morphColors[d].colors,b=0,h=l.length;b<h;b+=3)p=new THREE.Color(16755200),p.setRGB(l[b],l[b+1],l[b+2]),k.push(p)})(d);c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};d=this.initMaterials(a.materials,b);this.needsTangents(d)&&c.computeTangents();return{geometry:c,\nmaterials:d}};THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){f++};this.itemEnd=function(a){e++;if(void 0!==d.onProgress)d.onProgress(a,e,f);if(e===f&&void 0!==d.onLoad)d.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.data.attributes,d;for(d in c){var e=c[d],f=new self[e.type](e.array);b.addAttribute(d,new THREE.BufferAttribute(f,e.itemSize))}c=a.data.offsets;void 0!==c&&(b.offsets=JSON.parse(JSON.stringify(c)));\na=a.data.boundingSphere;void 0!==a&&(c=new THREE.Vector3,void 0!==a.center&&c.fromArray(a.center),b.boundingSphere=new THREE.Sphere(c,a.radius));return b}};THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];void 0!==a.color&&b.color.setHex(a.color);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&(b.shininess=a.shininess);\nvoid 0!==a.uniforms&&(b.uniforms=a.uniforms);void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.shading&&(b.shading=a.shading);void 0!==a.blending&&(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.wireframe&&(b.wireframe=a.wireframe);void 0!==a.size&&\n(b.size=a.size);void 0!==a.sizeAttenuation&&(b.sizeAttenuation=a.sizeAttenuation);if(void 0!==a.materials)for(var c=0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return b}};THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.texturePath=\"\"};\nTHREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){\"\"===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf(\"/\")+1));var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){e.parse(JSON.parse(a),b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==b&&b(e)}),\nd=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case \"PlaneGeometry\":case \"PlaneBufferGeometry\":g=new THREE[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case \"BoxGeometry\":case \"CubeGeometry\":g=\nnew THREE.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case \"CircleGeometry\":g=new THREE.CircleGeometry(h.radius,h.segments);break;case \"CylinderGeometry\":g=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded);break;case \"SphereGeometry\":g=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case \"IcosahedronGeometry\":g=new THREE.IcosahedronGeometry(h.radius,\nh.detail);break;case \"TorusGeometry\":g=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case \"TorusKnotGeometry\":g=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case \"BufferGeometry\":g=d.parse(h);break;case \"Geometry\":g=c.parse(h.data).geometry}g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);b[h.uuid]=g}return b},parseMaterials:function(a,b){var c={};if(void 0!==a)for(var d=function(a){void 0===b[a]&&\nTHREE.warn(\"THREE.ObjectLoader: Undefined texture\",a);return b[a]},e=new THREE.MaterialLoader,f=0,g=a.length;f<g;f++){var h=a[f],k=e.parse(h);k.uuid=h.uuid;void 0!==h.name&&(k.name=h.name);void 0!==h.map&&(k.map=d(h.map));void 0!==h.bumpMap&&(k.bumpMap=d(h.bumpMap),h.bumpScale&&(k.bumpScale=new THREE.Vector2(h.bumpScale,h.bumpScale)));void 0!==h.alphaMap&&(k.alphaMap=d(h.alphaMap));void 0!==h.envMap&&(k.envMap=d(h.envMap));void 0!==h.normalMap&&(k.normalMap=d(h.normalMap),h.normalScale&&(k.normalScale=\nnew THREE.Vector2(h.normalScale,h.normalScale)));void 0!==h.lightMap&&(k.lightMap=d(h.lightMap));void 0!==h.specularMap&&(k.specularMap=d(h.specularMap));c[h.uuid]=k}return c},parseImages:function(a,b){var c=this,d={};if(void 0!==a&&0<a.length){var e=new THREE.LoadingManager(b),f=new THREE.ImageLoader(e);f.setCrossOrigin(this.crossOrigin);for(var e=function(a){c.manager.itemStart(a);return f.load(a,function(){c.manager.itemEnd(a)})},g=0,h=a.length;g<h;g++){var k=a[g],l=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(k.url)?\nk.url:c.texturePath+k.url;d[k.uuid]=e(l)}}return d},parseTextures:function(a,b){var c={};if(void 0!==a)for(var d=0,e=a.length;d<e;d++){var f=a[d];void 0===f.image&&THREE.warn('THREE.ObjectLoader: No \"image\" speficied for',f.uuid);void 0===b[f.image]&&THREE.warn(\"THREE.ObjectLoader: Undefined image\",f.image);var g=new THREE.Texture(b[f.image]);g.needsUpdate=!0;g.uuid=f.uuid;void 0!==f.name&&(g.name=f.name);void 0!==f.repeat&&(g.repeat=new THREE.Vector2(f.repeat[0],f.repeat[1]));void 0!==f.minFilter&&\n(g.minFilter=THREE[f.minFilter]);void 0!==f.magFilter&&(g.magFilter=THREE[f.magFilter]);void 0!==f.anisotropy&&(g.anisotropy=f.anisotropy);f.wrap instanceof Array&&(g.wrapS=THREE[f.wrap[0]],g.wrapT=THREE[f.wrap[1]]);c[f.uuid]=g}return c},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;e=function(a){void 0===c[a]&&THREE.warn(\"THREE.ObjectLoader: Undefined geometry\",a);return c[a]};var f=function(a){void 0===d[a]&&THREE.warn(\"THREE.ObjectLoader: Undefined material\",a);return d[a]};\nswitch(b.type){case \"Scene\":e=new THREE.Scene;break;case \"PerspectiveCamera\":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case \"OrthographicCamera\":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case \"AmbientLight\":e=new THREE.AmbientLight(b.color);break;case \"DirectionalLight\":e=new THREE.DirectionalLight(b.color,b.intensity);break;case \"PointLight\":e=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case \"SpotLight\":e=new THREE.SpotLight(b.color,\nb.intensity,b.distance,b.angle,b.exponent,b.decay);break;case \"HemisphereLight\":e=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case \"Mesh\":e=new THREE.Mesh(e(b.geometry),f(b.material));break;case \"Line\":e=new THREE.Line(e(b.geometry),f(b.material),b.mode);break;case \"PointCloud\":e=new THREE.PointCloud(e(b.geometry),f(b.material));break;case \"Sprite\":e=new THREE.Sprite(f(b.material));break;case \"Group\":e=new THREE.Group;break;default:e=new THREE.Object3D}e.uuid=b.uuid;void 0!==\nb.name&&(e.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale));void 0!==b.visible&&(e.visible=b.visible);void 0!==b.userData&&(e.userData=b.userData);if(void 0!==b.children)for(var g in b.children)e.add(this.parseObject(b.children[g],c,d));return e}}()};\nTHREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){var e=new THREE.ImageLoader(this.manager);e.setCrossOrigin(this.crossOrigin);e.load(a,function(a){a=new THREE.Texture(a);a.needsUpdate=!0;void 0!==b&&b(a)},c,d)},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(){this._parser=null};\nTHREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(a,b,c,d){var e=this,f=new THREE.DataTexture,g=new THREE.XHRLoader;g.setResponseType(\"arraybuffer\");g.load(a,function(a){if(a=e._parser(a))void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping,f.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping,f.magFilter=void 0!==a.magFilter?a.magFilter:\nTHREE.LinearFilter,f.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter,f.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}};THREE.CompressedTextureLoader=function(){this._parser=null};\nTHREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,b,c){var d=this,e=[],f=new THREE.CompressedTexture;f.image=e;var g=new THREE.XHRLoader;g.setResponseType(\"arraybuffer\");if(a instanceof Array){var h=0;c=function(c){g.load(a[c],function(a){a=d._parser(a,!0);e[c]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};h+=1;6===h&&(1==a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.format=a.format,f.needsUpdate=!0,b&&b(f))})};for(var k=0,l=\na.length;k<l;++k)c(k)}else g.load(a,function(a){a=d._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length/a.mipmapCount,g=0;g<c;g++){e[g]={mipmaps:[]};for(var h=0;h<a.mipmapCount;h++)e[g].mipmaps.push(a.mipmaps[g*a.mipmapCount+h]),e[g].format=a.format,e[g].width=a.width,e[g].height=a.height}else f.image.width=a.width,f.image.height=a.height,f.mipmaps=a.mipmaps;1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter);f.format=a.format;f.needsUpdate=!0;b&&b(f)});return f}};\nTHREE.Material=function(){Object.defineProperty(this,\"id\",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Material\";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.colorWrite=this.depthWrite=this.depthTest=!0;this.polygonOffset=\n!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this._needsUpdate=this.visible=!0};\nTHREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)THREE.warn(\"THREE.Material: '\"+b+\"' parameter is undefined.\");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=\"overdraw\"==b?Number(c):c}}},toJSON:function(){var a={metadata:{version:4.2,\ntype:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type};\"\"!==this.name&&(a.name=this.name);this instanceof THREE.MeshBasicMaterial?(a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshLambertMaterial?(a.color=this.color.getHex(),a.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&\n(a.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(a.shading=this.shading),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshPhongMaterial?(a.color=this.color.getHex(),a.emissive=this.emissive.getHex(),a.specular=this.specular.getHex(),a.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(a.shading=this.shading),\nthis.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.PointCloudMaterial?(a.size=this.size,a.sizeAttenuation=\nthis.sizeAttenuation,a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending)):this instanceof THREE.ShaderMaterial?(a.uniforms=this.uniforms,a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(a.color=this.color.getHex());1>this.opacity&&(a.opacity=this.opacity);!1!==this.transparent&&(a.transparent=this.transparent);!1!==this.wireframe&&\n(a.wireframe=this.wireframe);return a},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.blendSrcAlpha=this.blendSrcAlpha;a.blendDstAlpha=this.blendDstAlpha;a.blendEquationAlpha=this.blendEquationAlpha;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=\nthis.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;\nTHREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type=\"LineBasicMaterial\";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap=\"round\";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;\nTHREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};\nTHREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type=\"LineDashedMaterial\";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;\nTHREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};\nTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type=\"MeshBasicMaterial\";this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};\nTHREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;\nTHREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;\na.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};\nTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type=\"MeshLambertMaterial\";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\n\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;\nTHREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=\nthis.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};\nTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type=\"MeshPhongMaterial\";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=\n1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;\nTHREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);a.specularMap=this.specularMap;\na.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};\nTHREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type=\"MeshDepthMaterial\";this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;\nTHREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type=\"MeshNormalMaterial\";this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);\nTHREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type=\"MeshFaceMaterial\";this.materials=a instanceof Array?a:[]};\nTHREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;b<c;b++)a.materials.push(this.materials[b].toJSON());return a},clone:function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a}};\nTHREE.PointCloudMaterial=function(a){THREE.Material.call(this);this.type=\"PointCloudMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial;\nTHREE.PointCloudMaterial.prototype.clone=function(){var a=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleBasicMaterial=function(a){THREE.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.\");return new THREE.PointCloudMaterial(a)};\nTHREE.ParticleSystemMaterial=function(a){THREE.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.\");return new THREE.PointCloudMaterial(a)};\nTHREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type=\"ShaderMaterial\";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=\nthis.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;\nTHREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=\nthis.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type=\"RawShaderMaterial\"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.RawShaderMaterial.prototype.clone=function(){var a=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,a);return a};\nTHREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type=\"SpriteMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;\nTHREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.rotation=this.rotation;a.fog=this.fog;return a};\nTHREE.Texture=function(a,b,c,d,e,f,g,h,k){Object.defineProperty(this,\"id\",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.sourceFile=this.name=\"\";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;\nthis.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;\nTHREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=\nthis.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CubeTexture=function(a,b,c,d,e,f,g,h,k){b=void 0!==b?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.images=a};\nTHREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.clone=function(a){void 0===a&&(a=new THREE.CubeTexture);THREE.Texture.prototype.clone.call(this,a);a.images=this.images;return a};THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,k,l,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);\nTHREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,k,l,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,p);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;\nTHREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.VideoTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var l=this,p=function(){requestAnimationFrame(p);a.readyState===a.HAVE_ENOUGH_DATA&&(l.needsUpdate=!0)};p()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;\nTHREE.Group=function(){THREE.Object3D.call(this);this.type=\"Group\"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);THREE.Group.prototype.constructor=THREE.Group;THREE.PointCloud=function(a,b){THREE.Object3D.call(this);this.type=\"PointCloud\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.PointCloudMaterial({color:16777215*Math.random()})};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);THREE.PointCloud.prototype.constructor=THREE.PointCloud;\nTHREE.PointCloud.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(c,d){var e=this,f=e.geometry,g=c.params.PointCloud.threshold;a.getInverse(this.matrixWorld);b.copy(c.ray).applyMatrix4(a);if(null===f.boundingBox||!1!==b.isIntersectionBox(f.boundingBox)){var h=g/((this.scale.x+this.scale.y+this.scale.z)/3),k=new THREE.Vector3,g=function(a,f){var g=b.distanceToPoint(a);if(g<h){var k=b.closestPointToPoint(a);k.applyMatrix4(e.matrixWorld);var n=c.ray.origin.distanceTo(k);\nd.push({distance:n,distanceToRay:g,point:k.clone(),index:f,face:null,object:e})}};if(f instanceof THREE.BufferGeometry){var l=f.attributes,p=l.position.array;if(void 0!==l.index){var l=l.index.array,q=f.offsets;0===q.length&&(q=[{start:0,count:l.length,index:0}]);for(var n=0,t=q.length;n<t;++n)for(var r=q[n].start,s=q[n].index,f=r,r=r+q[n].count;f<r;f++){var u=s+l[f];k.fromArray(p,3*u);g(k,u)}}else for(l=p.length/3,f=0;f<l;f++)k.set(p[3*f],p[3*f+1],p[3*f+2]),g(k,f)}else for(k=this.geometry.vertices,\nf=0;f<k.length;f++)g(k[f],f)}}}();THREE.PointCloud.prototype.clone=function(a){void 0===a&&(a=new THREE.PointCloud(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.warn(\"THREE.ParticleSystem has been renamed to THREE.PointCloud.\");return new THREE.PointCloud(a,b)};\nTHREE.Line=function(a,b,c){THREE.Object3D.call(this);this.type=\"Line\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.mode=void 0!==c?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;\nTHREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==d.ray.isIntersectionSphere(c)){a.getInverse(this.matrixWorld);b.copy(d.ray).applyMatrix4(a);var h=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,p=new THREE.Vector3,q=this.mode===THREE.LineStrip?1:2;if(g instanceof\nTHREE.BufferGeometry){var n=g.attributes;if(void 0!==n.index){var t=n.index.array,n=n.position.array,r=g.offsets;0===r.length&&(r=[{start:0,count:t.length,index:0}]);for(var s=0;s<r.length;s++)for(var u=r[s].start,v=r[s].count,x=r[s].index,g=u;g<u+v-1;g+=q){var D=x+t[g+1];h.fromArray(n,3*(x+t[g]));k.fromArray(n,3*D);D=b.distanceSqToSegment(h,k,p,l);D>f||(D=b.origin.distanceTo(p),D<d.near||D>d.far||e.push({distance:D,point:l.clone().applyMatrix4(this.matrixWorld),index:g,offsetIndex:s,face:null,faceIndex:null,\nobject:this}))}}else for(n=n.position.array,g=0;g<n.length/3-1;g+=q)h.fromArray(n,3*g),k.fromArray(n,3*g+3),D=b.distanceSqToSegment(h,k,p,l),D>f||(D=b.origin.distanceTo(p),D<d.near||D>d.far||e.push({distance:D,point:l.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g instanceof THREE.Geometry)for(h=g.vertices,k=h.length,g=0;g<k-1;g+=q)D=b.distanceSqToSegment(h[g],h[g+1],p,l),D>f||(D=b.origin.distanceTo(p),D<d.near||D>d.far||e.push({distance:D,point:l.clone().applyMatrix4(this.matrixWorld),\nindex:g,face:null,faceIndex:null,object:this}))}}}();THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.mode));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type=\"Mesh\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};\nTHREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];THREE.warn(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0};\nTHREE.Mesh.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g,h){var k=this.geometry;null===k.boundingSphere&&k.computeBoundingSphere();c.copy(k.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==g.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(g.ray).applyMatrix4(a),null===k.boundingBox||!1!==b.isIntersectionBox(k.boundingBox)))if(k instanceof THREE.BufferGeometry){var l=\nthis.material;if(void 0!==l){var p=k.attributes,q,n,t=g.precision;if(void 0!==p.index){var r=p.index.array,s=p.position.array,u=k.offsets;0===u.length&&(u=[{start:0,count:r.length,index:0}]);for(var v=0,x=u.length;v<x;++v)for(var p=u[v].start,D=u[v].index,k=p,w=p+u[v].count;k<w;k+=3){p=D+r[k];q=D+r[k+1];n=D+r[k+2];d.fromArray(s,3*p);e.fromArray(s,3*q);f.fromArray(s,3*n);var y=l.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,l.side!==THREE.DoubleSide);if(null!==y){y.applyMatrix4(this.matrixWorld);\nvar A=g.ray.origin.distanceTo(y);A<t||A<g.near||A>g.far||h.push({distance:A,point:y,face:new THREE.Face3(p,q,n,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this})}}}else for(s=p.position.array,r=k=0,w=s.length;k<w;k+=3,r+=9)p=k,q=k+1,n=k+2,d.fromArray(s,r),e.fromArray(s,r+3),f.fromArray(s,r+6),y=l.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,l.side!==THREE.DoubleSide),null!==y&&(y.applyMatrix4(this.matrixWorld),A=g.ray.origin.distanceTo(y),A<t||A<g.near||A>\ng.far||h.push({distance:A,point:y,face:new THREE.Face3(p,q,n,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this}))}}else if(k instanceof THREE.Geometry)for(r=this.material instanceof THREE.MeshFaceMaterial,s=!0===r?this.material.materials:null,t=g.precision,u=k.vertices,v=0,x=k.faces.length;v<x;v++)if(D=k.faces[v],l=!0===r?s[D.materialIndex]:this.material,void 0!==l){p=u[D.a];q=u[D.b];n=u[D.c];if(!0===l.morphTargets){y=k.morphTargets;A=this.morphTargetInfluences;d.set(0,0,0);e.set(0,0,0);f.set(0,\n0,0);for(var w=0,E=y.length;w<E;w++){var G=A[w];if(0!==G){var F=y[w].vertices;d.x+=(F[D.a].x-p.x)*G;d.y+=(F[D.a].y-p.y)*G;d.z+=(F[D.a].z-p.z)*G;e.x+=(F[D.b].x-q.x)*G;e.y+=(F[D.b].y-q.y)*G;e.z+=(F[D.b].z-q.z)*G;f.x+=(F[D.c].x-n.x)*G;f.y+=(F[D.c].y-n.y)*G;f.z+=(F[D.c].z-n.z)*G}}d.add(p);e.add(q);f.add(n);p=d;q=e;n=f}y=l.side===THREE.BackSide?b.intersectTriangle(n,q,p,!0):b.intersectTriangle(p,q,n,l.side!==THREE.DoubleSide);null!==y&&(y.applyMatrix4(this.matrixWorld),A=g.ray.origin.distanceTo(y),A<t||\nA<g.near||A>g.far||h.push({distance:A,point:y,face:D,faceIndex:v,object:this}))}}}();THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.type=\"Bone\";this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;\nTHREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),\nthis.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(THREE.warn(\"THREE.Skeleton bonInverses is the wrong length.\"),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};\nTHREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}};\nTHREE.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};\nTHREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();\nTHREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type=\"SkinnedMesh\";this.bindMode=\"attached\";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e,f,g,h=0,k=this.geometry.bones.length;h<k;++h)d=this.geometry.bones[h],e=d.pos,f=d.rotq,g=d.scl,b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.set(e[0],e[1],e[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),void 0!==g?b.scale.set(g[0],g[1],g[2]):b.scale.set(1,\n1,1);h=0;for(k=this.geometry.bones.length;h<k;++h)d=this.geometry.bones[h],-1!==d.parent?a[d.parent].add(a[h]):this.add(a[h])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};\nTHREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};\nTHREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):THREE.warn(\"THREE.SkinnedMesh unreckognized bindMode: \"+this.bindMode)};\nTHREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.type=\"MorphAnimMesh\";this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);\nTHREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};\nTHREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)_?(\\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};\nTHREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):THREE.warn(\"THREE.MorphAnimMesh: animation[\"+a+\"] undefined in .playAnimation()\")};\nTHREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&\n(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};\nTHREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,f=d.length;e<f;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)};\nTHREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object};\nTHREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}();\nTHREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(1<this.objects.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);this.objects[0].object.visible=!0;for(var d=1,e=this.objects.length;d<e;d++)if(c>=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}();\nTHREE.LOD.prototype.clone=function(a){void 0===a&&(a=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,a);for(var b=0,c=this.objects.length;b<c;b++){var d=this.objects[b].object.clone();d.visible=0===b;a.addLevel(d,this.objects[b].distance)}return a};\nTHREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),c=new Float32Array([0,0,1,0,1,1,0,1]),d=new THREE.BufferGeometry;d.addAttribute(\"index\",new THREE.BufferAttribute(a,1));d.addAttribute(\"position\",new THREE.BufferAttribute(b,3));d.addAttribute(\"uv\",new THREE.BufferAttribute(c,2));return function(a){THREE.Object3D.call(this);this.type=\"Sprite\";this.geometry=d;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();\nTHREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceToPoint(a);d>this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};\nTHREE.Particle=THREE.Sprite;THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;\nTHREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};\nTHREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)};THREE.Scene=function(){THREE.Object3D.call(this);this.type=\"Scene\";this.overrideMaterial=this.fog=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.Fog=function(a,b,c){this.name=\"\";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};\nTHREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name=\"\";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.common=\"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n}\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\\n\\tfloat distance = dot( planeNormal, point-pointOnPlane );\\n\\treturn point - distance * planeNormal;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\\n}\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\tif ( decayExponent > 0.0 ) {\\n\\t  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n#ifdef GAMMA_INPUT\\n\\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n#else\\n\\treturn a;\\n#endif\\n}\\nvec3 linearToOutput( in vec3 a ) {\\n#ifdef GAMMA_OUTPUT\\n\\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n#else\\n\\treturn a;\\n#endif\\n}\\n\";\nTHREE.ShaderChunk.alphatest_fragment=\"#ifdef ALPHATEST\\n\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";THREE.ShaderChunk.lights_lambert_vertex=\"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\ntransformedNormal = normalize( transformedNormal );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\\n\\n\\tfloat dotProduct = dot( transformedNormal, dirVector );\\n\\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\\t\\t#endif\\n\\n\\t#endif\\n\\n\\t#ifdef WRAP_AROUND\\n\\n\\t\\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\\t\\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n\\n\\t\\t#endif\\n\\n\\t#endif\\n\\n\\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n\\n\\t#endif\\n\\n}\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\\t\\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\t\\tlVector = normalize( lVector );\\n\\t\\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\\t\\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t#endif\\n\\n\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\\t\\t\\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n\\n\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t#endif\\n\\n\\t\\tvLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\\t\\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\\t\\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\\n\\n\\t\\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\\t\\t\\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\\t\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\\t\\t\\tlVector = normalize( lVector );\\n\\n\\t\\t\\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\t\\t\\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\\t\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\t\\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\\t\\t\\t\\t#endif\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\\t\\t\\t\\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n\\n\\t\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\t\\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n\\n\\t\\t\\t\\t#endif\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t\\tvLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\\n\\n\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t}\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\\n\\n\\t\\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\t\\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\n\\n\\t\\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.map_particle_pars_fragment=\"#ifdef USE_MAP\\n\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n\\n#endif\\n\";THREE.ShaderChunk.default_vertex=\"#ifdef USE_SKINNING\\n\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#elif defined( USE_MORPHTARGETS )\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n\\n#else\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\nTHREE.ShaderChunk.map_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\\tvarying vec2 vUv;\\n\\n#endif\\n\\n#ifdef USE_MAP\\n\\n\\tuniform sampler2D map;\\n\\n#endif\";THREE.ShaderChunk.skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\\t#ifdef USE_MORPHNORMALS\\n\\n\\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n\\n\\t#else\\n\\n\\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n\\tuniform float logDepthBufFC;\\n\\n#endif\";THREE.ShaderChunk.lightmap_pars_vertex=\"#ifdef USE_LIGHTMAP\\n\\n\\tvarying vec2 vUv2;\\n\\n#endif\";THREE.ShaderChunk.lights_phong_fragment=\"#ifndef FLAT_SHADED\\n\\n\\tvec3 normal = normalize( vNormal );\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\\t#endif\\n\\n#else\\n\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\nvec3 viewPosition = normalize( vViewPosition );\\n\\n#ifdef USE_NORMALMAP\\n\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\\t\\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\t\\tlVector = normalize( lVector );\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, lVector );\\n\\n\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n\\t\\t\\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\\t\\t\\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\\t\\t#endif\\n\\n\\t\\ttotalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\\n\\n\\t\\t\\t\\t// specular\\n\\n\\t\\tvec3 pointHalfVector = normalize( lVector + viewPosition );\\n\\t\\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n\\t\\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n\\t\\ttotalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\\t\\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\\t\\tlVector = normalize( lVector );\\n\\n\\t\\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\n\\n\\t\\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\\t\\t\\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\\t\\t\\t// diffuse\\n\\n\\t\\t\\tfloat dotProduct = dot( normal, lVector );\\n\\n\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\\n\\t\\t\\t\\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\\t\\t\\t\\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n\\n\\t\\t\\t#else\\n\\n\\t\\t\\t\\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t\\ttotalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\\n\\n\\t\\t\\t// specular\\n\\n\\t\\t\\tvec3 spotHalfVector = normalize( lVector + viewPosition );\\n\\t\\t\\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\n\\t\\t\\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n\\n\\t\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\t\\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\\n\\t\\t\\ttotalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\\n\\n\\t\\t}\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, dirVector );\\n\\n\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n\\t\\t\\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\\t\\t\\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\\t\\t#endif\\n\\n\\t\\ttotalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n\\t\\t// specular\\n\\n\\t\\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\\n\\t\\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n\\t\\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n\\t\\t/*\\n\\t\\t// fresnel term from skin shader\\n\\t\\tconst float F0 = 0.128;\\n\\n\\t\\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\\n\\t\\tfloat exponential = pow( base, 5.0 );\\n\\n\\t\\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\\n\\t\\t*/\\n\\n\\t\\t/*\\n\\t\\t// fresnel term from fresnel shader\\n\\t\\tconst float mFresnelBias = 0.08;\\n\\t\\tconst float mFresnelScale = 0.3;\\n\\t\\tconst float mFresnelPower = 5.0;\\n\\n\\t\\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\\n\\t\\t*/\\n\\n\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\t// \\t\\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\\n\\n\\t\\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n\\t\\ttotalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, lVector );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\\t\\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\\t\\ttotalDiffuseLight += hemiColor;\\n\\n\\t\\t// specular (sky light)\\n\\n\\t\\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\n\\t\\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\n\\t\\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\\n\\n\\t\\t// specular (ground light)\\n\\n\\t\\tvec3 lVectorGround = -lVector;\\n\\n\\t\\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\n\\t\\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\n\\t\\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\\n\\n\\t\\tfloat dotProductGround = dot( normal, lVectorGround );\\n\\n\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\\n\\t\\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\\n\\t\\ttotalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n\\n\\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\\n\\n#else\\n\\n\\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.fog_pars_fragment=\"#ifdef USE_FOG\\n\\n\\tuniform vec3 fogColor;\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tuniform float fogDensity;\\n\\n\\t#else\\n\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n\\n#endif\";THREE.ShaderChunk.morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\n\\tvec3 morphedNormal = vec3( 0.0 );\\n\\n\\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n\\tmorphedNormal += normal;\\n\\n#endif\";\nTHREE.ShaderChunk.envmap_pars_fragment=\"#ifdef USE_ENVMAP\\n\\n\\tuniform float reflectivity;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tuniform float refractionRatio;\\n\\n\\t#else\\n\\n\\t\\tvarying vec3 vReflect;\\n\\n\\t#endif\\n\\n#endif\\n\";THREE.ShaderChunk.logdepthbuf_fragment=\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\nTHREE.ShaderChunk.normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\n\\t// Per-Pixel Tangent Space Normal Mapping\\n\\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\n\\t}\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_pars_vertex=\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";THREE.ShaderChunk.lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\n\\tvarying vec2 vUv2;\\n\\tuniform sampler2D lightMap;\\n\\n#endif\";THREE.ShaderChunk.shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\n\\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\\t\\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\\t}\\n\\n#endif\";\nTHREE.ShaderChunk.lights_phong_vertex=\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\";THREE.ShaderChunk.map_fragment=\"#ifdef USE_MAP\\n\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\n\\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\\tdiffuseColor *= texelColor;\\n\\n#endif\";THREE.ShaderChunk.lightmap_vertex=\"#ifdef USE_LIGHTMAP\\n\\n\\tvUv2 = uv2;\\n\\n#endif\";THREE.ShaderChunk.map_particle_fragment=\"#ifdef USE_MAP\\n\\n\\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\nTHREE.ShaderChunk.color_pars_fragment=\"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\\n\";THREE.ShaderChunk.color_vertex=\"#ifdef USE_COLOR\\n\\n\\tvColor.xyz = inputToLinear( color.xyz );\\n\\n#endif\";THREE.ShaderChunk.skinning_vertex=\"#ifdef USE_SKINNING\\n\\n\\t#ifdef USE_MORPHTARGETS\\n\\n\\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\\n\\n\\t#else\\n\\n\\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\\n\\n\\t#endif\\n\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_vertex=\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\\tvarying vec3 vReflect;\\n\\n\\tuniform float refractionRatio;\\n\\n#endif\\n\";THREE.ShaderChunk.linear_to_gamma_fragment=\"\\n\\toutgoingLight = linearToOutput( outgoingLight );\\n\";THREE.ShaderChunk.color_pars_vertex=\"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\";THREE.ShaderChunk.lights_lambert_pars_vertex=\"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\\tuniform vec3 wrapRGB;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.map_pars_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";THREE.ShaderChunk.envmap_fragment=\"#ifdef USE_ENVMAP\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\\t\\t// Transforming Normal Vectors with the Inverse Transformation\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t\\t#endif\\n\\n\\t#else\\n\\n\\t\\tvec3 reflectVec = vReflect;\\n\\n\\t#endif\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\t#else\\n\\t\\tfloat flipNormal = 1.0;\\n\\t#endif\\n\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#endif\\n\\n\\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\n\\tuniform sampler2D specularMap;\\n\\n#endif\";THREE.ShaderChunk.logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\\t#endif\\n\\n#endif\";THREE.ShaderChunk.morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\n\\t#else\\n\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\n\\t#endif\\n\\n#endif\";\nTHREE.ShaderChunk.specularmap_fragment=\"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\\tspecularStrength = 1.0;\\n\\n#endif\";THREE.ShaderChunk.fog_fragment=\"#ifdef USE_FOG\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\\t#else\\n\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\\t#endif\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tfloat fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n\\t\\tfogFactor = whiteCompliment( fogFactor );\\n\\n\\t#else\\n\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\\t#endif\\n\\t\\n\\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\nTHREE.ShaderChunk.bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\n\\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\\tvec2 dHdxy_fwd() {\\n\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\\t\\treturn vec2( dBx, dBy );\\n\\n\\t}\\n\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\t\\t// normalized\\n\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\\t}\\n\\n#endif\\n\";\nTHREE.ShaderChunk.defaultnormal_vertex=\"#ifdef USE_SKINNING\\n\\n\\tvec3 objectNormal = skinnedNormal.xyz;\\n\\n#elif defined( USE_MORPHNORMALS )\\n\\n\\tvec3 objectNormal = morphedNormal;\\n\\n#else\\n\\n\\tvec3 objectNormal = normal;\\n\\n#endif\\n\\n#ifdef FLIP_SIDED\\n\\n\\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";THREE.ShaderChunk.lights_phong_pars_fragment=\"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\\tuniform vec3 wrapRGB;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\\tvarying vec3 vNormal;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.skinbase_vertex=\"#ifdef USE_SKINNING\\n\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";THREE.ShaderChunk.map_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\nTHREE.ShaderChunk.lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\n\\toutgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\\n\\n#endif\";THREE.ShaderChunk.shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\n\\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";THREE.ShaderChunk.color_fragment=\"#ifdef USE_COLOR\\n\\n\\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";THREE.ShaderChunk.morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\n\\tvec3 morphed = vec3( 0.0 );\\n\\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\\t#endif\\n\\n\\tmorphed += position;\\n\\n#endif\";\nTHREE.ShaderChunk.envmap_vertex=\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\\t#else\\n\\n\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmap_fragment=\"#ifdef USE_SHADOWMAP\\n\\n\\t#ifdef SHADOWMAP_DEBUG\\n\\n\\t\\tvec3 frustumColors[3];\\n\\t\\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\\t\\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\\t\\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\\t#endif\\n\\n\\t#ifdef SHADOWMAP_CASCADE\\n\\n\\t\\tint inFrustumCount = 0;\\n\\n\\t#endif\\n\\n\\tfloat fDepth;\\n\\tvec3 shadowColor = vec3( 1.0 );\\n\\n\\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\\t\\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\\t\\t\\t\\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\\t\\t\\t\\t// if ( all( something, something ) ) using this instead\\n\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\n\\t\\t\\t\\t// don't shadow pixels outside of light frustum\\n\\t\\t\\t\\t// use just first frustum (for cascades)\\n\\t\\t\\t\\t// don't shadow pixels behind far plane of light frustum\\n\\n\\t\\t#ifdef SHADOWMAP_CASCADE\\n\\n\\t\\t\\tinFrustumCount += int( inFrustum );\\n\\t\\t\\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\\t\\t#endif\\n\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\n\\t\\tif ( frustumTest ) {\\n\\n\\t\\t\\tshadowCoord.z += shadowBias[ i ];\\n\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\\t\\t\\t\\t\\t\\t// Percentage-close filtering\\n\\t\\t\\t\\t\\t\\t// (9 pixel kernel)\\n\\t\\t\\t\\t\\t\\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\\t\\t\\t\\tfloat shadow = 0.0;\\n\\n\\t\\t/*\\n\\t\\t\\t\\t\\t\\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\\t\\t\\t\\t\\t\\t// must enroll loop manually\\n\\n\\t\\t\\t\\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\\t\\t\\t\\t\\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\\t\\t\\t\\t\\t\\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\\t\\t\\t\\t\\t\\t\\t\\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\\t\\t\\t\\t\\t\\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\\t\\t\\t\\t\\t\\tif ( fDepth < shadowCoord.z )\\n\\t\\t\\t\\t\\t\\t\\tshadow += 1.0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tshadow /= 9.0;\\n\\n\\t\\t*/\\n\\n\\t\\t\\t\\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\\t\\t\\t\\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\\t\\t\\t\\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\\t\\t\\t\\tfloat dx0 = -1.25 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy0 = -1.25 * yPixelOffset;\\n\\t\\t\\t\\tfloat dx1 = 1.25 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\\t\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\\t\\t\\t\\t\\t\\t// Percentage-close filtering\\n\\t\\t\\t\\t\\t\\t// (9 pixel kernel)\\n\\t\\t\\t\\t\\t\\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\\t\\t\\t\\tfloat shadow = 0.0;\\n\\n\\t\\t\\t\\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\\t\\t\\t\\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\\t\\t\\t\\tfloat dx0 = -1.0 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy0 = -1.0 * yPixelOffset;\\n\\t\\t\\t\\tfloat dx1 = 1.0 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\\t\\t\\t\\tmat3 shadowKernel;\\n\\t\\t\\t\\tmat3 depthKernel;\\n\\n\\t\\t\\t\\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\\t\\t\\t\\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\\t\\t\\t\\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\\t\\t\\t\\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\\t\\t\\t\\tvec3 shadowZ = vec3( shadowCoord.z );\\n\\t\\t\\t\\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[0] *= vec3(0.25);\\n\\n\\t\\t\\t\\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[1] *= vec3(0.25);\\n\\n\\t\\t\\t\\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[2] *= vec3(0.25);\\n\\n\\t\\t\\t\\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\\t\\t\\t\\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\\t\\t\\t\\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\\t\\t\\t\\tvec4 shadowValues;\\n\\t\\t\\t\\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\\t\\t\\t\\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\\t\\t\\t\\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\\t\\t\\t#else\\n\\n\\t\\t\\t\\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\\t\\t\\t\\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z )\\n\\n\\t\\t// spot with multiple shadows is darker\\n\\n\\t\\t\\t\\t\\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\\t\\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\\t\\t// \\t\\t\\t\\t\\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t}\\n\\n\\n\\t\\t#ifdef SHADOWMAP_DEBUG\\n\\n\\t\\t\\t#ifdef SHADOWMAP_CASCADE\\n\\n\\t\\t\\t\\tif ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\\n\\n\\t\\t\\t#else\\n\\n\\t\\t\\t\\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n\\t// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\\n\\tshadowColor = inputToLinear( shadowColor );\\n\\n\\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\\t#ifdef USE_SKINNING\\n\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\\t#elif defined( USE_MORPHTARGETS )\\n\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\\n\\n\\t#else\\n\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n\\n\\t#endif\\n\\n#endif\\n\";THREE.ShaderChunk.shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\n\\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\\t\\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\\t\\tfloat depth = dot( rgba_depth, bit_shift );\\n\\t\\treturn depth;\\n\\n\\t}\\n\\n#endif\";\nTHREE.ShaderChunk.skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\n\\t#ifdef BONE_TEXTURE\\n\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#else\\n\\n\\t\\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.logdepthbuf_pars_fragment=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\tuniform float logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\t#extension GL_EXT_frag_depth : enable\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n#endif\";THREE.ShaderChunk.alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";THREE.ShaderChunk.alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\n\\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\nTHREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];b[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e}}return b}};\nTHREE.UniformsLib={common:{diffuse:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:\"t\",value:null},specularMap:{type:\"t\",value:null},alphaMap:{type:\"t\",value:null},envMap:{type:\"t\",value:null},flipEnvMap:{type:\"f\",value:-1},reflectivity:{type:\"f\",value:1},refractionRatio:{type:\"f\",value:.98},morphTargetInfluences:{type:\"f\",value:0}},bump:{bumpMap:{type:\"t\",value:null},bumpScale:{type:\"f\",\nvalue:1}},normalmap:{normalMap:{type:\"t\",value:null},normalScale:{type:\"v2\",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:\"fv\",value:[]},directionalLightDirection:{type:\"fv\",value:[]},directionalLightColor:{type:\"fv\",value:[]},hemisphereLightDirection:{type:\"fv\",value:[]},hemisphereLightSkyColor:{type:\"fv\",value:[]},hemisphereLightGroundColor:{type:\"fv\",\nvalue:[]},pointLightColor:{type:\"fv\",value:[]},pointLightPosition:{type:\"fv\",value:[]},pointLightDistance:{type:\"fv1\",value:[]},pointLightDecay:{type:\"fv1\",value:[]},spotLightColor:{type:\"fv\",value:[]},spotLightPosition:{type:\"fv\",value:[]},spotLightDirection:{type:\"fv\",value:[]},spotLightDistance:{type:\"fv1\",value:[]},spotLightAngleCos:{type:\"fv1\",value:[]},spotLightExponent:{type:\"fv1\",value:[]},spotLightDecay:{type:\"fv1\",value:[]}},particle:{psColor:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",\nvalue:1},size:{type:\"f\",value:1},scale:{type:\"f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:\"tv\",value:[]},shadowMapSize:{type:\"v2v\",value:[]},shadowBias:{type:\"fv1\",value:[]},shadowDarkness:{type:\"fv1\",value:[]},shadowMatrix:{type:\"m4v\",value:[]}}};\nTHREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",\nTHREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,\"\\t#ifdef USE_ENVMAP\",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,\"\\t#endif\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,\n\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",\nTHREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,\"\\toutgoingLight = diffuseColor.rgb;\",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},\nlambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:\"c\",value:new THREE.Color(0)},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,\nTHREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,\nTHREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,\nTHREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,\nTHREE.ShaderChunk.specularmap_fragment,\"\\t#ifdef DOUBLE_SIDED\\n\\t\\tif ( gl_FrontFacing )\\n\\t\\t\\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\\n\\t\\telse\\n\\t\\t\\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\\n\\t#else\\n\\t\\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\\n\\t#endif\",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},\nphong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:\"c\",value:new THREE.Color(0)},specular:{type:\"c\",value:new THREE.Color(1118481)},shininess:{type:\"f\",value:30},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\",THREE.ShaderChunk.common,\nTHREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,\nTHREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,\"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"\\tvViewPosition = -mvPosition.xyz;\",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,\nTHREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:[\"uniform float size;\\nuniform float scale;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\tgl_Position = projectionMatrix * mvPosition;\",\nTHREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 psColor;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( psColor, opacity );\",\nTHREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,\"\\toutgoingLight = diffuseColor.rgb;\",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:\"f\",value:1},dashSize:{type:\"f\",value:1},totalSize:{type:\"f\",value:2}}]),\nvertexShader:[\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\",THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,\"\\toutgoingLight = diffuseColor.rgb;\",THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},\ndepth:{uniforms:{mNear:{type:\"f\",value:1},mFar:{type:\"f\",value:2E3},opacity:{type:\"f\",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"void main() {\",THREE.ShaderChunk.logdepthbuf_fragment,\"\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\n\\tgl_FragColor = vec4( vec3( color ), opacity );\\n}\"].join(\"\\n\")},normal:{uniforms:{opacity:{type:\"f\",value:1}},vertexShader:[\"varying vec3 vNormal;\",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\n\"void main() {\\n\\tvNormal = normalize( normalMatrix * normal );\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\\nvarying vec3 vNormal;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,\"}\"].join(\"\\n\")},cube:{uniforms:{tCube:{type:\"t\",value:null},\ntFlip:{type:\"f\",value:-1}},vertexShader:[\"varying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"void main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",THREE.ShaderChunk.logdepthbuf_fragment,\"}\"].join(\"\\n\")},equirect:{uniforms:{tEquirect:{type:\"t\",value:null},tFlip:{type:\"f\",value:-1}},vertexShader:[\"varying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\nTHREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\nvec3 direction = normalize( vWorldPosition );\\nvec2 sampleUV;\\nsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\nsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\ngl_FragColor = texture2D( tEquirect, sampleUV );\",THREE.ShaderChunk.logdepthbuf_fragment,\n\"}\"].join(\"\\n\")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"vec4 pack_depth( const in float depth ) {\\n\\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\\tres -= res.xxyz * bit_mask;\\n\\treturn res;\\n}\\nvoid main() {\",\nTHREE.ShaderChunk.logdepthbuf_fragment,\"\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\\n\\t#else\\n\\t\\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n\\t#endif\\n}\"].join(\"\\n\")}};\nTHREE.WebGLRenderer=function(a){function b(a){var b=a.geometry;a=a.material;var c=b.vertices.length;if(a.attributes){void 0===b.__webglCustomAttributesList&&(b.__webglCustomAttributesList=[]);for(var d in a.attributes){var e=a.attributes[d];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var f=1;\"v2\"===e.type?f=2:\"v3\"===e.type?f=3:\"v4\"===e.type?f=4:\"c\"===e.type&&(f=3);e.size=f;e.array=new Float32Array(c*f);e.buffer=m.createBuffer();e.buffer.belongsToAttribute=d;e.needsUpdate=\n!0}b.__webglCustomAttributesList.push(e)}}}function c(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function d(a,b,c,d){c=c.attributes;var e=b.attributes;b=b.attributesKeys;for(var f=0,g=b.length;f<g;f++){var h=b[f],k=e[h];if(0<=k){var n=c[h];void 0!==n?(h=n.itemSize,m.bindBuffer(m.ARRAY_BUFFER,n.buffer),W.enableAttribute(k),m.vertexAttribPointer(k,h,m.FLOAT,!1,0,d*h*4)):void 0!==a.defaultAttributeValues&&(2===a.defaultAttributeValues[h].length?\nm.vertexAttrib2fv(k,a.defaultAttributeValues[h]):3===a.defaultAttributeValues[h].length&&m.vertexAttrib3fv(k,a.defaultAttributeValues[h]))}}W.disableUnusedAttributes()}function e(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function f(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function g(a,\nb){return b[0]-a[0]}function h(a){if(!1!==a.visible){if(!(a instanceof THREE.Scene||a instanceof THREE.Group)){void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,a.addEventListener(\"removed\",wb));var c=a.geometry;if(void 0!==c&&void 0===c.__webglInit)if(c.__webglInit=!0,c.addEventListener(\"dispose\",jb),c instanceof THREE.BufferGeometry)B.info.memory.geometries++;else if(a instanceof THREE.Mesh)q(a,c);else if(a instanceof THREE.Line){if(void 0===\nc.__webglVertexBuffer){c.__webglVertexBuffer=m.createBuffer();c.__webglColorBuffer=m.createBuffer();c.__webglLineDistanceBuffer=m.createBuffer();B.info.memory.geometries++;var d=c.vertices.length;c.__vertexArray=new Float32Array(3*d);c.__colorArray=new Float32Array(3*d);c.__lineDistanceArray=new Float32Array(1*d);c.__webglLineCount=d;b(a);c.verticesNeedUpdate=!0;c.colorsNeedUpdate=!0;c.lineDistancesNeedUpdate=!0}}else a instanceof THREE.PointCloud&&void 0===c.__webglVertexBuffer&&(c.__webglVertexBuffer=\nm.createBuffer(),c.__webglColorBuffer=m.createBuffer(),B.info.memory.geometries++,d=c.vertices.length,c.__vertexArray=new Float32Array(3*d),c.__colorArray=new Float32Array(3*d),c.__webglParticleCount=d,b(a),c.verticesNeedUpdate=!0,c.colorsNeedUpdate=!0);if(void 0===a.__webglActive)if(a.__webglActive=!0,a instanceof THREE.Mesh)if(c instanceof THREE.BufferGeometry)n(ba,c,a);else{if(c instanceof THREE.Geometry)for(var c=Ua[c.id],d=0,e=c.length;d<e;d++)n(ba,c[d],a)}else a instanceof THREE.Line||a instanceof\nTHREE.PointCloud?n(ba,c,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&qa.push({id:null,object:a,opaque:null,transparent:null,z:0});if(a instanceof THREE.Light)ca.push(a);else if(a instanceof THREE.Sprite)Xa.push(a);else if(a instanceof THREE.LensFlare)Ya.push(a);else if((c=ba[a.id])&&(!1===a.frustumCulled||!0===cb.intersectsObject(a)))for(d=0,e=c.length;d<e;d++){var f=c[d],g=f,k=g.object,l=g.buffer,p=k.geometry,k=k.material;k instanceof THREE.MeshFaceMaterial?(k=k.materials[p instanceof\nTHREE.BufferGeometry?0:l.materialIndex],g.material=k,k.transparent?Qa.push(g):Ka.push(g)):k&&(g.material=k,k.transparent?Qa.push(g):Ka.push(g));f.render=!0;!0===B.sortObjects&&(wa.setFromMatrixPosition(a.matrixWorld),wa.applyProjection(db),f.z=wa.z)}}d=0;for(e=a.children.length;d<e;d++)h(a.children[d])}}function k(a,b,c,d,e){for(var f,g=0,h=a.length;g<h;g++){f=a[g];var k=f.object,m=f.buffer;w(k,b);if(e)f=e;else{f=f.material;if(!f)continue;u(f)}B.setMaterialFaces(f);m instanceof THREE.BufferGeometry?\nB.renderBufferDirect(b,c,d,f,m,k):B.renderBuffer(b,c,d,f,m,k)}}function l(a,b,c,d,e,f){for(var g,h=0,k=a.length;h<k;h++){g=a[h];var m=g.object;if(m.visible){if(f)g=f;else{g=g[b];if(!g)continue;u(g)}B.renderImmediateObject(c,d,e,g,m)}}}function p(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function q(a,b){var d=a.material,e=!1;if(void 0===Ua[b.id]||!0===b.groupsNeedUpdate){delete ba[a.id];for(var f=Ua,g=b.id,d=d instanceof THREE.MeshFaceMaterial,\nh=da.get(\"OES_element_index_uint\")?4294967296:65535,k,e={},l=b.morphTargets.length,p=b.morphNormals.length,q,s={},t=[],r=0,w=b.faces.length;r<w;r++){k=b.faces[r];var u=d?k.materialIndex:0;u in e||(e[u]={hash:u,counter:0});k=e[u].hash+\"_\"+e[u].counter;k in s||(q={id:Qb++,faces3:[],materialIndex:u,vertices:0,numMorphTargets:l,numMorphNormals:p},s[k]=q,t.push(q));s[k].vertices+3>h&&(e[u].counter+=1,k=e[u].hash+\"_\"+e[u].counter,k in s||(q={id:Qb++,faces3:[],materialIndex:u,vertices:0,numMorphTargets:l,\nnumMorphNormals:p},s[k]=q,t.push(q)));s[k].faces3.push(r);s[k].vertices+=3}f[g]=t;b.groupsNeedUpdate=!1}f=Ua[b.id];g=0;for(d=f.length;g<d;g++){h=f[g];if(void 0===h.__webglVertexBuffer){e=h;e.__webglVertexBuffer=m.createBuffer();e.__webglNormalBuffer=m.createBuffer();e.__webglTangentBuffer=m.createBuffer();e.__webglColorBuffer=m.createBuffer();e.__webglUVBuffer=m.createBuffer();e.__webglUV2Buffer=m.createBuffer();e.__webglSkinIndicesBuffer=m.createBuffer();e.__webglSkinWeightsBuffer=m.createBuffer();\ne.__webglFaceBuffer=m.createBuffer();e.__webglLineBuffer=m.createBuffer();if(p=e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],l=0;l<p;l++)e.__webglMorphTargetsBuffers.push(m.createBuffer());if(p=e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],l=0;l<p;l++)e.__webglMorphNormalsBuffers.push(m.createBuffer());B.info.memory.geometries++;e=h;r=a;w=r.geometry;p=e.faces3;l=3*p.length;s=1*p.length;t=3*p.length;p=c(r,e);e.__vertexArray=new Float32Array(3*l);e.__normalArray=new Float32Array(3*l);\ne.__colorArray=new Float32Array(3*l);e.__uvArray=new Float32Array(2*l);1<w.faceVertexUvs.length&&(e.__uv2Array=new Float32Array(2*l));w.hasTangents&&(e.__tangentArray=new Float32Array(4*l));r.geometry.skinWeights.length&&r.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*l),e.__skinWeightArray=new Float32Array(4*l));r=null!==da.get(\"OES_element_index_uint\")&&21845<s?Uint32Array:Uint16Array;e.__typeArray=r;e.__faceArray=new r(3*s);e.__lineArray=new r(2*t);if(w=e.numMorphTargets)for(e.__morphTargetsArrays=\n[],r=0;r<w;r++)e.__morphTargetsArrays.push(new Float32Array(3*l));if(w=e.numMorphNormals)for(e.__morphNormalsArrays=[],r=0;r<w;r++)e.__morphNormalsArrays.push(new Float32Array(3*l));e.__webglFaceCount=3*s;e.__webglLineCount=2*t;if(p.attributes)for(s in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),s=void 0,p.attributes){var t=p.attributes[s],r={},v;for(v in t)r[v]=t[v];if(!r.__webglInitialized||r.createUniqueBuffers)r.__webglInitialized=!0,w=1,\"v2\"===r.type?w=2:\"v3\"===\nr.type?w=3:\"v4\"===r.type?w=4:\"c\"===r.type&&(w=3),r.size=w,r.array=new Float32Array(l*w),r.buffer=m.createBuffer(),r.buffer.belongsToAttribute=s,t.needsUpdate=!0,r.__original=t;e.__webglCustomAttributesList.push(r)}e.__inittedArrays=!0;b.verticesNeedUpdate=!0;b.morphTargetsNeedUpdate=!0;b.elementsNeedUpdate=!0;b.uvsNeedUpdate=!0;b.normalsNeedUpdate=!0;b.tangentsNeedUpdate=!0;e=b.colorsNeedUpdate=!0}else e=!1;(e||void 0===a.__webglActive)&&n(ba,h,a)}a.__webglActive=!0}function n(a,b,c){var d=c.id;a[d]=\na[d]||[];a[d].push({id:d,buffer:b,object:c,material:null,z:0})}function t(a){var b=a.geometry;if(b instanceof THREE.BufferGeometry)for(var d=b.attributes,e=b.attributesKeys,f=0,g=e.length;f<g;f++){var h=e[f],k=d[h],n=\"index\"===h?m.ELEMENT_ARRAY_BUFFER:m.ARRAY_BUFFER;void 0===k.buffer?(k.buffer=m.createBuffer(),m.bindBuffer(n,k.buffer),m.bufferData(n,k.array,k instanceof THREE.DynamicBufferAttribute?m.DYNAMIC_DRAW:m.STATIC_DRAW),k.needsUpdate=!1):!0===k.needsUpdate&&(m.bindBuffer(n,k.buffer),void 0===\nk.updateRange||-1===k.updateRange.count?m.bufferSubData(n,0,k.array):0===k.updateRange.count?console.error(\"THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually.\"):(m.bufferSubData(n,k.updateRange.offset*k.array.BYTES_PER_ELEMENT,k.array.subarray(k.updateRange.offset,k.updateRange.offset+k.updateRange.count)),k.updateRange.count=0),k.needsUpdate=!1)}else if(a instanceof THREE.Mesh){!0===\nb.groupsNeedUpdate&&q(a,b);for(var l=Ua[b.id],f=0,p=l.length;f<p;f++){var t=l[f],w=c(a,t),u=w.attributes&&r(w);if(b.verticesNeedUpdate||b.morphTargetsNeedUpdate||b.elementsNeedUpdate||b.uvsNeedUpdate||b.normalsNeedUpdate||b.colorsNeedUpdate||b.tangentsNeedUpdate||u){var v=t,x=a,D=m.DYNAMIC_DRAW,A=!b.dynamic,E=w;if(v.__inittedArrays){var G=!1===E instanceof THREE.MeshPhongMaterial&&E.shading===THREE.FlatShading,y=void 0,z=void 0,F=void 0,B=void 0,I=void 0,H=void 0,M=void 0,R=void 0,P=void 0,U=void 0,\nO=void 0,J=void 0,L=void 0,N=void 0,Ka=void 0,V=void 0,W=void 0,Qa=void 0,Ya=void 0,Xa=void 0,da=void 0,ba=void 0,ja=void 0,Pa=void 0,ka=void 0,Q=void 0,ha=void 0,ia=void 0,ob=void 0,Y=void 0,ub=void 0,pa=void 0,ab=void 0,oa=void 0,ca=void 0,qa=void 0,Ca=void 0,ta=void 0,na=void 0,wa=void 0,La=0,Ma=0,kb=0,yb=0,zb=0,Ra=0,Aa=0,eb=0,Ha=0,la=0,ra=0,K=0,za=void 0,Sa=v.__vertexArray,Ab=v.__uvArray,lb=v.__uv2Array,Na=v.__normalArray,sa=v.__tangentArray,Da=v.__colorArray,Ea=v.__skinIndexArray,Fa=v.__skinWeightArray,\nGb=v.__morphTargetsArrays,Bb=v.__morphNormalsArrays,mb=v.__webglCustomAttributesList,C=void 0,Va=v.__faceArray,Ta=v.__lineArray,ea=x.geometry,fb=ea.elementsNeedUpdate,vb=ea.uvsNeedUpdate,Mb=ea.normalsNeedUpdate,Ob=ea.tangentsNeedUpdate,ib=ea.colorsNeedUpdate,sb=ea.morphTargetsNeedUpdate,Cb=ea.vertices,$=v.faces3,xa=ea.faces,Hb=ea.faceVertexUvs[0],Oa=ea.faceVertexUvs[1],$a=ea.skinIndices,Ga=ea.skinWeights,nb=ea.morphTargets,bb=ea.morphNormals;if(ea.verticesNeedUpdate){y=0;for(z=$.length;y<z;y++)B=\nxa[$[y]],J=Cb[B.a],L=Cb[B.b],N=Cb[B.c],Sa[Ma]=J.x,Sa[Ma+1]=J.y,Sa[Ma+2]=J.z,Sa[Ma+3]=L.x,Sa[Ma+4]=L.y,Sa[Ma+5]=L.z,Sa[Ma+6]=N.x,Sa[Ma+7]=N.y,Sa[Ma+8]=N.z,Ma+=9;m.bindBuffer(m.ARRAY_BUFFER,v.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Sa,D)}if(sb)for(ca=0,qa=nb.length;ca<qa;ca++){y=ra=0;for(z=$.length;y<z;y++)na=$[y],B=xa[na],J=nb[ca].vertices[B.a],L=nb[ca].vertices[B.b],N=nb[ca].vertices[B.c],Ca=Gb[ca],Ca[ra]=J.x,Ca[ra+1]=J.y,Ca[ra+2]=J.z,Ca[ra+3]=L.x,Ca[ra+4]=L.y,Ca[ra+5]=L.z,Ca[ra+6]=N.x,Ca[ra+\n7]=N.y,Ca[ra+8]=N.z,E.morphNormals&&(G?Xa=Ya=Qa=bb[ca].faceNormals[na]:(wa=bb[ca].vertexNormals[na],Qa=wa.a,Ya=wa.b,Xa=wa.c),ta=Bb[ca],ta[ra]=Qa.x,ta[ra+1]=Qa.y,ta[ra+2]=Qa.z,ta[ra+3]=Ya.x,ta[ra+4]=Ya.y,ta[ra+5]=Ya.z,ta[ra+6]=Xa.x,ta[ra+7]=Xa.y,ta[ra+8]=Xa.z),ra+=9;m.bindBuffer(m.ARRAY_BUFFER,v.__webglMorphTargetsBuffers[ca]);m.bufferData(m.ARRAY_BUFFER,Gb[ca],D);E.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglMorphNormalsBuffers[ca]),m.bufferData(m.ARRAY_BUFFER,Bb[ca],D))}if(Ga.length){y=0;\nfor(z=$.length;y<z;y++)B=xa[$[y]],Pa=Ga[B.a],ka=Ga[B.b],Q=Ga[B.c],Fa[la]=Pa.x,Fa[la+1]=Pa.y,Fa[la+2]=Pa.z,Fa[la+3]=Pa.w,Fa[la+4]=ka.x,Fa[la+5]=ka.y,Fa[la+6]=ka.z,Fa[la+7]=ka.w,Fa[la+8]=Q.x,Fa[la+9]=Q.y,Fa[la+10]=Q.z,Fa[la+11]=Q.w,ha=$a[B.a],ia=$a[B.b],ob=$a[B.c],Ea[la]=ha.x,Ea[la+1]=ha.y,Ea[la+2]=ha.z,Ea[la+3]=ha.w,Ea[la+4]=ia.x,Ea[la+5]=ia.y,Ea[la+6]=ia.z,Ea[la+7]=ia.w,Ea[la+8]=ob.x,Ea[la+9]=ob.y,Ea[la+10]=ob.z,Ea[la+11]=ob.w,la+=12;0<la&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglSkinIndicesBuffer),\nm.bufferData(m.ARRAY_BUFFER,Ea,D),m.bindBuffer(m.ARRAY_BUFFER,v.__webglSkinWeightsBuffer),m.bufferData(m.ARRAY_BUFFER,Fa,D))}if(ib){y=0;for(z=$.length;y<z;y++)B=xa[$[y]],M=B.vertexColors,R=B.color,3===M.length&&E.vertexColors===THREE.VertexColors?(da=M[0],ba=M[1],ja=M[2]):ja=ba=da=R,Da[Ha]=da.r,Da[Ha+1]=da.g,Da[Ha+2]=da.b,Da[Ha+3]=ba.r,Da[Ha+4]=ba.g,Da[Ha+5]=ba.b,Da[Ha+6]=ja.r,Da[Ha+7]=ja.g,Da[Ha+8]=ja.b,Ha+=9;0<Ha&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,Da,\nD))}if(Ob&&ea.hasTangents){y=0;for(z=$.length;y<z;y++)B=xa[$[y]],P=B.vertexTangents,Ka=P[0],V=P[1],W=P[2],sa[Aa]=Ka.x,sa[Aa+1]=Ka.y,sa[Aa+2]=Ka.z,sa[Aa+3]=Ka.w,sa[Aa+4]=V.x,sa[Aa+5]=V.y,sa[Aa+6]=V.z,sa[Aa+7]=V.w,sa[Aa+8]=W.x,sa[Aa+9]=W.y,sa[Aa+10]=W.z,sa[Aa+11]=W.w,Aa+=12;m.bindBuffer(m.ARRAY_BUFFER,v.__webglTangentBuffer);m.bufferData(m.ARRAY_BUFFER,sa,D)}if(Mb){y=0;for(z=$.length;y<z;y++)if(B=xa[$[y]],I=B.vertexNormals,H=B.normal,3===I.length&&!1===G)for(Y=0;3>Y;Y++)pa=I[Y],Na[Ra]=pa.x,Na[Ra+1]=\npa.y,Na[Ra+2]=pa.z,Ra+=3;else for(Y=0;3>Y;Y++)Na[Ra]=H.x,Na[Ra+1]=H.y,Na[Ra+2]=H.z,Ra+=3;m.bindBuffer(m.ARRAY_BUFFER,v.__webglNormalBuffer);m.bufferData(m.ARRAY_BUFFER,Na,D)}if(vb&&Hb){y=0;for(z=$.length;y<z;y++)if(F=$[y],U=Hb[F],void 0!==U)for(Y=0;3>Y;Y++)ab=U[Y],Ab[kb]=ab.x,Ab[kb+1]=ab.y,kb+=2;0<kb&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglUVBuffer),m.bufferData(m.ARRAY_BUFFER,Ab,D))}if(vb&&Oa){y=0;for(z=$.length;y<z;y++)if(F=$[y],O=Oa[F],void 0!==O)for(Y=0;3>Y;Y++)oa=O[Y],lb[yb]=oa.x,lb[yb+1]=oa.y,\nyb+=2;0<yb&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglUV2Buffer),m.bufferData(m.ARRAY_BUFFER,lb,D))}if(fb){y=0;for(z=$.length;y<z;y++)Va[zb]=La,Va[zb+1]=La+1,Va[zb+2]=La+2,zb+=3,Ta[eb]=La,Ta[eb+1]=La+1,Ta[eb+2]=La,Ta[eb+3]=La+2,Ta[eb+4]=La+1,Ta[eb+5]=La+2,eb+=6,La+=3;m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,v.__webglFaceBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,Va,D);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,v.__webglLineBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,Ta,D)}if(mb)for(Y=0,ub=mb.length;Y<ub;Y++)if(C=\nmb[Y],C.__original.needsUpdate){K=0;if(1===C.size)if(void 0===C.boundTo||\"vertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)B=xa[$[y]],C.array[K]=C.value[B.a],C.array[K+1]=C.value[B.b],C.array[K+2]=C.value[B.c],K+=3;else{if(\"faces\"===C.boundTo)for(y=0,z=$.length;y<z;y++)za=C.value[$[y]],C.array[K]=za,C.array[K+1]=za,C.array[K+2]=za,K+=3}else if(2===C.size)if(void 0===C.boundTo||\"vertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)B=xa[$[y]],J=C.value[B.a],L=C.value[B.b],N=C.value[B.c],C.array[K]=J.x,\nC.array[K+1]=J.y,C.array[K+2]=L.x,C.array[K+3]=L.y,C.array[K+4]=N.x,C.array[K+5]=N.y,K+=6;else{if(\"faces\"===C.boundTo)for(y=0,z=$.length;y<z;y++)N=L=J=za=C.value[$[y]],C.array[K]=J.x,C.array[K+1]=J.y,C.array[K+2]=L.x,C.array[K+3]=L.y,C.array[K+4]=N.x,C.array[K+5]=N.y,K+=6}else if(3===C.size){var T;T=\"c\"===C.type?[\"r\",\"g\",\"b\"]:[\"x\",\"y\",\"z\"];if(void 0===C.boundTo||\"vertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)B=xa[$[y]],J=C.value[B.a],L=C.value[B.b],N=C.value[B.c],C.array[K]=J[T[0]],C.array[K+1]=\nJ[T[1]],C.array[K+2]=J[T[2]],C.array[K+3]=L[T[0]],C.array[K+4]=L[T[1]],C.array[K+5]=L[T[2]],C.array[K+6]=N[T[0]],C.array[K+7]=N[T[1]],C.array[K+8]=N[T[2]],K+=9;else if(\"faces\"===C.boundTo)for(y=0,z=$.length;y<z;y++)N=L=J=za=C.value[$[y]],C.array[K]=J[T[0]],C.array[K+1]=J[T[1]],C.array[K+2]=J[T[2]],C.array[K+3]=L[T[0]],C.array[K+4]=L[T[1]],C.array[K+5]=L[T[2]],C.array[K+6]=N[T[0]],C.array[K+7]=N[T[1]],C.array[K+8]=N[T[2]],K+=9;else if(\"faceVertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)za=C.value[$[y]],\nJ=za[0],L=za[1],N=za[2],C.array[K]=J[T[0]],C.array[K+1]=J[T[1]],C.array[K+2]=J[T[2]],C.array[K+3]=L[T[0]],C.array[K+4]=L[T[1]],C.array[K+5]=L[T[2]],C.array[K+6]=N[T[0]],C.array[K+7]=N[T[1]],C.array[K+8]=N[T[2]],K+=9}else if(4===C.size)if(void 0===C.boundTo||\"vertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)B=xa[$[y]],J=C.value[B.a],L=C.value[B.b],N=C.value[B.c],C.array[K]=J.x,C.array[K+1]=J.y,C.array[K+2]=J.z,C.array[K+3]=J.w,C.array[K+4]=L.x,C.array[K+5]=L.y,C.array[K+6]=L.z,C.array[K+7]=L.w,C.array[K+\n8]=N.x,C.array[K+9]=N.y,C.array[K+10]=N.z,C.array[K+11]=N.w,K+=12;else if(\"faces\"===C.boundTo)for(y=0,z=$.length;y<z;y++)N=L=J=za=C.value[$[y]],C.array[K]=J.x,C.array[K+1]=J.y,C.array[K+2]=J.z,C.array[K+3]=J.w,C.array[K+4]=L.x,C.array[K+5]=L.y,C.array[K+6]=L.z,C.array[K+7]=L.w,C.array[K+8]=N.x,C.array[K+9]=N.y,C.array[K+10]=N.z,C.array[K+11]=N.w,K+=12;else if(\"faceVertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)za=C.value[$[y]],J=za[0],L=za[1],N=za[2],C.array[K]=J.x,C.array[K+1]=J.y,C.array[K+2]=\nJ.z,C.array[K+3]=J.w,C.array[K+4]=L.x,C.array[K+5]=L.y,C.array[K+6]=L.z,C.array[K+7]=L.w,C.array[K+8]=N.x,C.array[K+9]=N.y,C.array[K+10]=N.z,C.array[K+11]=N.w,K+=12;m.bindBuffer(m.ARRAY_BUFFER,C.buffer);m.bufferData(m.ARRAY_BUFFER,C.array,D)}A&&(delete v.__inittedArrays,delete v.__colorArray,delete v.__normalArray,delete v.__tangentArray,delete v.__uvArray,delete v.__uv2Array,delete v.__faceArray,delete v.__vertexArray,delete v.__lineArray,delete v.__skinIndexArray,delete v.__skinWeightArray)}}}b.verticesNeedUpdate=\n!1;b.morphTargetsNeedUpdate=!1;b.elementsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.tangentsNeedUpdate=!1;w.attributes&&s(w)}else if(a instanceof THREE.Line){w=c(a,b);u=w.attributes&&r(w);if(b.verticesNeedUpdate||b.colorsNeedUpdate||b.lineDistancesNeedUpdate||u){var Db=m.DYNAMIC_DRAW,S,aa,Z,Ba,X,Eb,Rb=b.vertices,Ib=b.colors,gb=b.lineDistances,ya=Rb.length,pb=Ib.length,qb=gb.length,Wa=b.__vertexArray,tb=b.__colorArray,hb=b.__lineDistanceArray,$b=b.colorsNeedUpdate,\nFb=b.lineDistancesNeedUpdate,Sb=b.__webglCustomAttributesList,Jb,cb,ua,Kb,Ia,fa;if(b.verticesNeedUpdate){for(S=0;S<ya;S++)Ba=Rb[S],X=3*S,Wa[X]=Ba.x,Wa[X+1]=Ba.y,Wa[X+2]=Ba.z;m.bindBuffer(m.ARRAY_BUFFER,b.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Wa,Db)}if($b){for(aa=0;aa<pb;aa++)Eb=Ib[aa],X=3*aa,tb[X]=Eb.r,tb[X+1]=Eb.g,tb[X+2]=Eb.b;m.bindBuffer(m.ARRAY_BUFFER,b.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,tb,Db)}if(Fb){for(Z=0;Z<qb;Z++)hb[Z]=gb[Z];m.bindBuffer(m.ARRAY_BUFFER,b.__webglLineDistanceBuffer);\nm.bufferData(m.ARRAY_BUFFER,hb,Db)}if(Sb)for(Jb=0,cb=Sb.length;Jb<cb;Jb++)if(fa=Sb[Jb],fa.needsUpdate&&(void 0===fa.boundTo||\"vertices\"===fa.boundTo)){X=0;Kb=fa.value.length;if(1===fa.size)for(ua=0;ua<Kb;ua++)fa.array[ua]=fa.value[ua];else if(2===fa.size)for(ua=0;ua<Kb;ua++)Ia=fa.value[ua],fa.array[X]=Ia.x,fa.array[X+1]=Ia.y,X+=2;else if(3===fa.size)if(\"c\"===fa.type)for(ua=0;ua<Kb;ua++)Ia=fa.value[ua],fa.array[X]=Ia.r,fa.array[X+1]=Ia.g,fa.array[X+2]=Ia.b,X+=3;else for(ua=0;ua<Kb;ua++)Ia=fa.value[ua],\nfa.array[X]=Ia.x,fa.array[X+1]=Ia.y,fa.array[X+2]=Ia.z,X+=3;else if(4===fa.size)for(ua=0;ua<Kb;ua++)Ia=fa.value[ua],fa.array[X]=Ia.x,fa.array[X+1]=Ia.y,fa.array[X+2]=Ia.z,fa.array[X+3]=Ia.w,X+=4;m.bindBuffer(m.ARRAY_BUFFER,fa.buffer);m.bufferData(m.ARRAY_BUFFER,fa.array,Db);fa.needsUpdate=!1}}b.verticesNeedUpdate=!1;b.colorsNeedUpdate=!1;b.lineDistancesNeedUpdate=!1;w.attributes&&s(w)}else if(a instanceof THREE.PointCloud){w=c(a,b);u=w.attributes&&r(w);if(b.verticesNeedUpdate||b.colorsNeedUpdate||\nu){var db=m.DYNAMIC_DRAW,Tb,Ub,ac,ma,bc,Nb=b.vertices,Vb=Nb.length,Pb=b.colors,rb=Pb.length,cc=b.__vertexArray,dc=b.__colorArray,wb=b.colorsNeedUpdate,gc=b.__webglCustomAttributesList,ec,jb,va,Lb,Ja,ga;if(b.verticesNeedUpdate){for(Tb=0;Tb<Vb;Tb++)ac=Nb[Tb],ma=3*Tb,cc[ma]=ac.x,cc[ma+1]=ac.y,cc[ma+2]=ac.z;m.bindBuffer(m.ARRAY_BUFFER,b.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,cc,db)}if(wb){for(Ub=0;Ub<rb;Ub++)bc=Pb[Ub],ma=3*Ub,dc[ma]=bc.r,dc[ma+1]=bc.g,dc[ma+2]=bc.b;m.bindBuffer(m.ARRAY_BUFFER,\nb.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,dc,db)}if(gc)for(ec=0,jb=gc.length;ec<jb;ec++){ga=gc[ec];if(ga.needsUpdate&&(void 0===ga.boundTo||\"vertices\"===ga.boundTo))if(Lb=ga.value.length,ma=0,1===ga.size)for(va=0;va<Lb;va++)ga.array[va]=ga.value[va];else if(2===ga.size)for(va=0;va<Lb;va++)Ja=ga.value[va],ga.array[ma]=Ja.x,ga.array[ma+1]=Ja.y,ma+=2;else if(3===ga.size)if(\"c\"===ga.type)for(va=0;va<Lb;va++)Ja=ga.value[va],ga.array[ma]=Ja.r,ga.array[ma+1]=Ja.g,ga.array[ma+2]=Ja.b,ma+=3;else for(va=\n0;va<Lb;va++)Ja=ga.value[va],ga.array[ma]=Ja.x,ga.array[ma+1]=Ja.y,ga.array[ma+2]=Ja.z,ma+=3;else if(4===ga.size)for(va=0;va<Lb;va++)Ja=ga.value[va],ga.array[ma]=Ja.x,ga.array[ma+1]=Ja.y,ga.array[ma+2]=Ja.z,ga.array[ma+3]=Ja.w,ma+=4;m.bindBuffer(m.ARRAY_BUFFER,ga.buffer);m.bufferData(m.ARRAY_BUFFER,ga.array,db);ga.needsUpdate=!1}}b.verticesNeedUpdate=!1;b.colorsNeedUpdate=!1;w.attributes&&s(w)}}function r(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function s(a){for(var b in a.attributes)a.attributes[b].needsUpdate=\n!1}function u(a){!0===a.transparent?W.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha):W.setBlending(THREE.NoBlending);W.setDepthTest(a.depthTest);W.setDepthWrite(a.depthWrite);W.setColorWrite(a.colorWrite);W.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}function v(a,b,c,d,e){var f,g,h,k;Mb=0;if(d.needsUpdate){d.program&&hc(d);d.addEventListener(\"dispose\",ic);var n=pc[d.type];if(n){var l=THREE.ShaderLib[n];\nd.__webglShader={uniforms:THREE.UniformsUtils.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}}else d.__webglShader={uniforms:d.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader};for(var p=0,q=0,r=0,s=0,t=0,w=b.length;t<w;t++){var v=b[t];v.onlyShadow||!1===v.visible||(v instanceof THREE.DirectionalLight&&p++,v instanceof THREE.PointLight&&q++,v instanceof THREE.SpotLight&&r++,v instanceof THREE.HemisphereLight&&s++)}f=p;g=q;h=r;k=s;for(var u,z=0,G=\n0,F=b.length;G<F;G++){var J=b[G];J.castShadow&&(J instanceof THREE.SpotLight&&z++,J instanceof THREE.DirectionalLight&&!J.shadowCascade&&z++)}u=z;var H;if(Nb&&e&&e.skeleton&&e.skeleton.useVertexTexture)H=1024;else{var N=m.getParameter(m.MAX_VERTEX_UNIFORM_VECTORS),M=Math.floor((N-20)/4);void 0!==e&&e instanceof THREE.SkinnedMesh&&(M=Math.min(e.skeleton.bones.length,M),M<e.skeleton.bones.length&&THREE.warn(\"WebGLRenderer: too many bones - \"+e.skeleton.bones.length+\", this GPU supports just \"+M+\" (try OpenGL instead of ANGLE)\"));\nH=M}var P={precision:L,supportsVertexTextures:Vb,map:!!d.map,envMap:!!d.envMap,envMapMode:d.envMap&&d.envMap.mapping,lightMap:!!d.lightMap,bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,combine:d.combine,vertexColors:d.vertexColors,fog:c,useFog:d.fog,fogExp:c instanceof THREE.FogExp2,flatShading:d.shading===THREE.FlatShading,sizeAttenuation:d.sizeAttenuation,logarithmicDepthBuffer:ja,skinning:d.skinning,maxBones:H,useVertexTexture:Nb&&e&&e.skeleton&&\ne.skeleton.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:B.maxMorphTargets,maxMorphNormals:B.maxMorphNormals,maxDirLights:f,maxPointLights:g,maxSpotLights:h,maxHemiLights:k,maxShadows:u,shadowMapEnabled:B.shadowMapEnabled&&e.receiveShadow&&0<u,shadowMapType:B.shadowMapType,shadowMapDebug:B.shadowMapDebug,shadowMapCascade:B.shadowMapCascade,alphaTest:d.alphaTest,metal:d.metal,wrapAround:d.wrapAround,doubleSided:d.side===THREE.DoubleSide,flipSided:d.side===\nTHREE.BackSide},R=[];n?R.push(n):(R.push(d.fragmentShader),R.push(d.vertexShader));if(void 0!==d.defines)for(var O in d.defines)R.push(O),R.push(d.defines[O]);for(O in P)R.push(O),R.push(P[O]);for(var Ka=R.join(),V,W=0,Qa=Pa.length;W<Qa;W++){var Ya=Pa[W];if(Ya.code===Ka){V=Ya;V.usedTimes++;break}}void 0===V&&(V=new THREE.WebGLProgram(B,Ka,d,P),Pa.push(V),B.info.memory.programs=Pa.length);d.program=V;var Xa=V.attributes;if(d.morphTargets){d.numSupportedMorphTargets=0;for(var ca,da=\"morphTarget\",ba=\n0;ba<B.maxMorphTargets;ba++)ca=da+ba,0<=Xa[ca]&&d.numSupportedMorphTargets++}if(d.morphNormals)for(d.numSupportedMorphNormals=0,da=\"morphNormal\",ba=0;ba<B.maxMorphNormals;ba++)ca=da+ba,0<=Xa[ca]&&d.numSupportedMorphNormals++;d.uniformsList=[];for(var ha in d.__webglShader.uniforms){var ta=d.program.uniforms[ha];ta&&d.uniformsList.push([d.__webglShader.uniforms[ha],ta])}d.needsUpdate=!1}d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(B.maxMorphTargets));\nvar ab=!1,oa=!1,qa=!1,Ua=d.program,ka=Ua.uniforms,Q=d.__webglShader.uniforms;Ua.id!==ob&&(m.useProgram(Ua.program),ob=Ua.id,qa=oa=ab=!0);d.id!==ub&&(-1===ub&&(qa=!0),ub=d.id,oa=!0);if(ab||a!==vb)m.uniformMatrix4fv(ka.projectionMatrix,!1,a.projectionMatrix.elements),ja&&m.uniform1f(ka.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==vb&&(vb=a),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==ka.cameraPosition&&(wa.setFromMatrixPosition(a.matrixWorld),m.uniform3f(ka.cameraPosition,\nwa.x,wa.y,wa.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshBasicMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==ka.viewMatrix&&m.uniformMatrix4fv(ka.viewMatrix,!1,a.matrixWorldInverse.elements);if(d.skinning)if(e.bindMatrix&&null!==ka.bindMatrix&&m.uniformMatrix4fv(ka.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&null!==ka.bindMatrixInverse&&m.uniformMatrix4fv(ka.bindMatrixInverse,!1,e.bindMatrixInverse.elements),\nNb&&e.skeleton&&e.skeleton.useVertexTexture){if(null!==ka.boneTexture){var db=D();m.uniform1i(ka.boneTexture,db);B.setTexture(e.skeleton.boneTexture,db)}null!==ka.boneTextureWidth&&m.uniform1i(ka.boneTextureWidth,e.skeleton.boneTextureWidth);null!==ka.boneTextureHeight&&m.uniform1i(ka.boneTextureHeight,e.skeleton.boneTextureHeight)}else e.skeleton&&e.skeleton.boneMatrices&&null!==ka.boneGlobalMatrices&&m.uniformMatrix4fv(ka.boneGlobalMatrices,!1,e.skeleton.boneMatrices);if(oa){c&&d.fog&&(Q.fogColor.value=\nc.color,c instanceof THREE.Fog?(Q.fogNear.value=c.near,Q.fogFar.value=c.far):c instanceof THREE.FogExp2&&(Q.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Ob){var qa=!0,ia,Za,Y,bb=0,cb=0,ib=0,xb,pb,qb,Ca,jb,na=jc,rb=na.directional.colors,La=na.directional.positions,Ma=na.point.colors,kb=na.point.positions,yb=na.point.distances,zb=na.point.decays,Ra=na.spot.colors,Aa=na.spot.positions,eb=na.spot.distances,Ha=na.spot.directions,\nla=na.spot.anglesCos,ra=na.spot.exponents,K=na.spot.decays,za=na.hemi.skyColors,Sa=na.hemi.groundColors,Ab=na.hemi.positions,lb=0,Na=0,sa=0,Da=0,Ea=0,Fa=0,Gb=0,Bb=0,mb=0,C=0,Va=0,Ta=0;ia=0;for(Za=b.length;ia<Za;ia++)Y=b[ia],Y.onlyShadow||(xb=Y.color,Ca=Y.intensity,jb=Y.distance,Y instanceof THREE.AmbientLight?Y.visible&&(bb+=xb.r,cb+=xb.g,ib+=xb.b):Y instanceof THREE.DirectionalLight?(Ea+=1,Y.visible&&(pa.setFromMatrixPosition(Y.matrixWorld),wa.setFromMatrixPosition(Y.target.matrixWorld),pa.sub(wa),\npa.normalize(),mb=3*lb,La[mb]=pa.x,La[mb+1]=pa.y,La[mb+2]=pa.z,y(rb,mb,xb,Ca),lb+=1)):Y instanceof THREE.PointLight?(Fa+=1,Y.visible&&(C=3*Na,y(Ma,C,xb,Ca),wa.setFromMatrixPosition(Y.matrixWorld),kb[C]=wa.x,kb[C+1]=wa.y,kb[C+2]=wa.z,yb[Na]=jb,zb[Na]=0===Y.distance?0:Y.decay,Na+=1)):Y instanceof THREE.SpotLight?(Gb+=1,Y.visible&&(Va=3*sa,y(Ra,Va,xb,Ca),pa.setFromMatrixPosition(Y.matrixWorld),Aa[Va]=pa.x,Aa[Va+1]=pa.y,Aa[Va+2]=pa.z,eb[sa]=jb,wa.setFromMatrixPosition(Y.target.matrixWorld),pa.sub(wa),\npa.normalize(),Ha[Va]=pa.x,Ha[Va+1]=pa.y,Ha[Va+2]=pa.z,la[sa]=Math.cos(Y.angle),ra[sa]=Y.exponent,K[sa]=0===Y.distance?0:Y.decay,sa+=1)):Y instanceof THREE.HemisphereLight&&(Bb+=1,Y.visible&&(pa.setFromMatrixPosition(Y.matrixWorld),pa.normalize(),Ta=3*Da,Ab[Ta]=pa.x,Ab[Ta+1]=pa.y,Ab[Ta+2]=pa.z,pb=Y.color,qb=Y.groundColor,y(za,Ta,pb,Ca),y(Sa,Ta,qb,Ca),Da+=1)));ia=3*lb;for(Za=Math.max(rb.length,3*Ea);ia<Za;ia++)rb[ia]=0;ia=3*Na;for(Za=Math.max(Ma.length,3*Fa);ia<Za;ia++)Ma[ia]=0;ia=3*sa;for(Za=Math.max(Ra.length,\n3*Gb);ia<Za;ia++)Ra[ia]=0;ia=3*Da;for(Za=Math.max(za.length,3*Bb);ia<Za;ia++)za[ia]=0;ia=3*Da;for(Za=Math.max(Sa.length,3*Bb);ia<Za;ia++)Sa[ia]=0;na.directional.length=lb;na.point.length=Na;na.spot.length=sa;na.hemi.length=Da;na.ambient[0]=bb;na.ambient[1]=cb;na.ambient[2]=ib;Ob=!1}if(qa){var ea=jc;Q.ambientLightColor.value=ea.ambient;Q.directionalLightColor.value=ea.directional.colors;Q.directionalLightDirection.value=ea.directional.positions;Q.pointLightColor.value=ea.point.colors;Q.pointLightPosition.value=\nea.point.positions;Q.pointLightDistance.value=ea.point.distances;Q.pointLightDecay.value=ea.point.decays;Q.spotLightColor.value=ea.spot.colors;Q.spotLightPosition.value=ea.spot.positions;Q.spotLightDistance.value=ea.spot.distances;Q.spotLightDirection.value=ea.spot.directions;Q.spotLightAngleCos.value=ea.spot.anglesCos;Q.spotLightExponent.value=ea.spot.exponents;Q.spotLightDecay.value=ea.spot.decays;Q.hemisphereLightSkyColor.value=ea.hemi.skyColors;Q.hemisphereLightGroundColor.value=ea.hemi.groundColors;\nQ.hemisphereLightDirection.value=ea.hemi.positions;x(Q,!0)}else x(Q,!1)}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){Q.opacity.value=d.opacity;Q.diffuse.value=d.color;Q.map.value=d.map;Q.lightMap.value=d.lightMap;Q.specularMap.value=d.specularMap;Q.alphaMap.value=d.alphaMap;d.bumpMap&&(Q.bumpMap.value=d.bumpMap,Q.bumpScale.value=d.bumpScale);d.normalMap&&(Q.normalMap.value=d.normalMap,Q.normalScale.value.copy(d.normalScale));\nvar fb;d.map?fb=d.map:d.specularMap?fb=d.specularMap:d.normalMap?fb=d.normalMap:d.bumpMap?fb=d.bumpMap:d.alphaMap&&(fb=d.alphaMap);if(void 0!==fb){var wb=fb.offset,Qb=fb.repeat;Q.offsetRepeat.value.set(wb.x,wb.y,Qb.x,Qb.y)}Q.envMap.value=d.envMap;Q.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;Q.reflectivity.value=d.reflectivity;Q.refractionRatio.value=d.refractionRatio}if(d instanceof THREE.LineBasicMaterial)Q.diffuse.value=d.color,Q.opacity.value=d.opacity;else if(d instanceof\nTHREE.LineDashedMaterial)Q.diffuse.value=d.color,Q.opacity.value=d.opacity,Q.dashSize.value=d.dashSize,Q.totalSize.value=d.dashSize+d.gapSize,Q.scale.value=d.scale;else if(d instanceof THREE.PointCloudMaterial){if(Q.psColor.value=d.color,Q.opacity.value=d.opacity,Q.size.value=d.size,Q.scale.value=U.height/2,Q.map.value=d.map,null!==d.map){var Wb=d.map.offset,Xb=d.map.repeat;Q.offsetRepeat.value.set(Wb.x,Wb.y,Xb.x,Xb.y)}}else d instanceof THREE.MeshPhongMaterial?(Q.shininess.value=d.shininess,Q.emissive.value=\nd.emissive,Q.specular.value=d.specular,d.wrapAround&&Q.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(Q.emissive.value=d.emissive,d.wrapAround&&Q.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(Q.mNear.value=a.near,Q.mFar.value=a.far,Q.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(Q.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&Q.shadowMatrix)for(var sb=0,Cb=0,$=b.length;Cb<$;Cb++){var xa=b[Cb];xa.castShadow&&(xa instanceof\nTHREE.SpotLight||xa instanceof THREE.DirectionalLight&&!xa.shadowCascade)&&(Q.shadowMap.value[sb]=xa.shadowMap,Q.shadowMapSize.value[sb]=xa.shadowMapSize,Q.shadowMatrix.value[sb]=xa.shadowMatrix,Q.shadowDarkness.value[sb]=xa.shadowDarkness,Q.shadowBias.value[sb]=xa.shadowBias,sb++)}for(var Hb=d.uniformsList,Oa,$a,Ga,nb=0,fc=Hb.length;nb<fc;nb++){var T=Hb[nb][0];if(!1!==T.needsUpdate){var Db=T.type,S=T.value,aa=Hb[nb][1];switch(Db){case \"1i\":m.uniform1i(aa,S);break;case \"1f\":m.uniform1f(aa,S);break;\ncase \"2f\":m.uniform2f(aa,S[0],S[1]);break;case \"3f\":m.uniform3f(aa,S[0],S[1],S[2]);break;case \"4f\":m.uniform4f(aa,S[0],S[1],S[2],S[3]);break;case \"1iv\":m.uniform1iv(aa,S);break;case \"3iv\":m.uniform3iv(aa,S);break;case \"1fv\":m.uniform1fv(aa,S);break;case \"2fv\":m.uniform2fv(aa,S);break;case \"3fv\":m.uniform3fv(aa,S);break;case \"4fv\":m.uniform4fv(aa,S);break;case \"Matrix3fv\":m.uniformMatrix3fv(aa,!1,S);break;case \"Matrix4fv\":m.uniformMatrix4fv(aa,!1,S);break;case \"i\":m.uniform1i(aa,S);break;case \"f\":m.uniform1f(aa,\nS);break;case \"v2\":m.uniform2f(aa,S.x,S.y);break;case \"v3\":m.uniform3f(aa,S.x,S.y,S.z);break;case \"v4\":m.uniform4f(aa,S.x,S.y,S.z,S.w);break;case \"c\":m.uniform3f(aa,S.r,S.g,S.b);break;case \"iv1\":m.uniform1iv(aa,S);break;case \"iv\":m.uniform3iv(aa,S);break;case \"fv1\":m.uniform1fv(aa,S);break;case \"fv\":m.uniform3fv(aa,S);break;case \"v2v\":void 0===T._array&&(T._array=new Float32Array(2*S.length));for(var Z=0,Ba=S.length;Z<Ba;Z++)Ga=2*Z,T._array[Ga]=S[Z].x,T._array[Ga+1]=S[Z].y;m.uniform2fv(aa,T._array);\nbreak;case \"v3v\":void 0===T._array&&(T._array=new Float32Array(3*S.length));Z=0;for(Ba=S.length;Z<Ba;Z++)Ga=3*Z,T._array[Ga]=S[Z].x,T._array[Ga+1]=S[Z].y,T._array[Ga+2]=S[Z].z;m.uniform3fv(aa,T._array);break;case \"v4v\":void 0===T._array&&(T._array=new Float32Array(4*S.length));Z=0;for(Ba=S.length;Z<Ba;Z++)Ga=4*Z,T._array[Ga]=S[Z].x,T._array[Ga+1]=S[Z].y,T._array[Ga+2]=S[Z].z,T._array[Ga+3]=S[Z].w;m.uniform4fv(aa,T._array);break;case \"m3\":m.uniformMatrix3fv(aa,!1,S.elements);break;case \"m3v\":void 0===\nT._array&&(T._array=new Float32Array(9*S.length));Z=0;for(Ba=S.length;Z<Ba;Z++)S[Z].flattenToArrayOffset(T._array,9*Z);m.uniformMatrix3fv(aa,!1,T._array);break;case \"m4\":m.uniformMatrix4fv(aa,!1,S.elements);break;case \"m4v\":void 0===T._array&&(T._array=new Float32Array(16*S.length));Z=0;for(Ba=S.length;Z<Ba;Z++)S[Z].flattenToArrayOffset(T._array,16*Z);m.uniformMatrix4fv(aa,!1,T._array);break;case \"t\":Oa=S;$a=D();m.uniform1i(aa,$a);if(!Oa)continue;if(Oa instanceof THREE.CubeTexture||Oa.image instanceof\nArray&&6===Oa.image.length){var X=Oa,Eb=$a;if(6===X.image.length)if(X.needsUpdate){X.image.__webglTextureCube||(X.addEventListener(\"dispose\",Pb),X.image.__webglTextureCube=m.createTexture(),B.info.memory.textures++);m.activeTexture(m.TEXTURE0+Eb);m.bindTexture(m.TEXTURE_CUBE_MAP,X.image.__webglTextureCube);m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,X.flipY);for(var Rb=X instanceof THREE.CompressedTexture,Ib=X.image[0]instanceof THREE.DataTexture,gb=[],ya=0;6>ya;ya++)gb[ya]=!B.autoScaleCubemaps||Rb||Ib?Ib?\nX.image[ya].image:X.image[ya]:E(X.image[ya],qc);var Yb=gb[0],Zb=THREE.Math.isPowerOfTwo(Yb.width)&&THREE.Math.isPowerOfTwo(Yb.height),Wa=I(X.format),tb=I(X.type);A(m.TEXTURE_CUBE_MAP,X,Zb);for(ya=0;6>ya;ya++)if(Rb)for(var hb,$b=gb[ya].mipmaps,Fb=0,Sb=$b.length;Fb<Sb;Fb++)hb=$b[Fb],X.format!==THREE.RGBAFormat&&X.format!==THREE.RGBFormat?-1<kc().indexOf(Wa)?m.compressedTexImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+ya,Fb,Wa,hb.width,hb.height,0,hb.data):THREE.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\"):\nm.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+ya,Fb,Wa,hb.width,hb.height,0,Wa,tb,hb.data);else Ib?m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+ya,0,Wa,gb[ya].width,gb[ya].height,0,Wa,tb,gb[ya].data):m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+ya,0,Wa,Wa,tb,gb[ya]);X.generateMipmaps&&Zb&&m.generateMipmap(m.TEXTURE_CUBE_MAP);X.needsUpdate=!1;if(X.onUpdate)X.onUpdate()}else m.activeTexture(m.TEXTURE0+Eb),m.bindTexture(m.TEXTURE_CUBE_MAP,X.image.__webglTextureCube)}else if(Oa instanceof THREE.WebGLRenderTargetCube){var Jb=\nOa;m.activeTexture(m.TEXTURE0+$a);m.bindTexture(m.TEXTURE_CUBE_MAP,Jb.__webglTexture)}else B.setTexture(Oa,$a);break;case \"tv\":void 0===T._array&&(T._array=[]);Z=0;for(Ba=T.value.length;Z<Ba;Z++)T._array[Z]=D();m.uniform1iv(aa,T._array);Z=0;for(Ba=T.value.length;Z<Ba;Z++)Oa=T.value[Z],$a=T._array[Z],Oa&&B.setTexture(Oa,$a);break;default:THREE.warn(\"THREE.WebGLRenderer: Unknown uniform type: \"+Db)}}}}m.uniformMatrix4fv(ka.modelViewMatrix,!1,e._modelViewMatrix.elements);ka.normalMatrix&&m.uniformMatrix3fv(ka.normalMatrix,\n!1,e._normalMatrix.elements);null!==ka.modelMatrix&&m.uniformMatrix4fv(ka.modelMatrix,!1,e.matrixWorld.elements);return Ua}function x(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.pointLightDecay.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=\nb;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.spotLightDecay.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function D(){var a=Mb;a>=Wb&&THREE.warn(\"WebGLRenderer: trying to use \"+a+\" texture units while this GPU supports only \"+Wb);Mb+=1;return a}function w(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}\nfunction y(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function A(a,b,c){c?(m.texParameteri(a,m.TEXTURE_WRAP_S,I(b.wrapS)),m.texParameteri(a,m.TEXTURE_WRAP_T,I(b.wrapT)),m.texParameteri(a,m.TEXTURE_MAG_FILTER,I(b.magFilter)),m.texParameteri(a,m.TEXTURE_MIN_FILTER,I(b.minFilter))):(m.texParameteri(a,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(a,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),b.wrapS===THREE.ClampToEdgeWrapping&&b.wrapT===THREE.ClampToEdgeWrapping||THREE.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( \"+\nb.sourceFile+\" )\"),m.texParameteri(a,m.TEXTURE_MAG_FILTER,z(b.magFilter)),m.texParameteri(a,m.TEXTURE_MIN_FILTER,z(b.minFilter)),b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&THREE.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( \"+b.sourceFile+\" )\"));(c=da.get(\"EXT_texture_filter_anisotropic\"))&&b.type!==THREE.FloatType&&b.type!==THREE.HalfFloatType&&(1<b.anisotropy||b.__currentAnisotropy)&&\n(m.texParameterf(a,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,B.getMaxAnisotropy())),b.__currentAnisotropy=b.anisotropy)}function E(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement(\"canvas\");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext(\"2d\").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);THREE.warn(\"THREE.WebGLRenderer: image is too big (\"+a.width+\"x\"+a.height+\"). Resized to \"+d.width+\"x\"+d.height,a);return d}return a}\nfunction G(a,b){m.bindRenderbuffer(m.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_COMPONENT16,b.width,b.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_STENCIL,b.width,b.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,a)):m.renderbufferStorage(m.RENDERBUFFER,m.RGBA4,b.width,b.height)}function F(a){a instanceof\nTHREE.WebGLRenderTargetCube?(m.bindTexture(m.TEXTURE_CUBE_MAP,a.__webglTexture),m.generateMipmap(m.TEXTURE_CUBE_MAP),m.bindTexture(m.TEXTURE_CUBE_MAP,null)):(m.bindTexture(m.TEXTURE_2D,a.__webglTexture),m.generateMipmap(m.TEXTURE_2D),m.bindTexture(m.TEXTURE_2D,null))}function z(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?m.NEAREST:m.LINEAR}function I(a){var b;if(a===THREE.RepeatWrapping)return m.REPEAT;if(a===THREE.ClampToEdgeWrapping)return m.CLAMP_TO_EDGE;\nif(a===THREE.MirroredRepeatWrapping)return m.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return m.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return m.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return m.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return m.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return m.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return m.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return m.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return m.UNSIGNED_SHORT_4_4_4_4;\nif(a===THREE.UnsignedShort5551Type)return m.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return m.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return m.BYTE;if(a===THREE.ShortType)return m.SHORT;if(a===THREE.UnsignedShortType)return m.UNSIGNED_SHORT;if(a===THREE.IntType)return m.INT;if(a===THREE.UnsignedIntType)return m.UNSIGNED_INT;if(a===THREE.FloatType)return m.FLOAT;b=da.get(\"OES_texture_half_float\");if(null!==b&&a===THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return m.ALPHA;\nif(a===THREE.RGBFormat)return m.RGB;if(a===THREE.RGBAFormat)return m.RGBA;if(a===THREE.LuminanceFormat)return m.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return m.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return m.FUNC_ADD;if(a===THREE.SubtractEquation)return m.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return m.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return m.ZERO;if(a===THREE.OneFactor)return m.ONE;if(a===THREE.SrcColorFactor)return m.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return m.ONE_MINUS_SRC_COLOR;\nif(a===THREE.SrcAlphaFactor)return m.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return m.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return m.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return m.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return m.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return m.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return m.SRC_ALPHA_SATURATE;b=da.get(\"WEBGL_compressed_texture_s3tc\");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;\nif(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=da.get(\"WEBGL_compressed_texture_pvrtc\");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\nif(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=da.get(\"EXT_blend_minmax\");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}console.log(\"THREE.WebGLRenderer\",THREE.REVISION);a=a||{};var U=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),M=void 0!==a.context?a.context:null,H=1,L=void 0!==a.precision?a.precision:\"highp\",P=void 0!==a.alpha?a.alpha:!1,N=void 0!==a.depth?a.depth:!0,R=void 0!==a.stencil?\na.stencil:!0,V=void 0!==a.antialias?a.antialias:!1,J=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,oa=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ja=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:!1,ha=new THREE.Color(0),O=0,ca=[],ba={},qa=[],Ka=[],Qa=[],Xa=[],Ya=[];this.domElement=U;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.gammaFactor=2;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=\n!1;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var B=this,Pa=[],ob=null,ab=null,ub=-1,ta=\"\",vb=null,Mb=0,ib=0,bb=0,pb=U.width,qb=U.height,Xb=0,fc=0,cb=new THREE.Frustum,db=new THREE.Matrix4,wa=new THREE.Vector3,pa=new THREE.Vector3,Ob=!0,jc={ambient:[0,\n0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},m;try{var Yb={alpha:P,depth:N,stencil:R,antialias:V,premultipliedAlpha:J,preserveDrawingBuffer:oa};m=M||U.getContext(\"webgl\",Yb)||U.getContext(\"experimental-webgl\",Yb);if(null===m){if(null!==U.getContext(\"webgl\"))throw\"Error creating WebGL context with your selected attributes.\";\nthrow\"Error creating WebGL context.\";}U.addEventListener(\"webglcontextlost\",function(a){a.preventDefault();Zb();lc();ba={}},!1)}catch(rc){THREE.error(\"THREE.WebGLRenderer: \"+rc)}var W=new THREE.WebGLState(m,I);void 0===m.getShaderPrecisionFormat&&(m.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var da=new THREE.WebGLExtensions(m);da.get(\"OES_texture_float\");da.get(\"OES_texture_float_linear\");da.get(\"OES_texture_half_float\");da.get(\"OES_texture_half_float_linear\");\nda.get(\"OES_standard_derivatives\");ja&&da.get(\"EXT_frag_depth\");var rb=function(a,b,c,d){!0===J&&(a*=d,b*=d,c*=d);m.clearColor(a,b,c,d)},lc=function(){m.clearColor(0,0,0,1);m.clearDepth(1);m.clearStencil(0);m.enable(m.DEPTH_TEST);m.depthFunc(m.LEQUAL);m.frontFace(m.CCW);m.cullFace(m.BACK);m.enable(m.CULL_FACE);m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA);m.viewport(ib,bb,pb,qb);rb(ha.r,ha.g,ha.b,O)},Zb=function(){vb=ob=null;ta=\"\";ub=-1;Ob=!0;W.reset()};\nlc();this.context=m;this.state=W;var Wb=m.getParameter(m.MAX_TEXTURE_IMAGE_UNITS),sc=m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS),tc=m.getParameter(m.MAX_TEXTURE_SIZE),qc=m.getParameter(m.MAX_CUBE_MAP_TEXTURE_SIZE),Vb=0<sc,Nb=Vb&&da.get(\"OES_texture_float\"),uc=m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.HIGH_FLOAT),vc=m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.MEDIUM_FLOAT),wc=m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.HIGH_FLOAT),xc=m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.MEDIUM_FLOAT),\nkc=function(){var a;return function(){if(void 0!==a)return a;a=[];if(da.get(\"WEBGL_compressed_texture_pvrtc\")||da.get(\"WEBGL_compressed_texture_s3tc\"))for(var b=m.getParameter(m.COMPRESSED_TEXTURE_FORMATS),c=0;c<b.length;c++)a.push(b[c]);return a}}(),yc=0<uc.precision&&0<wc.precision,mc=0<vc.precision&&0<xc.precision;\"highp\"!==L||yc||(mc?(L=\"mediump\",THREE.warn(\"THREE.WebGLRenderer: highp not supported, using mediump.\")):(L=\"lowp\",THREE.warn(\"THREE.WebGLRenderer: highp and mediump not supported, using lowp.\")));\n\"mediump\"!==L||mc||(L=\"lowp\",THREE.warn(\"THREE.WebGLRenderer: mediump not supported, using lowp.\"));var zc=new THREE.ShadowMapPlugin(this,ca,ba,qa),Ac=new THREE.SpritePlugin(this,Xa),Bc=new THREE.LensFlarePlugin(this,Ya);this.getContext=function(){return m};this.forceContextLoss=function(){da.get(\"WEBGL_lose_context\").loseContext()};this.supportsVertexTextures=function(){return Vb};this.supportsFloatTextures=function(){return da.get(\"OES_texture_float\")};this.supportsHalfFloatTextures=function(){return da.get(\"OES_texture_half_float\")};\nthis.supportsStandardDerivatives=function(){return da.get(\"OES_standard_derivatives\")};this.supportsCompressedTextureS3TC=function(){return da.get(\"WEBGL_compressed_texture_s3tc\")};this.supportsCompressedTexturePVRTC=function(){return da.get(\"WEBGL_compressed_texture_pvrtc\")};this.supportsBlendMinMax=function(){return da.get(\"EXT_blend_minmax\")};this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=da.get(\"EXT_texture_filter_anisotropic\");return a=null!==b?m.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):\n0}}();this.getPrecision=function(){return L};this.getPixelRatio=function(){return H};this.setPixelRatio=function(a){H=a};this.setSize=function(a,b,c){U.width=a*H;U.height=b*H;!1!==c&&(U.style.width=a+\"px\",U.style.height=b+\"px\");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){ib=a*H;bb=b*H;pb=c*H;qb=d*H;m.viewport(ib,bb,pb,qb)};this.setScissor=function(a,b,c,d){m.scissor(a*H,b*H,c*H,d*H)};this.enableScissorTest=function(a){a?m.enable(m.SCISSOR_TEST):m.disable(m.SCISSOR_TEST)};this.getClearColor=\nfunction(){return ha};this.setClearColor=function(a,b){ha.set(a);O=void 0!==b?b:1;rb(ha.r,ha.g,ha.b,O)};this.getClearAlpha=function(){return O};this.setClearAlpha=function(a){O=a;rb(ha.r,ha.g,ha.b,O)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=m.COLOR_BUFFER_BIT;if(void 0===b||b)d|=m.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=m.STENCIL_BUFFER_BIT;m.clear(d)};this.clearColor=function(){m.clear(m.COLOR_BUFFER_BIT)};this.clearDepth=function(){m.clear(m.DEPTH_BUFFER_BIT)};this.clearStencil=function(){m.clear(m.STENCIL_BUFFER_BIT)};\nthis.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=Zb;var wb=function(a){a.target.traverse(function(a){a.removeEventListener(\"remove\",wb);if(a instanceof THREE.Mesh||a instanceof THREE.PointCloud||a instanceof THREE.Line)delete ba[a.id];else if(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)for(var b=qa,c=b.length-1;0<=c;c--)b[c].object===a&&b.splice(c,1);delete a.__webglInit;delete a._modelViewMatrix;delete a._normalMatrix;delete a.__webglActive})},\njb=function(a){a=a.target;a.removeEventListener(\"dispose\",jb);delete a.__webglInit;if(a instanceof THREE.BufferGeometry){for(var b in a.attributes){var c=a.attributes[b];void 0!==c.buffer&&(m.deleteBuffer(c.buffer),delete c.buffer)}B.info.memory.geometries--}else if(b=Ua[a.id],void 0!==b){for(var c=0,d=b.length;c<d;c++){var e=b[c];if(void 0!==e.numMorphTargets){for(var f=0,g=e.numMorphTargets;f<g;f++)m.deleteBuffer(e.__webglMorphTargetsBuffers[f]);delete e.__webglMorphTargetsBuffers}if(void 0!==e.numMorphNormals){f=\n0;for(g=e.numMorphNormals;f<g;f++)m.deleteBuffer(e.__webglMorphNormalsBuffers[f]);delete e.__webglMorphNormalsBuffers}nc(e)}delete Ua[a.id]}else nc(a);ta=\"\"},Pb=function(a){a=a.target;a.removeEventListener(\"dispose\",Pb);a.image&&a.image.__webglTextureCube?(m.deleteTexture(a.image.__webglTextureCube),delete a.image.__webglTextureCube):void 0!==a.__webglInit&&(m.deleteTexture(a.__webglTexture),delete a.__webglTexture,delete a.__webglInit);B.info.memory.textures--},oc=function(a){a=a.target;a.removeEventListener(\"dispose\",\noc);if(a&&void 0!==a.__webglTexture){m.deleteTexture(a.__webglTexture);delete a.__webglTexture;if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)m.deleteFramebuffer(a.__webglFramebuffer[b]),m.deleteRenderbuffer(a.__webglRenderbuffer[b]);else m.deleteFramebuffer(a.__webglFramebuffer),m.deleteRenderbuffer(a.__webglRenderbuffer);delete a.__webglFramebuffer;delete a.__webglRenderbuffer}B.info.memory.textures--},ic=function(a){a=a.target;a.removeEventListener(\"dispose\",ic);hc(a)},nc=function(a){for(var b=\n\"__webglVertexBuffer __webglNormalBuffer __webglTangentBuffer __webglColorBuffer __webglUVBuffer __webglUV2Buffer __webglSkinIndicesBuffer __webglSkinWeightsBuffer __webglFaceBuffer __webglLineBuffer __webglLineDistanceBuffer\".split(\" \"),c=0,d=b.length;c<d;c++){var e=b[c];void 0!==a[e]&&(m.deleteBuffer(a[e]),delete a[e])}if(void 0!==a.__webglCustomAttributesList){for(e in a.__webglCustomAttributesList)m.deleteBuffer(a.__webglCustomAttributesList[e].buffer);delete a.__webglCustomAttributesList}B.info.memory.geometries--},\nhc=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;a=0;for(c=Pa.length;a<c;a++)if(d=Pa[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=Pa.length;a<c;a++)d=Pa[a],d.program!==b&&e.push(d);Pa=e;m.deleteProgram(b);B.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){W.initAttributes();a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=m.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=\nm.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=m.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=m.createBuffer());a.hasPositions&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglVertexBuffer),m.bufferData(m.ARRAY_BUFFER,a.positionArray,m.DYNAMIC_DRAW),W.enableAttribute(b.attributes.position),m.vertexAttribPointer(b.attributes.position,3,m.FLOAT,!1,0,0));if(a.hasNormals){m.bindBuffer(m.ARRAY_BUFFER,a.__webglNormalBuffer);if(!1===c instanceof THREE.MeshPhongMaterial&&\nc.shading===THREE.FlatShading){var d,e,f,g,h,k,n,l,p,q,r,s=3*a.count;for(r=0;r<s;r+=9)q=a.normalArray,d=q[r],e=q[r+1],f=q[r+2],g=q[r+3],k=q[r+4],l=q[r+5],h=q[r+6],n=q[r+7],p=q[r+8],d=(d+g+h)/3,e=(e+k+n)/3,f=(f+l+p)/3,q[r]=d,q[r+1]=e,q[r+2]=f,q[r+3]=d,q[r+4]=e,q[r+5]=f,q[r+6]=d,q[r+7]=e,q[r+8]=f}m.bufferData(m.ARRAY_BUFFER,a.normalArray,m.DYNAMIC_DRAW);W.enableAttribute(b.attributes.normal);m.vertexAttribPointer(b.attributes.normal,3,m.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglUvBuffer),\nm.bufferData(m.ARRAY_BUFFER,a.uvArray,m.DYNAMIC_DRAW),W.enableAttribute(b.attributes.uv),m.vertexAttribPointer(b.attributes.uv,2,m.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,a.colorArray,m.DYNAMIC_DRAW),W.enableAttribute(b.attributes.color),m.vertexAttribPointer(b.attributes.color,3,m.FLOAT,!1,0,0));W.disableUnusedAttributes();m.drawArrays(m.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,\nb,c,e,f,g){if(!1!==e.visible)if(t(g),a=v(a,b,c,e,g),b=!1,c=\"direct_\"+f.id+\"_\"+a.id+\"_\"+(e.wireframe?1:0),c!==ta&&(ta=c,b=!0),b&&W.initAttributes(),g instanceof THREE.Mesh){g=!0===e.wireframe?m.LINES:m.TRIANGLES;var h=f.attributes.index;if(h){var k,n;h.array instanceof Uint32Array&&da.get(\"OES_element_index_uint\")?(k=m.UNSIGNED_INT,n=4):(k=m.UNSIGNED_SHORT,n=2);c=f.offsets;if(0===c.length)b&&(d(e,a,f,0),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer)),m.drawElements(g,h.array.length,k,0),B.info.render.calls++,\nB.info.render.vertices+=h.array.length,B.info.render.faces+=h.array.length/3;else{b=!0;for(var l=0,p=c.length;l<p;l++){var q=c[l].index;b&&(d(e,a,f,q),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer));m.drawElements(g,c[l].count,k,c[l].start*n);B.info.render.calls++;B.info.render.vertices+=c[l].count;B.info.render.faces+=c[l].count/3}}}else b&&d(e,a,f,0),e=f.attributes.position,m.drawArrays(g,0,e.array.length/e.itemSize),B.info.render.calls++,B.info.render.vertices+=e.array.length/e.itemSize,B.info.render.faces+=\ne.array.length/(3*e.itemSize)}else if(g instanceof THREE.PointCloud)if(g=m.POINTS,h=f.attributes.index)if(h.array instanceof Uint32Array&&da.get(\"OES_element_index_uint\")?(k=m.UNSIGNED_INT,n=4):(k=m.UNSIGNED_SHORT,n=2),c=f.offsets,0===c.length)b&&(d(e,a,f,0),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer)),m.drawElements(g,h.array.length,k,0),B.info.render.calls++,B.info.render.points+=h.array.length;else for(1<c.length&&(b=!0),l=0,p=c.length;l<p;l++)q=c[l].index,b&&(d(e,a,f,q),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,\nh.buffer)),m.drawElements(g,c[l].count,k,c[l].start*n),B.info.render.calls++,B.info.render.points+=c[l].count;else if(b&&d(e,a,f,0),e=f.attributes.position,c=f.offsets,0===c.length)m.drawArrays(g,0,e.array.length/3),B.info.render.calls++,B.info.render.points+=e.array.length/3;else for(l=0,p=c.length;l<p;l++)m.drawArrays(g,c[l].index,c[l].count),B.info.render.calls++,B.info.render.points+=c[l].count;else if(g instanceof THREE.Line)if(g=g.mode===THREE.LineStrip?m.LINE_STRIP:m.LINES,W.setLineWidth(e.linewidth*\nH),h=f.attributes.index)if(h.array instanceof Uint32Array?(k=m.UNSIGNED_INT,n=4):(k=m.UNSIGNED_SHORT,n=2),c=f.offsets,0===c.length)b&&(d(e,a,f,0),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer)),m.drawElements(g,h.array.length,k,0),B.info.render.calls++,B.info.render.vertices+=h.array.length;else for(1<c.length&&(b=!0),l=0,p=c.length;l<p;l++)q=c[l].index,b&&(d(e,a,f,q),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer)),m.drawElements(g,c[l].count,k,c[l].start*n),B.info.render.calls++,B.info.render.vertices+=\nc[l].count;else if(b&&d(e,a,f,0),e=f.attributes.position,c=f.offsets,0===c.length)m.drawArrays(g,0,e.array.length/3),B.info.render.calls++,B.info.render.vertices+=e.array.length/3;else for(l=0,p=c.length;l<p;l++)m.drawArrays(g,c[l].index,c[l].count),B.info.render.calls++,B.info.render.vertices+=c[l].count};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){t(f);c=v(a,b,c,d,f);b=c.attributes;a=!1;c=e.id+\"_\"+c.id+\"_\"+(d.wireframe?1:0);c!==ta&&(ta=c,a=!0);a&&W.initAttributes();if(!d.morphTargets&&\n0<=b.position)a&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),W.enableAttribute(b.position),m.vertexAttribPointer(b.position,3,m.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),W.enableAttribute(c.position),m.vertexAttribPointer(c.position,3,m.FLOAT,!1,0,0)):0<=c.position&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),W.enableAttribute(c.position),m.vertexAttribPointer(c.position,\n3,m.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length)for(var h=0,k=f.morphTargetForcedOrder,n=f.morphTargetInfluences,l;h<d.numSupportedMorphTargets&&h<k.length;)l=c[\"morphTarget\"+h],0<=l&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k[h]]),W.enableAttribute(l),m.vertexAttribPointer(l,3,m.FLOAT,!1,0,0)),l=c[\"morphNormal\"+h],0<=l&&d.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[k[h]]),W.enableAttribute(l),m.vertexAttribPointer(l,3,m.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[h]=\nn[k[h]],h++;else{k=[];n=f.morphTargetInfluences;h=f.geometry.morphTargets;n.length>h.length&&(console.warn(\"THREE.WebGLRenderer: Influences array is bigger than morphTargets array.\"),n.length=h.length);h=0;for(l=n.length;h<l;h++)k.push([n[h],h]);k.length>d.numSupportedMorphTargets?(k.sort(g),k.length=d.numSupportedMorphTargets):k.length>d.numSupportedMorphNormals?k.sort(g):0===k.length&&k.push([0,0]);for(var h=0,p=d.numSupportedMorphTargets;h<p;h++)if(k[h]){var q=k[h][1];l=c[\"morphTarget\"+h];0<=l&&\n(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[q]),W.enableAttribute(l),m.vertexAttribPointer(l,3,m.FLOAT,!1,0,0));l=c[\"morphNormal\"+h];0<=l&&d.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[q]),W.enableAttribute(l),m.vertexAttribPointer(l,3,m.FLOAT,!1,0,0));f.__webglMorphTargetInfluences[h]=n[q]}else f.__webglMorphTargetInfluences[h]=0}null!==d.program.uniforms.morphTargetInfluences&&m.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(c=\n0,n=e.__webglCustomAttributesList.length;c<n;c++)k=e.__webglCustomAttributesList[c],0<=b[k.buffer.belongsToAttribute]&&(m.bindBuffer(m.ARRAY_BUFFER,k.buffer),W.enableAttribute(b[k.buffer.belongsToAttribute]),m.vertexAttribPointer(b[k.buffer.belongsToAttribute],k.size,m.FLOAT,!1,0,0));0<=b.color&&(0<f.geometry.colors.length||0<f.geometry.faces.length?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglColorBuffer),W.enableAttribute(b.color),m.vertexAttribPointer(b.color,3,m.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&\nm.vertexAttrib3fv(b.color,d.defaultAttributeValues.color));0<=b.normal&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglNormalBuffer),W.enableAttribute(b.normal),m.vertexAttribPointer(b.normal,3,m.FLOAT,!1,0,0));0<=b.tangent&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglTangentBuffer),W.enableAttribute(b.tangent),m.vertexAttribPointer(b.tangent,4,m.FLOAT,!1,0,0));0<=b.uv&&(f.geometry.faceVertexUvs[0]?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUVBuffer),W.enableAttribute(b.uv),m.vertexAttribPointer(b.uv,2,m.FLOAT,!1,0,\n0)):void 0!==d.defaultAttributeValues&&m.vertexAttrib2fv(b.uv,d.defaultAttributeValues.uv));0<=b.uv2&&(f.geometry.faceVertexUvs[1]?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUV2Buffer),W.enableAttribute(b.uv2),m.vertexAttribPointer(b.uv2,2,m.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&m.vertexAttrib2fv(b.uv2,d.defaultAttributeValues.uv2));d.skinning&&0<=b.skinIndex&&0<=b.skinWeight&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),W.enableAttribute(b.skinIndex),m.vertexAttribPointer(b.skinIndex,\n4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),W.enableAttribute(b.skinWeight),m.vertexAttribPointer(b.skinWeight,4,m.FLOAT,!1,0,0));0<=b.lineDistance&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglLineDistanceBuffer),W.enableAttribute(b.lineDistance),m.vertexAttribPointer(b.lineDistance,1,m.FLOAT,!1,0,0))}W.disableUnusedAttributes();f instanceof THREE.Mesh?(f=e.__typeArray===Uint32Array?m.UNSIGNED_INT:m.UNSIGNED_SHORT,d.wireframe?(W.setLineWidth(d.wireframeLinewidth*H),a&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,\ne.__webglLineBuffer),m.drawElements(m.LINES,e.__webglLineCount,f,0)):(a&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),m.drawElements(m.TRIANGLES,e.__webglFaceCount,f,0)),B.info.render.calls++,B.info.render.vertices+=e.__webglFaceCount,B.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.mode===THREE.LineStrip?m.LINE_STRIP:m.LINES,W.setLineWidth(d.linewidth*H),m.drawArrays(f,0,e.__webglLineCount),B.info.render.calls++):f instanceof THREE.PointCloud&&(m.drawArrays(m.POINTS,\n0,e.__webglParticleCount),B.info.render.calls++,B.info.render.points+=e.__webglParticleCount)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)THREE.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");else{var g=a.fog;ta=\"\";ub=-1;vb=null;Ob=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();a.traverse(function(a){a instanceof THREE.SkinnedMesh&&a.skeleton.update()});b.matrixWorldInverse.getInverse(b.matrixWorld);db.multiplyMatrices(b.projectionMatrix,\nb.matrixWorldInverse);cb.setFromMatrix(db);ca.length=0;Ka.length=0;Qa.length=0;Xa.length=0;Ya.length=0;h(a);!0===B.sortObjects&&(Ka.sort(e),Qa.sort(f));zc.render(a,b);B.info.render.calls=0;B.info.render.vertices=0;B.info.render.faces=0;B.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);d=0;for(var n=qa.length;d<n;d++){var m=qa[d],q=m.object;q.visible&&(w(q,b),p(m))}a.overrideMaterial?(d=a.overrideMaterial,u(d),\nk(Ka,b,ca,g,d),k(Qa,b,ca,g,d),l(qa,\"\",b,ca,g,d)):(W.setBlending(THREE.NoBlending),k(Ka,b,ca,g,null),l(qa,\"opaque\",b,ca,g,null),k(Qa,b,ca,g,null),l(qa,\"transparent\",b,ca,g,null));Ac.render(a,b);Bc.render(a,b,Xb,fc);c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&F(c);W.setDepthTest(!0);W.setDepthWrite(!0);W.setColorWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=v(a,b,c,d,e);ta=\"\";B.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,\nm,cb):e.render(function(a){B.renderBufferImmediate(a,f,d)})};var Ua={},Qb=0,pc={MeshDepthMaterial:\"depth\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointCloudMaterial:\"particle_basic\"};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?m.disable(m.CULL_FACE):(b===THREE.FrontFaceDirectionCW?m.frontFace(m.CW):m.frontFace(m.CCW),a===THREE.CullFaceBack?m.cullFace(m.BACK):a===\nTHREE.CullFaceFront?m.cullFace(m.FRONT):m.cullFace(m.FRONT_AND_BACK),m.enable(m.CULL_FACE))};this.setMaterialFaces=function(a){W.setDoubleSided(a.side===THREE.DoubleSide);W.setFlipSided(a.side===THREE.BackSide)};this.uploadTexture=function(a){void 0===a.__webglInit&&(a.__webglInit=!0,a.addEventListener(\"dispose\",Pb),a.__webglTexture=m.createTexture(),B.info.memory.textures++);m.bindTexture(m.TEXTURE_2D,a.__webglTexture);m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,a.flipY);m.pixelStorei(m.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\na.premultiplyAlpha);m.pixelStorei(m.UNPACK_ALIGNMENT,a.unpackAlignment);a.image=E(a.image,tc);var b=a.image,c=THREE.Math.isPowerOfTwo(b.width)&&THREE.Math.isPowerOfTwo(b.height),d=I(a.format),e=I(a.type);A(m.TEXTURE_2D,a,c);var f=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<f.length&&c){for(var g=0,h=f.length;g<h;g++)b=f[g],m.texImage2D(m.TEXTURE_2D,g,d,b.width,b.height,0,d,e,b.data);a.generateMipmaps=!1}else m.texImage2D(m.TEXTURE_2D,0,d,b.width,b.height,0,d,e,b.data);else if(a instanceof THREE.CompressedTexture)for(g=\n0,h=f.length;g<h;g++)b=f[g],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?-1<kc().indexOf(d)?m.compressedTexImage2D(m.TEXTURE_2D,g,d,b.width,b.height,0,b.data):THREE.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):m.texImage2D(m.TEXTURE_2D,g,d,b.width,b.height,0,d,e,b.data);else if(0<f.length&&c){g=0;for(h=f.length;g<h;g++)b=f[g],m.texImage2D(m.TEXTURE_2D,g,d,d,e,b);a.generateMipmaps=!1}else m.texImage2D(m.TEXTURE_2D,0,d,d,e,a.image);\na.generateMipmaps&&c&&m.generateMipmap(m.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()};this.setTexture=function(a,b){m.activeTexture(m.TEXTURE0+b);a.needsUpdate?B.uploadTexture(a):m.bindTexture(m.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&void 0===a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener(\"dispose\",oc);a.__webglTexture=m.createTexture();\nB.info.memory.textures++;var c=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),d=I(a.format),e=I(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];m.bindTexture(m.TEXTURE_CUBE_MAP,a.__webglTexture);A(m.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=m.createFramebuffer();a.__webglRenderbuffer[f]=m.createRenderbuffer();m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=m.TEXTURE_CUBE_MAP_POSITIVE_X+f;m.bindFramebuffer(m.FRAMEBUFFER,\na.__webglFramebuffer[f]);m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,h,g.__webglTexture,0);G(a.__webglRenderbuffer[f],a)}c&&m.generateMipmap(m.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=m.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:m.createRenderbuffer(),m.bindTexture(m.TEXTURE_2D,a.__webglTexture),A(m.TEXTURE_2D,a,c),m.texImage2D(m.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=m.TEXTURE_2D,m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer),\nm.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,a.__webglRenderbuffer):G(a.__webglRenderbuffer,a),c&&m.generateMipmap(m.TEXTURE_2D);b?m.bindTexture(m.TEXTURE_CUBE_MAP,null):m.bindTexture(m.TEXTURE_2D,null);m.bindRenderbuffer(m.RENDERBUFFER,\nnull);m.bindFramebuffer(m.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=pb,a=qb,d=ib,e=bb);b!==ab&&(m.bindFramebuffer(m.FRAMEBUFFER,b),m.viewport(d,e,c,a),ab=b);Xb=c;fc=a};this.readRenderTargetPixels=function(a,b,c,d,e,f){if(!(a instanceof THREE.WebGLRenderTarget))console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");else if(a.__webglFramebuffer)if(a.format!==THREE.RGBAFormat)console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.\");\nelse{var g=!1;a.__webglFramebuffer!==ab&&(m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer),g=!0);m.checkFramebufferStatus(m.FRAMEBUFFER)===m.FRAMEBUFFER_COMPLETE?m.readPixels(b,c,d,e,m.RGBA,m.UNSIGNED_BYTE,f):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\");g&&m.bindFramebuffer(m.FRAMEBUFFER,ab)}};this.initMaterial=function(){THREE.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")};this.addPrePlugin=function(){THREE.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")};\nthis.addPostPlugin=function(){THREE.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")};this.updateShadowMap=function(){THREE.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")}};\nTHREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:\nTHREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=void 0!==c.shareDepthFrom?c.shareDepthFrom:null};\nTHREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;\na.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;\nTHREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case \"EXT_texture_filter_anisotropic\":d=a.getExtension(\"EXT_texture_filter_anisotropic\")||a.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||a.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case \"WEBGL_compressed_texture_s3tc\":d=a.getExtension(\"WEBGL_compressed_texture_s3tc\")||a.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\nbreak;case \"WEBGL_compressed_texture_pvrtc\":d=a.getExtension(\"WEBGL_compressed_texture_pvrtc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;default:d=a.getExtension(c)}null===d&&THREE.warn(\"THREE.WebGLRenderer: \"+c+\" extension not supported.\");return b[c]=d}};\nTHREE.WebGLProgram=function(){var a=0;return function(b,c,d,e){var f=b.context,g=d.defines,h=d.__webglShader.uniforms,k=d.attributes,l=d.__webglShader.vertexShader,p=d.__webglShader.fragmentShader,q=d.index0AttributeName;void 0===q&&!0===e.morphTargets&&(q=\"position\");var n=\"SHADOWMAP_TYPE_BASIC\";e.shadowMapType===THREE.PCFShadowMap?n=\"SHADOWMAP_TYPE_PCF\":e.shadowMapType===THREE.PCFSoftShadowMap&&(n=\"SHADOWMAP_TYPE_PCF_SOFT\");var t=\"ENVMAP_TYPE_CUBE\",r=\"ENVMAP_MODE_REFLECTION\",s=\"ENVMAP_BLENDING_MULTIPLY\";\nif(e.envMap){switch(d.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:t=\"ENVMAP_TYPE_CUBE\";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:t=\"ENVMAP_TYPE_EQUIREC\";break;case THREE.SphericalReflectionMapping:t=\"ENVMAP_TYPE_SPHERE\"}switch(d.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:r=\"ENVMAP_MODE_REFRACTION\"}switch(d.combine){case THREE.MultiplyOperation:s=\"ENVMAP_BLENDING_MULTIPLY\";\nbreak;case THREE.MixOperation:s=\"ENVMAP_BLENDING_MIX\";break;case THREE.AddOperation:s=\"ENVMAP_BLENDING_ADD\"}}var u=0<b.gammaFactor?b.gammaFactor:1,v,x;v=[];for(var D in g)x=g[D],!1!==x&&(x=\"#define \"+D+\" \"+x,v.push(x));v=v.join(\"\\n\");g=f.createProgram();d instanceof THREE.RawShaderMaterial?b=d=\"\":(d=[\"precision \"+e.precision+\" float;\",\"precision \"+e.precision+\" int;\",v,e.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",b.gammaInput?\"#define GAMMA_INPUT\":\"\",b.gammaOutput?\"#define GAMMA_OUTPUT\":\n\"\",\"#define GAMMA_FACTOR \"+u,\"#define MAX_DIR_LIGHTS \"+e.maxDirLights,\"#define MAX_POINT_LIGHTS \"+e.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+e.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+e.maxHemiLights,\"#define MAX_SHADOWS \"+e.maxShadows,\"#define MAX_BONES \"+e.maxBones,e.map?\"#define USE_MAP\":\"\",e.envMap?\"#define USE_ENVMAP\":\"\",e.envMap?\"#define \"+r:\"\",e.lightMap?\"#define USE_LIGHTMAP\":\"\",e.bumpMap?\"#define USE_BUMPMAP\":\"\",e.normalMap?\"#define USE_NORMALMAP\":\"\",e.specularMap?\"#define USE_SPECULARMAP\":\n\"\",e.alphaMap?\"#define USE_ALPHAMAP\":\"\",e.vertexColors?\"#define USE_COLOR\":\"\",e.flatShading?\"#define FLAT_SHADED\":\"\",e.skinning?\"#define USE_SKINNING\":\"\",e.useVertexTexture?\"#define BONE_TEXTURE\":\"\",e.morphTargets?\"#define USE_MORPHTARGETS\":\"\",e.morphNormals?\"#define USE_MORPHNORMALS\":\"\",e.wrapAround?\"#define WRAP_AROUND\":\"\",e.doubleSided?\"#define DOUBLE_SIDED\":\"\",e.flipSided?\"#define FLIP_SIDED\":\"\",e.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",e.shadowMapEnabled?\"#define \"+n:\"\",e.shadowMapDebug?\n\"#define SHADOWMAP_DEBUG\":\"\",e.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",e.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",e.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",\"uniform mat4 modelMatrix;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\nattribute vec2 uv2;\\n#ifdef USE_COLOR\\n\\tattribute vec3 color;\\n#endif\\n#ifdef USE_MORPHTARGETS\\n\\tattribute vec3 morphTarget0;\\n\\tattribute vec3 morphTarget1;\\n\\tattribute vec3 morphTarget2;\\n\\tattribute vec3 morphTarget3;\\n\\t#ifdef USE_MORPHNORMALS\\n\\t\\tattribute vec3 morphNormal0;\\n\\t\\tattribute vec3 morphNormal1;\\n\\t\\tattribute vec3 morphNormal2;\\n\\t\\tattribute vec3 morphNormal3;\\n\\t#else\\n\\t\\tattribute vec3 morphTarget4;\\n\\t\\tattribute vec3 morphTarget5;\\n\\t\\tattribute vec3 morphTarget6;\\n\\t\\tattribute vec3 morphTarget7;\\n\\t#endif\\n#endif\\n#ifdef USE_SKINNING\\n\\tattribute vec4 skinIndex;\\n\\tattribute vec4 skinWeight;\\n#endif\\n\"].join(\"\\n\"),\nb=[\"precision \"+e.precision+\" float;\",\"precision \"+e.precision+\" int;\",e.bumpMap||e.normalMap||e.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",v,\"#define MAX_DIR_LIGHTS \"+e.maxDirLights,\"#define MAX_POINT_LIGHTS \"+e.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+e.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+e.maxHemiLights,\"#define MAX_SHADOWS \"+e.maxShadows,e.alphaTest?\"#define ALPHATEST \"+e.alphaTest:\"\",b.gammaInput?\"#define GAMMA_INPUT\":\"\",b.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",\"#define GAMMA_FACTOR \"+\nu,e.useFog&&e.fog?\"#define USE_FOG\":\"\",e.useFog&&e.fogExp?\"#define FOG_EXP2\":\"\",e.map?\"#define USE_MAP\":\"\",e.envMap?\"#define USE_ENVMAP\":\"\",e.envMap?\"#define \"+t:\"\",e.envMap?\"#define \"+r:\"\",e.envMap?\"#define \"+s:\"\",e.lightMap?\"#define USE_LIGHTMAP\":\"\",e.bumpMap?\"#define USE_BUMPMAP\":\"\",e.normalMap?\"#define USE_NORMALMAP\":\"\",e.specularMap?\"#define USE_SPECULARMAP\":\"\",e.alphaMap?\"#define USE_ALPHAMAP\":\"\",e.vertexColors?\"#define USE_COLOR\":\"\",e.flatShading?\"#define FLAT_SHADED\":\"\",e.metal?\"#define METAL\":\n\"\",e.wrapAround?\"#define WRAP_AROUND\":\"\",e.doubleSided?\"#define DOUBLE_SIDED\":\"\",e.flipSided?\"#define FLIP_SIDED\":\"\",e.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",e.shadowMapEnabled?\"#define \"+n:\"\",e.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",e.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",e.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",\"uniform mat4 viewMatrix;\\nuniform vec3 cameraPosition;\\n\"].join(\"\\n\"));l=new THREE.WebGLShader(f,f.VERTEX_SHADER,d+l);p=new THREE.WebGLShader(f,f.FRAGMENT_SHADER,\nb+p);f.attachShader(g,l);f.attachShader(g,p);void 0!==q&&f.bindAttribLocation(g,0,q);f.linkProgram(g);q=f.getProgramInfoLog(g);!1===f.getProgramParameter(g,f.LINK_STATUS)&&THREE.error(\"THREE.WebGLProgram: shader error: \"+f.getError(),\"gl.VALIDATE_STATUS\",f.getProgramParameter(g,f.VALIDATE_STATUS),\"gl.getPRogramInfoLog\",q);\"\"!==q&&THREE.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\"+q);f.deleteShader(l);f.deleteShader(p);q=\"viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse\".split(\" \");\ne.useVertexTexture?(q.push(\"boneTexture\"),q.push(\"boneTextureWidth\"),q.push(\"boneTextureHeight\")):q.push(\"boneGlobalMatrices\");e.logarithmicDepthBuffer&&q.push(\"logDepthBufFC\");for(var w in h)q.push(w);h=q;w={};q=0;for(b=h.length;q<b;q++)n=h[q],w[n]=f.getUniformLocation(g,n);this.uniforms=w;q=\"position normal uv uv2 tangent color skinIndex skinWeight lineDistance\".split(\" \");for(h=0;h<e.maxMorphTargets;h++)q.push(\"morphTarget\"+h);for(h=0;h<e.maxMorphNormals;h++)q.push(\"morphNormal\"+h);for(var y in k)q.push(y);\ne=q;k={};y=0;for(h=e.length;y<h;y++)w=e[y],k[w]=f.getAttribLocation(g,w);this.attributes=k;this.attributesKeys=Object.keys(this.attributes);this.id=a++;this.code=c;this.usedTimes=1;this.program=g;this.vertexShader=l;this.fragmentShader=p;return this}}();\nTHREE.WebGLShader=function(){var a=function(a){a=a.split(\"\\n\");for(var c=0;c<a.length;c++)a[c]=c+1+\": \"+a[c];return a.join(\"\\n\")};return function(b,c,d){c=b.createShader(c);b.shaderSource(c,d);b.compileShader(c);!1===b.getShaderParameter(c,b.COMPILE_STATUS)&&THREE.error(\"THREE.WebGLShader: Shader couldn't compile.\");\"\"!==b.getShaderInfoLog(c)&&THREE.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",b.getShaderInfoLog(c),a(d));return c}}();\nTHREE.WebGLState=function(a,b){var c=new Uint8Array(16),d=new Uint8Array(16),e=null,f=null,g=null,h=null,k=null,l=null,p=null,q=null,n=null,t=null,r=null,s=null,u=null,v=null,x=null,D=null;this.initAttributes=function(){for(var a=0,b=c.length;a<b;a++)c[a]=0};this.enableAttribute=function(b){c[b]=1;0===d[b]&&(a.enableVertexAttribArray(b),d[b]=1)};this.disableUnusedAttributes=function(){for(var b=0,e=d.length;b<e;b++)d[b]!==c[b]&&(a.disableVertexAttribArray(b),d[b]=0)};this.setBlending=function(c,d,\nn,q,r,s,t){c!==e&&(c===THREE.NoBlending?a.disable(a.BLEND):c===THREE.AdditiveBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):c===THREE.SubtractiveBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):c===THREE.MultiplyBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):c===THREE.CustomBlending?a.enable(a.BLEND):(a.enable(a.BLEND),a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),\na.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),e=c);if(c===THREE.CustomBlending){r=r||d;s=s||n;t=t||q;if(d!==f||r!==k)a.blendEquationSeparate(b(d),b(r)),f=d,k=r;if(n!==g||q!==h||s!==l||t!==p)a.blendFuncSeparate(b(n),b(q),b(s),b(t)),g=n,h=q,l=s,p=t}else p=l=k=h=g=f=null};this.setDepthTest=function(b){q!==b&&(b?a.enable(a.DEPTH_TEST):a.disable(a.DEPTH_TEST),q=b)};this.setDepthWrite=function(b){n!==b&&(a.depthMask(b),n=b)};this.setColorWrite=function(b){t!==b&&(a.colorMask(b,\nb,b,b),t=b)};this.setDoubleSided=function(b){r!==b&&(b?a.disable(a.CULL_FACE):a.enable(a.CULL_FACE),r=b)};this.setFlipSided=function(b){s!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),s=b)};this.setLineWidth=function(b){b!==u&&(a.lineWidth(b),u=b)};this.setPolygonOffset=function(b,c,d){v!==b&&(b?a.enable(a.POLYGON_OFFSET_FILL):a.disable(a.POLYGON_OFFSET_FILL),v=b);!b||x===c&&D===d||(a.polygonOffset(c,d),x=c,D=d)};this.reset=function(){for(var a=0;a<d.length;a++)d[a]=0;s=r=t=n=q=e=null}};\nTHREE.LensFlarePlugin=function(a,b){var c,d,e,f,g,h,k,l,p,q,n=a.context,t,r,s,u,v,x;this.render=function(D,w,y,A){if(0!==b.length){D=new THREE.Vector3;var E=A/y,G=.5*y,F=.5*A,z=16/A,I=new THREE.Vector2(z*E,z),U=new THREE.Vector3(1,1,0),M=new THREE.Vector2(1,1);if(void 0===s){var z=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),H=new Uint16Array([0,1,2,0,2,3]);t=n.createBuffer();r=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,t);n.bufferData(n.ARRAY_BUFFER,z,n.STATIC_DRAW);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,\nr);n.bufferData(n.ELEMENT_ARRAY_BUFFER,H,n.STATIC_DRAW);v=n.createTexture();x=n.createTexture();n.bindTexture(n.TEXTURE_2D,v);n.texImage2D(n.TEXTURE_2D,0,n.RGB,16,16,0,n.RGB,n.UNSIGNED_BYTE,null);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST);n.bindTexture(n.TEXTURE_2D,x);n.texImage2D(n.TEXTURE_2D,0,\nn.RGBA,16,16,0,n.RGBA,n.UNSIGNED_BYTE,null);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST);var z=(u=0<n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility =        visibility.r / 9.0;\\nvVisibility *= 1.0 - visibility.g / 9.0;\\nvVisibility *=       visibility.b / 9.0;\\nvVisibility *= 1.0 - visibility.a / 9.0;\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"}:{vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"precision mediump float;\\nuniform lowp int renderType;\\nuniform sampler2D map;\\nuniform sampler2D occlusionMap;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\\nvisibility = ( 1.0 - visibility / 4.0 );\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * visibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},\nH=n.createProgram(),L=n.createShader(n.FRAGMENT_SHADER),P=n.createShader(n.VERTEX_SHADER),N=\"precision \"+a.getPrecision()+\" float;\\n\";n.shaderSource(L,N+z.fragmentShader);n.shaderSource(P,N+z.vertexShader);n.compileShader(L);n.compileShader(P);n.attachShader(H,L);n.attachShader(H,P);n.linkProgram(H);s=H;p=n.getAttribLocation(s,\"position\");q=n.getAttribLocation(s,\"uv\");c=n.getUniformLocation(s,\"renderType\");d=n.getUniformLocation(s,\"map\");e=n.getUniformLocation(s,\"occlusionMap\");f=n.getUniformLocation(s,\n\"opacity\");g=n.getUniformLocation(s,\"color\");h=n.getUniformLocation(s,\"scale\");k=n.getUniformLocation(s,\"rotation\");l=n.getUniformLocation(s,\"screenPosition\")}n.useProgram(s);n.enableVertexAttribArray(p);n.enableVertexAttribArray(q);n.uniform1i(e,0);n.uniform1i(d,1);n.bindBuffer(n.ARRAY_BUFFER,t);n.vertexAttribPointer(p,2,n.FLOAT,!1,16,0);n.vertexAttribPointer(q,2,n.FLOAT,!1,16,8);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r);n.disable(n.CULL_FACE);n.depthMask(!1);H=0;for(L=b.length;H<L;H++)if(z=16/A,I.set(z*\nE,z),P=b[H],D.set(P.matrixWorld.elements[12],P.matrixWorld.elements[13],P.matrixWorld.elements[14]),D.applyMatrix4(w.matrixWorldInverse),D.applyProjection(w.projectionMatrix),U.copy(D),M.x=U.x*G+G,M.y=U.y*F+F,u||0<M.x&&M.x<y&&0<M.y&&M.y<A){n.activeTexture(n.TEXTURE1);n.bindTexture(n.TEXTURE_2D,v);n.copyTexImage2D(n.TEXTURE_2D,0,n.RGB,M.x-8,M.y-8,16,16,0);n.uniform1i(c,0);n.uniform2f(h,I.x,I.y);n.uniform3f(l,U.x,U.y,U.z);n.disable(n.BLEND);n.enable(n.DEPTH_TEST);n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,\n0);n.activeTexture(n.TEXTURE0);n.bindTexture(n.TEXTURE_2D,x);n.copyTexImage2D(n.TEXTURE_2D,0,n.RGBA,M.x-8,M.y-8,16,16,0);n.uniform1i(c,1);n.disable(n.DEPTH_TEST);n.activeTexture(n.TEXTURE1);n.bindTexture(n.TEXTURE_2D,v);n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0);P.positionScreen.copy(U);P.customUpdateCallback?P.customUpdateCallback(P):P.updateLensFlares();n.uniform1i(c,2);n.enable(n.BLEND);for(var N=0,R=P.lensFlares.length;N<R;N++){var V=P.lensFlares[N];.001<V.opacity&&.001<V.scale&&(U.x=V.x,\nU.y=V.y,U.z=V.z,z=V.size*V.scale/A,I.x=z*E,I.y=z,n.uniform3f(l,U.x,U.y,U.z),n.uniform2f(h,I.x,I.y),n.uniform1f(k,V.rotation),n.uniform1f(f,V.opacity),n.uniform3f(g,V.color.r,V.color.g,V.color.b),a.state.setBlending(V.blending,V.blendEquation,V.blendSrc,V.blendDst),a.setTexture(V.texture,1),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0))}}n.enable(n.CULL_FACE);n.enable(n.DEPTH_TEST);n.depthMask(!0);a.resetGLState()}}};\nTHREE.ShadowMapPlugin=function(a,b,c,d){function e(a,b,d){if(b.visible){var f=c[b.id];if(f&&b.castShadow&&(!1===b.frustumCulled||!0===p.intersectsObject(b)))for(var g=0,h=f.length;g<h;g++){var k=f[g];b._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,b.matrixWorld);s.push(k)}g=0;for(h=b.children.length;g<h;g++)e(a,b.children[g],d)}}var f=a.context,g,h,k,l,p=new THREE.Frustum,q=new THREE.Matrix4,n=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,s=[],u=THREE.ShaderLib.depthRGBA,v=THREE.UniformsUtils.clone(u.uniforms);\ng=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader});h=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:!0});k=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,skinning:!0});l=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:!0,skinning:!0});g._shadowPass=!0;h._shadowPass=!0;k._shadowPass=\n!0;l._shadowPass=!0;this.render=function(c,v){if(!1!==a.shadowMapEnabled){var u,y,A,E,G,F,z,I,U=[];E=0;f.clearColor(1,1,1,1);f.disable(f.BLEND);f.enable(f.CULL_FACE);f.frontFace(f.CCW);a.shadowMapCullFace===THREE.CullFaceFront?f.cullFace(f.FRONT):f.cullFace(f.BACK);a.state.setDepthTest(!0);u=0;for(y=b.length;u<y;u++)if(A=b[u],A.castShadow)if(A instanceof THREE.DirectionalLight&&A.shadowCascade)for(G=0;G<A.shadowCascadeCount;G++){var M;if(A.shadowCascadeArray[G])M=A.shadowCascadeArray[G];else{z=A;\nvar H=G;M=new THREE.DirectionalLight;M.isVirtual=!0;M.onlyShadow=!0;M.castShadow=!0;M.shadowCameraNear=z.shadowCameraNear;M.shadowCameraFar=z.shadowCameraFar;M.shadowCameraLeft=z.shadowCameraLeft;M.shadowCameraRight=z.shadowCameraRight;M.shadowCameraBottom=z.shadowCameraBottom;M.shadowCameraTop=z.shadowCameraTop;M.shadowCameraVisible=z.shadowCameraVisible;M.shadowDarkness=z.shadowDarkness;M.shadowBias=z.shadowCascadeBias[H];M.shadowMapWidth=z.shadowCascadeWidth[H];M.shadowMapHeight=z.shadowCascadeHeight[H];\nM.pointsWorld=[];M.pointsFrustum=[];I=M.pointsWorld;F=M.pointsFrustum;for(var L=0;8>L;L++)I[L]=new THREE.Vector3,F[L]=new THREE.Vector3;I=z.shadowCascadeNearZ[H];z=z.shadowCascadeFarZ[H];F[0].set(-1,-1,I);F[1].set(1,-1,I);F[2].set(-1,1,I);F[3].set(1,1,I);F[4].set(-1,-1,z);F[5].set(1,-1,z);F[6].set(-1,1,z);F[7].set(1,1,z);M.originalCamera=v;F=new THREE.Gyroscope;F.position.copy(A.shadowCascadeOffset);F.add(M);F.add(M.target);v.add(F);A.shadowCascadeArray[G]=M}H=A;I=G;z=H.shadowCascadeArray[I];z.position.copy(H.position);\nz.target.position.copy(H.target.position);z.lookAt(z.target);z.shadowCameraVisible=H.shadowCameraVisible;z.shadowDarkness=H.shadowDarkness;z.shadowBias=H.shadowCascadeBias[I];F=H.shadowCascadeNearZ[I];H=H.shadowCascadeFarZ[I];z=z.pointsFrustum;z[0].z=F;z[1].z=F;z[2].z=F;z[3].z=F;z[4].z=H;z[5].z=H;z[6].z=H;z[7].z=H;U[E]=M;E++}else U[E]=A,E++;u=0;for(y=U.length;u<y;u++){A=U[u];A.shadowMap||(G=THREE.LinearFilter,a.shadowMapType===THREE.PCFSoftShadowMap&&(G=THREE.NearestFilter),A.shadowMap=new THREE.WebGLRenderTarget(A.shadowMapWidth,\nA.shadowMapHeight,{minFilter:G,magFilter:G,format:THREE.RGBAFormat}),A.shadowMapSize=new THREE.Vector2(A.shadowMapWidth,A.shadowMapHeight),A.shadowMatrix=new THREE.Matrix4);if(!A.shadowCamera){if(A instanceof THREE.SpotLight)A.shadowCamera=new THREE.PerspectiveCamera(A.shadowCameraFov,A.shadowMapWidth/A.shadowMapHeight,A.shadowCameraNear,A.shadowCameraFar);else if(A instanceof THREE.DirectionalLight)A.shadowCamera=new THREE.OrthographicCamera(A.shadowCameraLeft,A.shadowCameraRight,A.shadowCameraTop,\nA.shadowCameraBottom,A.shadowCameraNear,A.shadowCameraFar);else{THREE.error(\"THREE.ShadowMapPlugin: Unsupported light type for shadow\",A);continue}c.add(A.shadowCamera);!0===c.autoUpdate&&c.updateMatrixWorld()}A.shadowCameraVisible&&!A.cameraHelper&&(A.cameraHelper=new THREE.CameraHelper(A.shadowCamera),c.add(A.cameraHelper));if(A.isVirtual&&M.originalCamera==v){G=v;E=A.shadowCamera;F=A.pointsFrustum;z=A.pointsWorld;n.set(Infinity,Infinity,Infinity);t.set(-Infinity,-Infinity,-Infinity);for(H=0;8>\nH;H++)I=z[H],I.copy(F[H]),I.unproject(G),I.applyMatrix4(E.matrixWorldInverse),I.x<n.x&&(n.x=I.x),I.x>t.x&&(t.x=I.x),I.y<n.y&&(n.y=I.y),I.y>t.y&&(t.y=I.y),I.z<n.z&&(n.z=I.z),I.z>t.z&&(t.z=I.z);E.left=n.x;E.right=t.x;E.top=t.y;E.bottom=n.y;E.updateProjectionMatrix()}E=A.shadowMap;F=A.shadowMatrix;G=A.shadowCamera;G.position.setFromMatrixPosition(A.matrixWorld);r.setFromMatrixPosition(A.target.matrixWorld);G.lookAt(r);G.updateMatrixWorld();G.matrixWorldInverse.getInverse(G.matrixWorld);A.cameraHelper&&\n(A.cameraHelper.visible=A.shadowCameraVisible);A.shadowCameraVisible&&A.cameraHelper.update();F.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);F.multiply(G.projectionMatrix);F.multiply(G.matrixWorldInverse);q.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse);p.setFromMatrix(q);a.setRenderTarget(E);a.clear();s.length=0;e(c,c,G);A=0;for(E=s.length;A<E;A++)z=s[A],F=z.object,z=z.buffer,H=F.material instanceof THREE.MeshFaceMaterial?F.material.materials[0]:F.material,I=void 0!==F.geometry.morphTargets&&\n0<F.geometry.morphTargets.length&&H.morphTargets,L=F instanceof THREE.SkinnedMesh&&H.skinning,I=F.customDepthMaterial?F.customDepthMaterial:L?I?l:k:I?h:g,a.setMaterialFaces(H),z instanceof THREE.BufferGeometry?a.renderBufferDirect(G,b,null,I,z,F):a.renderBuffer(G,b,null,I,z,F);A=0;for(E=d.length;A<E;A++)z=d[A],F=z.object,F.visible&&F.castShadow&&(F._modelViewMatrix.multiplyMatrices(G.matrixWorldInverse,F.matrixWorld),a.renderImmediateObject(G,b,null,g,F))}u=a.getClearColor();y=a.getClearAlpha();f.clearColor(u.r,\nu.g,u.b,y);f.enable(f.BLEND);a.shadowMapCullFace===THREE.CullFaceFront&&f.cullFace(f.BACK);a.resetGLState()}}};\nTHREE.SpritePlugin=function(a,b){var c,d,e,f,g,h,k,l,p,q,n,t,r,s,u,v,x;function D(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var w=a.context,y,A,E,G,F=new THREE.Vector3,z=new THREE.Quaternion,I=new THREE.Vector3;this.render=function(U,M){if(0!==b.length){if(void 0===E){var H=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),L=new Uint16Array([0,1,2,0,2,3]);y=w.createBuffer();A=w.createBuffer();w.bindBuffer(w.ARRAY_BUFFER,y);w.bufferData(w.ARRAY_BUFFER,H,w.STATIC_DRAW);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,\nA);w.bufferData(w.ELEMENT_ARRAY_BUFFER,L,w.STATIC_DRAW);var H=w.createProgram(),L=w.createShader(w.VERTEX_SHADER),P=w.createShader(w.FRAGMENT_SHADER);w.shaderSource(L,[\"precision \"+a.getPrecision()+\" float;\",\"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position * scale;\\nvec2 rotatedPosition;\\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\nvec4 finalPosition;\\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition;\\nfinalPosition = projectionMatrix * finalPosition;\\ngl_Position = finalPosition;\\n}\"].join(\"\\n\"));\nw.shaderSource(P,[\"precision \"+a.getPrecision()+\" float;\",\"uniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\nif ( texture.a < alphaTest ) discard;\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\nif ( fogType > 0 ) {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat fogFactor = 0.0;\\nif ( fogType == 1 ) {\\nfogFactor = smoothstep( fogNear, fogFar, depth );\\n} else {\\nconst float LOG2 = 1.442695;\\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n}\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\\n}\"].join(\"\\n\"));\nw.compileShader(L);w.compileShader(P);w.attachShader(H,L);w.attachShader(H,P);w.linkProgram(H);E=H;v=w.getAttribLocation(E,\"position\");x=w.getAttribLocation(E,\"uv\");c=w.getUniformLocation(E,\"uvOffset\");d=w.getUniformLocation(E,\"uvScale\");e=w.getUniformLocation(E,\"rotation\");f=w.getUniformLocation(E,\"scale\");g=w.getUniformLocation(E,\"color\");h=w.getUniformLocation(E,\"map\");k=w.getUniformLocation(E,\"opacity\");l=w.getUniformLocation(E,\"modelViewMatrix\");p=w.getUniformLocation(E,\"projectionMatrix\");q=\nw.getUniformLocation(E,\"fogType\");n=w.getUniformLocation(E,\"fogDensity\");t=w.getUniformLocation(E,\"fogNear\");r=w.getUniformLocation(E,\"fogFar\");s=w.getUniformLocation(E,\"fogColor\");u=w.getUniformLocation(E,\"alphaTest\");H=document.createElement(\"canvas\");H.width=8;H.height=8;L=H.getContext(\"2d\");L.fillStyle=\"white\";L.fillRect(0,0,8,8);G=new THREE.Texture(H);G.needsUpdate=!0}w.useProgram(E);w.enableVertexAttribArray(v);w.enableVertexAttribArray(x);w.disable(w.CULL_FACE);w.enable(w.BLEND);w.bindBuffer(w.ARRAY_BUFFER,\ny);w.vertexAttribPointer(v,2,w.FLOAT,!1,16,0);w.vertexAttribPointer(x,2,w.FLOAT,!1,16,8);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,A);w.uniformMatrix4fv(p,!1,M.projectionMatrix.elements);w.activeTexture(w.TEXTURE0);w.uniform1i(h,0);L=H=0;(P=U.fog)?(w.uniform3f(s,P.color.r,P.color.g,P.color.b),P instanceof THREE.Fog?(w.uniform1f(t,P.near),w.uniform1f(r,P.far),w.uniform1i(q,1),L=H=1):P instanceof THREE.FogExp2&&(w.uniform1f(n,P.density),w.uniform1i(q,2),L=H=2)):(w.uniform1i(q,0),L=H=0);for(var P=0,N=b.length;P<\nN;P++){var R=b[P];R._modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,R.matrixWorld);R.z=-R._modelViewMatrix.elements[14]}b.sort(D);for(var V=[],P=0,N=b.length;P<N;P++){var R=b[P],J=R.material;w.uniform1f(u,J.alphaTest);w.uniformMatrix4fv(l,!1,R._modelViewMatrix.elements);R.matrixWorld.decompose(F,z,I);V[0]=I.x;V[1]=I.y;R=0;U.fog&&J.fog&&(R=L);H!==R&&(w.uniform1i(q,R),H=R);null!==J.map?(w.uniform2f(c,J.map.offset.x,J.map.offset.y),w.uniform2f(d,J.map.repeat.x,J.map.repeat.y)):(w.uniform2f(c,\n0,0),w.uniform2f(d,1,1));w.uniform1f(k,J.opacity);w.uniform3f(g,J.color.r,J.color.g,J.color.b);w.uniform1f(e,J.rotation);w.uniform2fv(f,V);a.state.setBlending(J.blending,J.blendEquation,J.blendSrc,J.blendDst);a.state.setDepthTest(J.depthTest);a.state.setDepthWrite(J.depthWrite);J.map&&J.map.image&&J.map.image.width?a.setTexture(J.map,0):a.setTexture(G,0);w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0)}w.enable(w.CULL_FACE);a.resetGLState()}}};\nTHREE.GeometryUtils={merge:function(a,b,c){THREE.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\");var d;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){THREE.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");return a.center()}};\nTHREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.Texture(void 0,b);e.load(a,function(a){f.image=a;f.needsUpdate=!0;c&&c(f)},void 0,function(a){d&&d(a)});f.sourceFile=a;return f},loadTextureCube:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.CubeTexture([],b);f.flipY=!1;var g=0;b=function(b){e.load(a[b],function(a){f.images[b]=a;g+=1;6===g&&(f.needsUpdate=!0,c&&\nc(f))},void 0,d)};for(var h=0,k=a.length;h<k;++h)b(h);return f},loadCompressedTexture:function(){THREE.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},loadCompressedTextureCube:function(){THREE.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement(\"canvas\");\nf.width=d;f.height=e;var g=f.getContext(\"2d\");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,k=g.createImageData(d,e),l=k.data,p=0;p<d;p++)for(var q=0;q<e;q++){var n=0>q-1?0:q-1,t=q+1>e-1?e-1:q+1,r=0>p-1?0:p-1,s=p+1>d-1?d-1:p+1,u=[],v=[0,0,h[4*(q*d+p)]/255*b];u.push([-1,0,h[4*(q*d+r)]/255*b]);u.push([-1,-1,h[4*(n*d+r)]/255*b]);u.push([0,-1,h[4*(n*d+p)]/255*b]);u.push([1,-1,h[4*(n*d+s)]/255*b]);u.push([1,0,h[4*(q*d+s)]/255*b]);u.push([1,1,h[4*(t*d+s)]/255*b]);u.push([0,1,h[4*(t*d+p)]/255*\nb]);u.push([-1,1,h[4*(t*d+r)]/255*b]);n=[];r=u.length;for(t=0;t<r;t++){var s=u[t],x=u[(t+1)%r],s=[s[0]-v[0],s[1]-v[1],s[2]-v[2]],x=[x[0]-v[0],x[1]-v[1],x[2]-v[2]];n.push(c([s[1]*x[2]-s[2]*x[1],s[2]*x[0]-s[0]*x[2],s[0]*x[1]-s[1]*x[0]]))}u=[0,0,0];for(t=0;t<n.length;t++)u[0]+=n[t][0],u[1]+=n[t][1],u[2]+=n[t][2];u[0]/=n.length;u[1]/=n.length;u[2]/=n.length;v=4*(q*d+p);l[v]=(u[0]+1)/2*255|0;l[v+1]=(u[1]+1)/2*255|0;l[v+2]=255*u[2]|0;l[v+3]=255}g.putImageData(k,0,0);return f},generateDataTexture:function(a,\nb,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};\nTHREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\nTHREE.FontUtils={faces:{},face:\"helvetiker\",weight:\"normal\",style:\"normal\",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(a){throw\"The font \"+this.face+\" with \"+this.weight+\" weight and \"+this.style+\" style is missing.\";}},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=\na},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=String(a).split(\"\"),f=e.length,g=[];for(a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,k,l,p,q,n,t,r,s,u,v=b.glyphs[a]||b.glyphs[\"?\"];if(v){if(v.o)for(b=v._cachedOutline||(v._cachedOutline=v.o.split(\" \")),l=b.length,a=0;a<l;)switch(k=b[a++],k){case \"m\":k=b[a++]*c+d;p=b[a++]*c;e.moveTo(k,p);\nbreak;case \"l\":k=b[a++]*c+d;p=b[a++]*c;e.lineTo(k,p);break;case \"q\":k=b[a++]*c+d;p=b[a++]*c;t=b[a++]*c+d;r=b[a++]*c;e.quadraticCurveTo(t,r,k,p);if(g=f[f.length-1])for(q=g.x,n=g.y,g=1,h=this.divisions;g<=h;g++){var x=g/h;THREE.Shape.Utils.b2(x,q,t,k);THREE.Shape.Utils.b2(x,n,r,p)}break;case \"b\":if(k=b[a++]*c+d,p=b[a++]*c,t=b[a++]*c+d,r=b[a++]*c,s=b[a++]*c+d,u=b[a++]*c,e.bezierCurveTo(t,r,s,u,k,p),g=f[f.length-1])for(q=g.x,n=g.y,g=1,h=this.divisions;g<=h;g++)x=g/h,THREE.Shape.Utils.b3(x,q,t,s,k),THREE.Shape.Utils.b3(x,\nn,r,u,p)}return{offset:v.ha*c,path:e}}}};\nTHREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:\"helvetiker\",e=void 0!==b.weight?b.weight:\"normal\",f=void 0!==b.style?b.style:\"normal\";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};\n(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],k,l,p;if(0<b(a))for(l=0;l<e;l++)g[l]=l;else for(l=0;l<e;l++)g[l]=e-1-l;var q=2*e;for(l=e-1;2<e;){if(0>=q--){THREE.warn(\"THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()\");break}k=l;e<=k&&(k=0);l=k+1;e<=l&&(l=0);p=l+1;e<=p&&(p=0);var n;a:{var t=n=void 0,r=void 0,s=void 0,\nu=void 0,v=void 0,x=void 0,D=void 0,w=void 0,t=a[g[k]].x,r=a[g[k]].y,s=a[g[l]].x,u=a[g[l]].y,v=a[g[p]].x,x=a[g[p]].y;if(1E-10>(s-t)*(x-r)-(u-r)*(v-t))n=!1;else{var y=void 0,A=void 0,E=void 0,G=void 0,F=void 0,z=void 0,I=void 0,U=void 0,M=void 0,H=void 0,M=U=I=w=D=void 0,y=v-s,A=x-u,E=t-v,G=r-x,F=s-t,z=u-r;for(n=0;n<e;n++)if(D=a[g[n]].x,w=a[g[n]].y,!(D===t&&w===r||D===s&&w===u||D===v&&w===x)&&(I=D-t,U=w-r,M=D-s,H=w-u,D-=v,w-=x,M=y*H-A*M,I=F*U-z*I,U=E*w-G*D,-1E-10<=M&&-1E-10<=U&&-1E-10<=I)){n=!1;break a}n=\n!0}}if(n){f.push([a[g[k]],a[g[l]],a[g[p]]]);h.push([g[k],g[l],g[p]]);k=l;for(p=l+1;p<e;k++,p++)g[k]=g[p];e--;q=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;\nTHREE.Audio=function(a){THREE.Object3D.call(this);this.type=\"Audio\";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain);this.autoplay=!1;this.startTime=0;this.isPlaying=!1};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;\nTHREE.Audio.prototype.load=function(a){var b=this,c=new XMLHttpRequest;c.open(\"GET\",a,!0);c.responseType=\"arraybuffer\";c.onload=function(a){b.context.decodeAudioData(this.response,function(a){b.source.buffer=a;b.autoplay&&b.play()})};c.send();return this};\nTHREE.Audio.prototype.play=function(){if(!0===this.isPlaying)THREE.warn(\"THREE.Audio: Audio is already playing.\");else{var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.connect(this.panner);a.start(0,this.startTime);this.isPlaying=!0;this.source=a}};THREE.Audio.prototype.pause=function(){this.source.stop();this.startTime=this.context.currentTime};THREE.Audio.prototype.stop=function(){this.source.stop();this.startTime=0};\nTHREE.Audio.prototype.onEnded=function(){this.isPlaying=!1};THREE.Audio.prototype.setLoop=function(a){this.source.loop=a};THREE.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};THREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a};\nTHREE.Audio.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type=\"AudioListener\";this.context=new (window.AudioContext||window.webkitAudioContext)};THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;\nTHREE.AudioListener.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g){THREE.Object3D.prototype.updateMatrixWorld.call(this,g);g=this.context.listener;var h=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.subVectors(a,f);g.setPosition(a.x,a.y,a.z);g.setOrientation(d.x,d.y,d.z,h.x,h.y,h.z);g.setVelocity(e.x,e.y,e.z);f.copy(a)}}();\nTHREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){THREE.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};\nTHREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};\nTHREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,k;g<=h;)if(d=Math.floor(g+(h-g)/2),k=c[d]-f,0>k)g=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};\nTHREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};\nTHREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};\nTHREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};\nTHREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};\nTHREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};\nTHREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,k,l,p,q=a[0]instanceof THREE.Vector3;p=q?new THREE.Vector3:new THREE.Vector2;k=0;for(l=a.length;k<l;k++)h=a[k],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),q&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),p.add(h);a={minX:e,minY:f,maxX:b,maxY:c};q&&(a.maxZ=d,a.minZ=g);return a};\nTHREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};\nTHREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};\nTHREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,k;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,k=g/c.maxX,k=b.getUtoTmapping(k,g),g=b.getPoint(k),k=b.getTangent(k),k.set(-k.y,k.x).multiplyScalar(h),f.x=g.x+k.x,f.y=g.y+k.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;\nTHREE.Gyroscope.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Quaternion,f=new THREE.Vector3;return function(g){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||g)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(d,e,f),this.matrix.decompose(a,b,c),this.matrixWorld.compose(d,b,f)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=\n!1,g=!0;for(var h=0,k=this.children.length;h<k;h++)this.children[h].updateMatrixWorld(g)}}();THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:\"moveTo\",LINE_TO:\"lineTo\",QUADRATIC_CURVE_TO:\"quadraticCurveTo\",BEZIER_CURVE_TO:\"bezierCurveTo\",CSPLINE_THRU:\"splineThru\",ARC:\"arc\",ELLIPSE:\"ellipse\"};\nTHREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};\nTHREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};\nTHREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};\nTHREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};\nTHREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};\nTHREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),k=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(k);k=k.getPoint(1);h.push(k.x);h.push(k.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};\nTHREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c};\nTHREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log(\"tata\"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,k,l,p,q,n,t,r,s;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];k=f[3];q=f[0];n=f[1];0<c.length?(g=c[c.length-1],t=g.x,\nr=g.y):(g=this.actions[d-1].args,t=g[g.length-2],r=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b2(s,t,q,h),s=THREE.Shape.Utils.b2(s,r,n,k),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];k=f[5];q=f[0];n=f[1];l=f[2];p=f[3];0<c.length?(g=c[c.length-1],t=g.x,r=g.y):(g=this.actions[d-1].args,t=g[g.length-2],r=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b3(s,t,q,l,h),s=THREE.Shape.Utils.b3(s,r,n,p,k),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.CSPLINE_THRU:g=\nthis.actions[d-1].args;s=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;s=s.concat(f[0]);s=new THREE.SplineCurve(s);for(f=1;f<=g;f++)c.push(s.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];k=f[1];n=f[2];l=f[3];g=f[4];q=!!f[5];t=g-l;r=2*a;for(f=1;f<=r;f++)s=f/r,q||(s=1-s),s=l+s*t,g=h+n*Math.cos(s),s=k+n*Math.sin(s),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.ELLIPSE:for(h=f[0],k=f[1],n=f[2],p=f[3],l=f[4],g=f[5],q=!!f[6],t=g-l,r=2*a,f=1;f<=r;f++)s=f/r,q||\n(s=1-s),s=l+s*t,g=h+n*Math.cos(s),s=k+p*Math.sin(s),c.push(new THREE.Vector2(g,s))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};\nTHREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,n=h.y-g.y;if(1E-10<Math.abs(n)){if(0>n&&(g=b[f],k=-k,h=b[e],n=-n),!(a.y<g.y||a.y>h.y))if(a.y==g.y){if(a.x==g.x)return!0}else{e=n*(a.x-g.x)-k*(a.y-g.y);if(0==e)return!0;0>e||(d=!d)}}else if(a.y==g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=\nh.x))return!0}return d}var e=function(a){var b,c,d,e,f=[],g=new THREE.Path;b=0;for(c=a.length;b<c;b++)d=a[b],e=d.args,d=d.action,d==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new THREE.Path),g[d].apply(g,e);0!=g.actions.length&&f.push(g);return f}(this.actions);if(0==e.length)return[];if(!0===b)return c(e);var f,g,h,k=[];if(1==e.length)return g=e[0],h=new THREE.Shape,h.actions=g.actions,h.curves=g.curves,k.push(h),k;var l=!THREE.Shape.Utils.isClockWise(e[0].getPoints()),l=a?!l:l;\nh=[];var p=[],q=[],n=0,t;p[n]=void 0;q[n]=[];var r,s;r=0;for(s=e.length;r<s;r++)g=e[r],t=g.getPoints(),f=THREE.Shape.Utils.isClockWise(t),(f=a?!f:f)?(!l&&p[n]&&n++,p[n]={s:new THREE.Shape,p:t},p[n].s.actions=g.actions,p[n].s.curves=g.curves,l&&n++,q[n]=[]):q[n].push({h:g,p:t[0]});if(!p[0])return c(e);if(1<p.length){r=!1;s=[];g=0;for(e=p.length;g<e;g++)h[g]=[];g=0;for(e=p.length;g<e;g++)for(f=q[g],l=0;l<f.length;l++){n=f[l];t=!0;for(var u=0;u<p.length;u++)d(n.p,p[u].p)&&(g!=u&&s.push({froms:g,tos:u,\nhole:l}),t?(t=!1,h[u].push(n)):r=!0);t&&h[g].push(n)}0<s.length&&(r||(q=h))}r=0;for(s=p.length;r<s;r++)for(h=p[r].s,k.push(h),g=q[r],e=0,f=g.length;e<f;e++)h.holes.push(g[e].h);return k};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};\nTHREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};\nTHREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};\nTHREE.Shape.Utils={triangulateShape:function(a,b){function c(a,b,c){return a.x!=b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-d.x,l=e.y-d.y,p=a.x-d.x,q=a.y-d.y,E=h*k-g*l,G=h*p-g*q;if(1E-10<Math.abs(E)){if(0<E){if(0>G||G>E)return[];k=l*p-k*q;if(0>k||k>E)return[]}else{if(0<G||G<E)return[];k=l*p-k*q;if(0<k||k<E)return[]}if(0==k)return!f||0!=G&&G!=E?[a]:[];if(k==E)return!f||0!=G&&G!=E?[b]:[];if(0==G)return[d];\nif(G==E)return[e];f=k/E;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!=G||l*p!=k*q)return[];h=0==g&&0==h;k=0==k&&0==l;if(h&&k)return a.x!=d.x||a.y!=d.y?[]:[a];if(h)return c(d,e,a)?[a]:[];if(k)return c(a,b,d)?[d]:[];0!=g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),d.x<e.x?(b=d,E=d.x,l=e,d=e.x):(b=e,E=e.x,l=d,d=d.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),d.y<e.y?(b=d,E=d.y,l=e,d=e.y):(b=e,E=e.y,l=d,d=d.y));return k<=E?a<E?[]:a==E?f?[]:[b]:a<=d?[b,h]:[b,l]:k>d?[]:k==d?f?[]:[g]:a<=d?[g,h]:\n[g,l]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return 1E-10<Math.abs(a)?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var f,g,h,k,l,p={};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=h.length;f<g;f++)l=h[f].x+\":\"+h[f].y,void 0!==p[l]&&THREE.warn(\"THREE.Shape: Duplicate point\",l),p[l]=f;f=function(a,b){function c(a,b){var d=h.length-1,f=a-1;0>f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],k[b]);\nif(!d)return!1;d=k.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(k[b],k[f],k[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,k;for(e=0;e<l.length;e++)for(f=b[l[e]],h=0;h<f.length;h++)if(k=h+1,k%=f.length,k=d(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var h=a.concat(),k,l=[],p,q,A,E,G,F=[],z,I,U,M=0;for(p=b.length;M<p;M++)l.push(M);z=0;for(var H=2*l.length;0<l.length;){H--;if(0>\nH){console.log(\"Infinite Loop! Holes left:\"+l.length+\", Probably Hole outside Shape!\");break}for(q=z;q<h.length;q++){A=h[q];p=-1;for(M=0;M<l.length;M++)if(E=l[M],G=A.x+\":\"+A.y+\":\"+E,void 0===F[G]){k=b[E];for(I=0;I<k.length;I++)if(E=k[I],c(q,I)&&!f(A,E)&&!g(A,E)){p=I;l.splice(M,1);z=h.slice(0,q+1);E=h.slice(q);I=k.slice(p);U=k.slice(0,p+1);h=z.concat(I).concat(U).concat(E);z=q;break}if(0<=p)break;F[G]=!0}if(0<=p)break}}return h}(a,b);var q=THREE.FontUtils.Triangulate(f,!1);f=0;for(g=q.length;f<g;f++)for(k=\nq[f],h=0;3>h;h++)l=k[h].x+\":\"+k[h].y,l=p[l],void 0!==l&&(k[h]=l);return q.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*\na*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};\nTHREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;\nTHREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return b};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=new THREE.Vector2;b.x=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);return b.normalize()};\nTHREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};\nTHREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;\nTHREE.SplineCurve.prototype.getPoint=function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=new THREE.Vector2;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);return c};THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};\nTHREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);a=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;b=new THREE.Vector2;b.x=this.aX+this.xRadius*Math.cos(a);b.y=this.aY+this.yRadius*Math.sin(a);return b};\nTHREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});\nTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);b.z=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return b});\nTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);b.y=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b.z=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return b});\nTHREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=new THREE.Vector3;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,f.z,b.z,a);return c});\nTHREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-0;var c=Math.floor(a);a-=c;var c=c+(0<c?0:(Math.floor(Math.abs(c)/b.length)+1)*b.length),d=b[(c-1)%b.length],e=b[c%b.length],f=b[(c+1)%b.length],b=b[(c+2)%b.length],c=new THREE.Vector3;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,f.z,b.z,a);return c});\nTHREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){THREE.warn(\"THREE.AnimationHandler.add() has been deprecated.\")},get:function(){THREE.warn(\"THREE.AnimationHandler.get() has been deprecated.\")},remove:function(){THREE.warn(\"THREE.AnimationHandler.remove() has been deprecated.\")},animations:[],init:function(a){if(!0===a.initialized)return a;for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(0>a.hierarchy[b].keys[c].time&&(a.hierarchy[b].keys[c].time=\n0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=(new THREE.Quaternion).fromArray(d)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){d={};for(c=0;c<a.hierarchy[b].keys.length;c++)for(var e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++){var f=a.hierarchy[b].keys[c].morphTargets[e];d[f]=-1}a.hierarchy[b].usedMorphTargets=d;for(c=0;c<a.hierarchy[b].keys.length;c++){var g=\n{};for(f in d){for(e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++)if(a.hierarchy[b].keys[c].morphTargets[e]===f){g[f]=a.hierarchy[b].keys[c].morphTargetsInfluences[e];break}e===a.hierarchy[b].keys[c].morphTargets.length&&(g[f]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=g}}for(c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}a.initialized=\n!0;return a},parse:function(a){var b=function(a,c){c.push(a);for(var d=0;d<a.children.length;d++)b(a.children[d],c)},c=[];if(a instanceof THREE.SkinnedMesh)for(var d=0;d<a.skeleton.bones.length;d++)c.push(a.skeleton.bones[d]);else b(a,c);return c},play:function(a){-1===this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){a=this.animations.indexOf(a);-1!==a&&this.animations.splice(a,1)},update:function(a){for(var b=0;b<this.animations.length;b++)this.animations[b].resetBlendWeights();\nfor(b=0;b<this.animations.length;b++)this.animations[b].update(a)}};THREE.Animation=function(a,b){this.root=a;this.data=THREE.AnimationHandler.init(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};\nTHREE.Animation.prototype={constructor:THREE.Animation,keyTypes:[\"pos\",\"rot\",\"scl\"],play:function(a,b){this.currentTime=void 0!==a?a:0;this.weight=void 0!==b?b:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)},reset:function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a];void 0===c.animationCache&&(c.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});\nvar d=this.data.name,e=c.animationCache.animations,f=e[d];void 0===f&&(f={prevKey:{pos:0,rot:0,scl:0},nextKey:{pos:0,rot:0,scl:0},originalMatrix:c.matrix},e[d]=f);for(c=0;3>c;c++){for(var d=this.keyTypes[c],e=this.data.hierarchy[a].keys[0],g=this.getNextKeyWith(d,a,1);g.time<this.currentTime&&g.index>e.index;)e=g,g=this.getNextKeyWith(d,a,g.index+1);f.prevKey[d]=e;f.nextKey[d]=g}}},resetBlendWeights:function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a].animationCache;void 0!==\nc&&(c=c.blending,c.positionWeight=0,c.quaternionWeight=0,c.scaleWeight=0)}},update:function(){var a=[],b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Quaternion,e=function(a,b){var c=[],d=[],e,q,n,t,r,s;e=(a.length-1)*b;q=Math.floor(e);e-=q;c[0]=0===q?q:q-1;c[1]=q;c[2]=q>a.length-2?q:q+1;c[3]=q>a.length-3?q:q+2;q=a[c[0]];t=a[c[1]];r=a[c[2]];s=a[c[3]];c=e*e;n=e*c;d[0]=f(q[0],t[0],r[0],s[0],e,c,n);d[1]=f(q[1],t[1],r[1],s[1],e,c,n);d[2]=f(q[2],t[2],r[2],s[2],e,c,n);return d},f=function(a,b,c,d,\ne,f,n){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*n+(-3*(b-c)-2*a-d)*f+a*e+b};return function(f){if(!1!==this.isPlaying&&(this.currentTime+=f*this.timeScale,0!==this.weight)){f=this.data.length;if(this.currentTime>f||0>this.currentTime)this.loop?(this.currentTime%=f,0>this.currentTime&&(this.currentTime+=f),this.reset()):this.stop();f=0;for(var h=this.hierarchy.length;f<h;f++)for(var k=this.hierarchy[f],l=k.animationCache.animations[this.data.name],p=k.animationCache.blending,q=0;3>q;q++){var n=this.keyTypes[q],\nt=l.prevKey[n],r=l.nextKey[n];if(0<this.timeScale&&r.time<=this.currentTime||0>this.timeScale&&t.time>=this.currentTime){t=this.data.hierarchy[f].keys[0];for(r=this.getNextKeyWith(n,f,1);r.time<this.currentTime&&r.index>t.index;)t=r,r=this.getNextKeyWith(n,f,r.index+1);l.prevKey[n]=t;l.nextKey[n]=r}var s=(this.currentTime-t.time)/(r.time-t.time),u=t[n],v=r[n];0>s&&(s=0);1<s&&(s=1);if(\"pos\"===n)if(this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=u[0]+(v[0]-u[0])*s,c.y=u[1]+(v[1]-u[1])*s,\nc.z=u[2]+(v[2]-u[2])*s,t=this.weight/(this.weight+p.positionWeight),k.position.lerp(c,t),p.positionWeight+=this.weight;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)a[0]=this.getPrevKeyWith(\"pos\",f,t.index-1).pos,a[1]=u,a[2]=v,a[3]=this.getNextKeyWith(\"pos\",f,r.index+1).pos,s=.33*s+.33,r=e(a,s),t=this.weight/(this.weight+p.positionWeight),p.positionWeight+=this.weight,n=k.position,n.x+=(r[0]-n.x)*t,n.y+=(r[1]-\nn.y)*t,n.z+=(r[2]-n.z)*t,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(s=e(a,1.01*s),b.set(s[0],s[1],s[2]),b.sub(n),b.y=0,b.normalize(),s=Math.atan2(b.x,b.z),k.rotation.set(0,s,0))}else\"rot\"===n?(THREE.Quaternion.slerp(u,v,d,s),0===p.quaternionWeight?(k.quaternion.copy(d),p.quaternionWeight=this.weight):(t=this.weight/(this.weight+p.quaternionWeight),THREE.Quaternion.slerp(k.quaternion,d,k.quaternion,t),p.quaternionWeight+=this.weight)):\"scl\"===n&&(c.x=u[0]+(v[0]-u[0])*s,c.y=\nu[1]+(v[1]-u[1])*s,c.z=u[2]+(v[2]-u[2])*s,t=this.weight/(this.weight+p.scaleWeight),k.scale.lerp(c,t),p.scaleWeight+=this.weight)}return!0}}}(),getNextKeyWith:function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]},getPrevKeyWith:function(a,b,c){var d=\nthis.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]}};\nTHREE.KeyFrameAnimation=function(a){this.root=a.node;this.data=THREE.AnimationHandler.init(a);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();\nd.matrixWorldNeedsUpdate=!0}}};\nTHREE.KeyFrameAnimation.prototype={constructor:THREE.KeyFrameAnimation,play:function(a){this.currentTime=void 0!==a?a:0;if(!1===this.isPlaying){this.isPlaying=!0;var b=this.hierarchy.length,c,d;for(a=0;a<b;a++)c=this.hierarchy[a],d=this.data.hierarchy[a],void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c.matrix),c=this.data.hierarchy[a].keys,c.length&&(d.animationCache.prevKey=c[0],d.animationCache.nextKey=\nc[1],this.startTime=Math.min(c[0].time,this.startTime),this.endTime=Math.max(c[c.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)},stop:function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;d.copy(b.matrix);b.matrix=d;delete c.animationCache}}},update:function(a){if(!1!==\nthis.isPlaying){this.currentTime+=a*this.timeScale;a=this.data.length;!0===this.loop&&this.currentTime>a&&(this.currentTime%=a);this.currentTime=Math.min(this.currentTime,a);a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a],d=this.data.hierarchy[a],e=d.keys,d=d.animationCache;if(e.length){var f=d.prevKey,g=d.nextKey;if(g.time<=this.currentTime){for(;g.time<this.currentTime&&g.index>f.index;)f=g,g=e[f.index+1];d.prevKey=f;d.nextKey=g}g.time>=this.currentTime?f.interpolate(g,this.currentTime):\nf.interpolate(g,g.time);this.data.hierarchy[a].node.updateMatrix();c.matrixWorldNeedsUpdate=!0}}}},getNextKeyWith:function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]},getPrevKeyWith:function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]}};\nTHREE.MorphAnimation=function(a){this.mesh=a;this.frames=a.morphTargetInfluences.length;this.currentTime=0;this.duration=1E3;this.loop=!0;this.currentFrame=this.lastFrame=0;this.isPlaying=!1};\nTHREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(a){if(!1!==this.isPlaying){this.currentTime+=a;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);a=this.duration/this.frames;var b=Math.floor(this.currentTime/a),c=this.mesh.morphTargetInfluences;b!=this.currentFrame&&(c[this.lastFrame]=0,c[this.currentFrame]=\n1,c[b]=0,this.lastFrame=this.currentFrame,this.currentFrame=b);c[b]=this.currentTime%a/a;c[this.lastFrame]=1-c[b]}}};\nTHREE.BoxGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,s){var u,v=h.widthSegments,x=h.heightSegments,D=e/2,w=f/2,y=h.vertices.length;if(\"x\"===a&&\"y\"===b||\"y\"===a&&\"x\"===b)u=\"z\";else if(\"x\"===a&&\"z\"===b||\"z\"===a&&\"x\"===b)u=\"y\",x=h.depthSegments;else if(\"z\"===a&&\"y\"===b||\"y\"===a&&\"z\"===b)u=\"x\",v=h.depthSegments;var A=v+1,E=x+1,G=e/v,F=f/x,z=new THREE.Vector3;z[u]=0<g?1:-1;for(e=0;e<E;e++)for(f=0;f<A;f++){var I=new THREE.Vector3;I[a]=(f*G-D)*c;I[b]=(e*F-w)*d;I[u]=g;h.vertices.push(I)}for(e=\n0;e<x;e++)for(f=0;f<v;f++)w=f+A*e,a=f+A*(e+1),b=f+1+A*(e+1),c=f+1+A*e,d=new THREE.Vector2(f/v,1-e/x),g=new THREE.Vector2(f/v,1-(e+1)/x),u=new THREE.Vector2((f+1)/v,1-(e+1)/x),D=new THREE.Vector2((f+1)/v,1-e/x),w=new THREE.Face3(w+y,a+y,c+y),w.normal.copy(z),w.vertexNormals.push(z.clone(),z.clone(),z.clone()),w.materialIndex=s,h.faces.push(w),h.faceVertexUvs[0].push([d,g,D]),w=new THREE.Face3(a+y,b+y,c+y),w.normal.copy(z),w.vertexNormals.push(z.clone(),z.clone(),z.clone()),w.materialIndex=s,h.faces.push(w),\nh.faceVertexUvs[0].push([g.clone(),u,D.clone()])}THREE.Geometry.call(this);this.type=\"BoxGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=f||1;var h=this;d=a/2;e=b/2;f=c/2;g(\"z\",\"y\",-1,-1,c,b,d,0);g(\"z\",\"y\",1,-1,c,b,-d,1);g(\"x\",\"z\",1,1,a,c,e,2);g(\"x\",\"z\",1,-1,a,c,-e,3);g(\"x\",\"y\",1,-1,a,b,f,4);g(\"x\",\"y\",-1,-1,a,b,-f,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;\nTHREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"CircleGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e,f=[];e=new THREE.Vector3;var g=new THREE.Vector2(.5,.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3,k=c+e/b*d;h.x=a*Math.cos(k);h.y=a*Math.sin(k);this.vertices.push(h);f.push(new THREE.Vector2((h.x/a+1)/2,(h.y/a+1)/2))}c=new THREE.Vector3(0,\n0,1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([f[e].clone(),f[e+1].clone(),g.clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;\nTHREE.CubeGeometry=function(a,b,c,d,e,f){THREE.warn(\"THREE.CubeGeometry has been renamed to THREE.BoxGeometry.\");return new THREE.BoxGeometry(a,b,c,d,e,f)};\nTHREE.CylinderGeometry=function(a,b,c,d,e,f,g,h){THREE.Geometry.call(this);this.type=\"CylinderGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;d=d||8;e=e||1;f=void 0!==f?f:!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var k=c/2,l,p,q=[],n=[];for(p=0;p<=e;p++){var t=[],r=[],s=p/e,u=s*(b-a)+a;for(l=0;l<=d;l++){var v=l/d,x=new THREE.Vector3;x.x=u*Math.sin(v*h+\ng);x.y=-s*c+k;x.z=u*Math.cos(v*h+g);this.vertices.push(x);t.push(this.vertices.length-1);r.push(new THREE.Vector2(v,1-s))}q.push(t);n.push(r)}c=(b-a)/c;for(l=0;l<d;l++)for(0!==a?(g=this.vertices[q[0][l]].clone(),h=this.vertices[q[0][l+1]].clone()):(g=this.vertices[q[1][l]].clone(),h=this.vertices[q[1][l+1]].clone()),g.setY(Math.sqrt(g.x*g.x+g.z*g.z)*c).normalize(),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*c).normalize(),p=0;p<e;p++){var t=q[p][l],r=q[p+1][l],s=q[p+1][l+1],u=q[p][l+1],v=g.clone(),x=g.clone(),\nD=h.clone(),w=h.clone(),y=n[p][l].clone(),A=n[p+1][l].clone(),E=n[p+1][l+1].clone(),G=n[p][l+1].clone();this.faces.push(new THREE.Face3(t,r,u,[v,x,w]));this.faceVertexUvs[0].push([y,A,G]);this.faces.push(new THREE.Face3(r,s,u,[x.clone(),D,w.clone()]));this.faceVertexUvs[0].push([A.clone(),E,G.clone()])}if(!1===f&&0<a)for(this.vertices.push(new THREE.Vector3(0,k,0)),l=0;l<d;l++)t=q[0][l],r=q[0][l+1],s=this.vertices.length-1,v=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),D=new THREE.Vector3(0,\n1,0),y=n[0][l].clone(),A=n[0][l+1].clone(),E=new THREE.Vector2(A.x,0),this.faces.push(new THREE.Face3(t,r,s,[v,x,D])),this.faceVertexUvs[0].push([y,A,E]);if(!1===f&&0<b)for(this.vertices.push(new THREE.Vector3(0,-k,0)),l=0;l<d;l++)t=q[e][l+1],r=q[e][l],s=this.vertices.length-1,v=new THREE.Vector3(0,-1,0),x=new THREE.Vector3(0,-1,0),D=new THREE.Vector3(0,-1,0),y=n[e][l+1].clone(),A=n[e][l].clone(),E=new THREE.Vector2(A.x,1),this.faces.push(new THREE.Face3(t,r,s,[v,x,D])),this.faceVertexUvs[0].push([y,\nA,E]);this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.ExtrudeGeometry=function(a,b){\"undefined\"!==typeof a&&(THREE.Geometry.call(this),this.type=\"ExtrudeGeometry\",a=a instanceof Array?a:[a],this.addShapeList(a,b),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;\nTHREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};\nTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||THREE.error(\"THREE.ExtrudeGeometry: vec does not exist\");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=1,d=a.x-b.x,e=a.y-b.y,f=c.x-a.x,g=c.y-a.y,h=d*d+e*e;if(1E-10<Math.abs(d*g-e*f)){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e/k;b=b.y+d/k;f=((c.x-g/l-h)*g-(c.y+f/l-b)*f)/(d*g-e*f);c=h+d*f-a.x;a=b+e*f-a.y;d=c*c+a*a;if(2>=d)return new THREE.Vector2(c,a);d=Math.sqrt(d/2)}else a=!1,1E-10<d?1E-10<f&&(a=!0):\n-1E-10>d?-1E-10>f&&(a=!0):Math.sign(e)==Math.sign(g)&&(a=!0),a?(c=-e,a=d,d=Math.sqrt(h)):(c=d,a=e,d=Math.sqrt(h/2));return new THREE.Vector2(c/d,a/d)}function e(a,b){var c,d;for(O=a.length;0<=--O;){c=O;d=O-1;0>d&&(d=a.length-1);for(var e=0,f=t+2*p,e=0;e<f;e++){var g=oa*e,h=oa*(e+1),k=b+c+g,g=b+d+g,l=b+d+h,h=b+c+h,k=k+U,g=g+U,l=l+U,h=h+U;I.faces.push(new THREE.Face3(k,g,h,null,null,x));I.faces.push(new THREE.Face3(g,l,h,null,null,x));k=D.generateSideWallUV(I,k,g,l,h);I.faceVertexUvs[0].push([k[0],\nk[1],k[3]]);I.faceVertexUvs[0].push([k[1],k[2],k[3]])}}}function f(a,b,c){I.vertices.push(new THREE.Vector3(a,b,c))}function g(a,b,c){a+=U;b+=U;c+=U;I.faces.push(new THREE.Face3(a,b,c,null,null,v));a=D.generateTopUV(I,a,b,c);I.faceVertexUvs[0].push(a)}var h=void 0!==b.amount?b.amount:100,k=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:k-2,p=void 0!==b.bevelSegments?b.bevelSegments:3,q=void 0!==b.bevelEnabled?b.bevelEnabled:!0,n=void 0!==b.curveSegments?b.curveSegments:\n12,t=void 0!==b.steps?b.steps:1,r=b.extrudePath,s,u=!1,v=b.material,x=b.extrudeMaterial,D=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,y,A,E;r&&(s=r.getSpacedPoints(t),u=!0,q=!1,w=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(r,t,!1),y=new THREE.Vector3,A=new THREE.Vector3,E=new THREE.Vector3);q||(l=k=p=0);var G,F,z,I=this,U=this.vertices.length,r=a.extractPoints(n),n=r.shape,M=r.holes;if(r=!THREE.Shape.Utils.isClockWise(n)){n=n.reverse();F=0;for(z=\nM.length;F<z;F++)G=M[F],THREE.Shape.Utils.isClockWise(G)&&(M[F]=G.reverse());r=!1}var H=THREE.Shape.Utils.triangulateShape(n,M),L=n;F=0;for(z=M.length;F<z;F++)G=M[F],n=n.concat(G);var P,N,R,V,J,oa=n.length,ja,ha=H.length,r=[],O=0;R=L.length;P=R-1;for(N=O+1;O<R;O++,P++,N++)P===R&&(P=0),N===R&&(N=0),r[O]=d(L[O],L[P],L[N]);var ca=[],ba,qa=r.concat();F=0;for(z=M.length;F<z;F++){G=M[F];ba=[];O=0;R=G.length;P=R-1;for(N=O+1;O<R;O++,P++,N++)P===R&&(P=0),N===R&&(N=0),ba[O]=d(G[O],G[P],G[N]);ca.push(ba);qa=\nqa.concat(ba)}for(P=0;P<p;P++){R=P/p;V=k*(1-R);N=l*Math.sin(R*Math.PI/2);O=0;for(R=L.length;O<R;O++)J=c(L[O],r[O],N),f(J.x,J.y,-V);F=0;for(z=M.length;F<z;F++)for(G=M[F],ba=ca[F],O=0,R=G.length;O<R;O++)J=c(G[O],ba[O],N),f(J.x,J.y,-V)}N=l;for(O=0;O<oa;O++)J=q?c(n[O],qa[O],N):n[O],u?(A.copy(w.normals[0]).multiplyScalar(J.x),y.copy(w.binormals[0]).multiplyScalar(J.y),E.copy(s[0]).add(A).add(y),f(E.x,E.y,E.z)):f(J.x,J.y,0);for(R=1;R<=t;R++)for(O=0;O<oa;O++)J=q?c(n[O],qa[O],N):n[O],u?(A.copy(w.normals[R]).multiplyScalar(J.x),\ny.copy(w.binormals[R]).multiplyScalar(J.y),E.copy(s[R]).add(A).add(y),f(E.x,E.y,E.z)):f(J.x,J.y,h/t*R);for(P=p-1;0<=P;P--){R=P/p;V=k*(1-R);N=l*Math.sin(R*Math.PI/2);O=0;for(R=L.length;O<R;O++)J=c(L[O],r[O],N),f(J.x,J.y,h+V);F=0;for(z=M.length;F<z;F++)for(G=M[F],ba=ca[F],O=0,R=G.length;O<R;O++)J=c(G[O],ba[O],N),u?f(J.x,J.y+s[t-1].y,s[t-1].x+V):f(J.x,J.y,h+V)}(function(){if(q){var a;a=0*oa;for(O=0;O<ha;O++)ja=H[O],g(ja[2]+a,ja[1]+a,ja[0]+a);a=t+2*p;a*=oa;for(O=0;O<ha;O++)ja=H[O],g(ja[0]+a,ja[1]+a,ja[2]+\na)}else{for(O=0;O<ha;O++)ja=H[O],g(ja[2],ja[1],ja[0]);for(O=0;O<ha;O++)ja=H[O],g(ja[0]+oa*t,ja[1]+oa*t,ja[2]+oa*t)}})();(function(){var a=0;e(L,a);a+=L.length;F=0;for(z=M.length;F<z;F++)G=M[F],e(G,a),a+=G.length})()};\nTHREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y),new THREE.Vector2(d.x,d.y)]},generateSideWallUV:function(a,b,c,d,e){a=a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return.01>Math.abs(b.y-c.y)?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(d.y,\n1-d.z),new THREE.Vector2(e.y,1-e.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type=\"ShapeGeometry\";!1===a instanceof Array&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};\nTHREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var k=e.shape,l=e.holes;if(!THREE.Shape.Utils.isClockWise(k))for(k=k.reverse(),e=0,f=l.length;e<f;e++)g=l[e],THREE.Shape.Utils.isClockWise(g)&&(l[e]=g.reverse());var p=THREE.Shape.Utils.triangulateShape(k,l);e=0;for(f=l.length;e<f;e++)g=l[e],\nk=k.concat(g);l=k.length;f=p.length;for(e=0;e<l;e++)g=k[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)l=p[e],k=l[0]+h,g=l[1]+h,l=l[2]+h,this.faces.push(new THREE.Face3(k,g,l,null,null,c)),this.faceVertexUvs[0].push(d.generateTopUV(this,k,g,l))};\nTHREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"LatheGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=b||12;c=c||0;d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var k=c+g*f*d,l=Math.cos(k),p=Math.sin(k),k=0,q=a.length;k<q;k++){var n=a[k],t=new THREE.Vector3;t.x=l*n.x-p*n.y;t.y=p*n.x+l*n.y;t.z=n.z;this.vertices.push(t)}c=a.length;g=0;for(h=b;g<h;g++)for(k=0,q=a.length-1;k<q;k++){b=p=k+c*g;d=p+c;var l=p+1+c,p=p+1,n=g*f,t=k*e,r=\nn+f,s=t+e;this.faces.push(new THREE.Face3(b,d,p));this.faceVertexUvs[0].push([new THREE.Vector2(n,t),new THREE.Vector2(r,t),new THREE.Vector2(n,s)]);this.faces.push(new THREE.Face3(d,l,p));this.faceVertexUvs[0].push([new THREE.Vector2(r,t),new THREE.Vector2(r,s),new THREE.Vector2(n,s)])}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;\nTHREE.PlaneGeometry=function(a,b,c,d){console.info(\"THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.\");THREE.Geometry.call(this);this.type=\"PlaneGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;\nTHREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"PlaneBufferGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,f=b/2;c=c||1;d=d||1;var g=c+1,h=d+1,k=a/c,l=b/d;b=new Float32Array(g*h*3);a=new Float32Array(g*h*3);for(var p=new Float32Array(g*h*2),q=0,n=0,t=0;t<h;t++)for(var r=t*l-f,s=0;s<g;s++)b[q]=s*k-e,b[q+1]=-r,a[q+2]=1,p[n]=s/c,p[n+1]=1-t/d,q+=3,n+=2;q=0;e=new (65535<b.length/3?Uint32Array:Uint16Array)(c*d*6);for(t=0;t<d;t++)for(s=\n0;s<c;s++)f=s+g*(t+1),h=s+1+g*(t+1),k=s+1+g*t,e[q]=s+g*t,e[q+1]=f,e[q+2]=k,e[q+3]=f,e[q+4]=h,e[q+5]=k,q+=6;this.addAttribute(\"index\",new THREE.BufferAttribute(e,1));this.addAttribute(\"position\",new THREE.BufferAttribute(b,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(a,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(p,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;\nTHREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"RingGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||0;b=b||50;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):8;var g,h=[],k=a,l=(b-a)/d;for(a=0;a<d+1;a++){for(g=0;g<c+1;g++){var p=new THREE.Vector3,q=e+g/c*f;p.x=k*Math.cos(q);p.y=k*Math.sin(q);this.vertices.push(p);h.push(new THREE.Vector2((p.x/b+1)/2,\n(p.y/b+1)/2))}k+=l}b=new THREE.Vector3(0,0,1);for(a=0;a<d;a++)for(e=a*(c+1),g=0;g<c;g++)f=q=g+e,l=q+c+1,p=q+c+2,this.faces.push(new THREE.Face3(f,l,p,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[l].clone(),h[p].clone()]),f=q,l=q+c+2,p=q+1,this.faces.push(new THREE.Face3(f,l,p,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[l].clone(),h[p].clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,k)};\nTHREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;\nTHREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type=\"SphereGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h,k,l=[],p=[];for(k=0;k<=c;k++){var q=[],n=[];for(h=0;h<=b;h++){var t=h/b,r=k/c,s=new THREE.Vector3;s.x=-a*Math.cos(d+t*e)*Math.sin(f+r*g);\ns.y=a*Math.cos(f+r*g);s.z=a*Math.sin(d+t*e)*Math.sin(f+r*g);this.vertices.push(s);q.push(this.vertices.length-1);n.push(new THREE.Vector2(t,1-r))}l.push(q);p.push(n)}for(k=0;k<c;k++)for(h=0;h<b;h++){d=l[k][h+1];e=l[k][h];f=l[k+1][h];g=l[k+1][h+1];var q=this.vertices[d].clone().normalize(),n=this.vertices[e].clone().normalize(),t=this.vertices[f].clone().normalize(),r=this.vertices[g].clone().normalize(),s=p[k][h+1].clone(),u=p[k][h].clone(),v=p[k+1][h].clone(),x=p[k+1][h+1].clone();Math.abs(this.vertices[d].y)===\na?(s.x=(s.x+u.x)/2,this.faces.push(new THREE.Face3(d,f,g,[q,t,r])),this.faceVertexUvs[0].push([s,v,x])):Math.abs(this.vertices[f].y)===a?(v.x=(v.x+x.x)/2,this.faces.push(new THREE.Face3(d,e,f,[q,n,t])),this.faceVertexUvs[0].push([s,u,v])):(this.faces.push(new THREE.Face3(d,e,g,[q,n,r])),this.faceVertexUvs[0].push([s,u,x]),this.faces.push(new THREE.Face3(e,f,g,[n.clone(),t,r.clone()])),this.faceVertexUvs[0].push([u.clone(),v,x.clone()]))}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,\na)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b);this.type=\"TextGeometry\"};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);\nTHREE.TextGeometry.prototype.constructor=THREE.TextGeometry;\nTHREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.type=\"TorusGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=c||8;d=d||6;e=e||2*Math.PI;for(var f=new THREE.Vector3,g=[],h=[],k=0;k<=c;k++)for(var l=0;l<=d;l++){var p=l/d*e,q=k/c*Math.PI*2;f.x=a*Math.cos(p);f.y=a*Math.sin(p);var n=new THREE.Vector3;n.x=(a+b*Math.cos(q))*Math.cos(p);n.y=(a+b*Math.cos(q))*Math.sin(p);n.z=b*Math.sin(q);this.vertices.push(n);g.push(new THREE.Vector2(l/\nd,k/c));h.push(n.clone().sub(f).normalize())}for(k=1;k<=c;k++)for(l=1;l<=d;l++)a=(d+1)*k+l-1,b=(d+1)*(k-1)+l-1,e=(d+1)*(k-1)+l,f=(d+1)*k+l,p=new THREE.Face3(a,b,f,[h[a].clone(),h[b].clone(),h[f].clone()]),this.faces.push(p),this.faceVertexUvs[0].push([g[a].clone(),g[b].clone(),g[f].clone()]),p=new THREE.Face3(b,e,f,[h[b].clone(),h[e].clone(),h[f].clone()]),this.faces.push(p),this.faceVertexUvs[0].push([g[b].clone(),g[e].clone(),g[f].clone()]);this.computeFaceNormals()};\nTHREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;\nTHREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);a*=b/c;b=Math.cos(a);f*=d*(2+b)*.5;g=d*(2+b)*g*.5;d=e*d*Math.sin(a)*.5;return new THREE.Vector3(f,g,d)}THREE.Geometry.call(this);this.type=\"TorusKnotGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,p:e,q:f,heightScale:g};a=a||100;b=b||40;c=c||64;d=d||8;e=e||2;f=f||3;g=g||1;for(var k=Array(c),l=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,n=0;n<c;++n){k[n]=\nArray(d);var t=n/c*2*e*Math.PI,r=h(t,f,e,a,g),t=h(t+.01,f,e,a,g);l.subVectors(t,r);p.addVectors(t,r);q.crossVectors(l,p);p.crossVectors(q,l);q.normalize();p.normalize();for(t=0;t<d;++t){var s=t/d*2*Math.PI,u=-b*Math.cos(s),s=b*Math.sin(s),v=new THREE.Vector3;v.x=r.x+u*p.x+s*q.x;v.y=r.y+u*p.y+s*q.y;v.z=r.z+u*p.z+s*q.z;k[n][t]=this.vertices.push(v)-1}}for(n=0;n<c;++n)for(t=0;t<d;++t)e=(n+1)%c,f=(t+1)%d,a=k[n][t],b=k[e][t],e=k[e][f],f=k[n][f],g=new THREE.Vector2(n/c,t/d),l=new THREE.Vector2((n+1)/c,\nt/d),p=new THREE.Vector2((n+1)/c,(t+1)/d),q=new THREE.Vector2(n/c,(t+1)/d),this.faces.push(new THREE.Face3(a,b,f)),this.faceVertexUvs[0].push([g,l,q]),this.faces.push(new THREE.Face3(b,e,f)),this.faceVertexUvs[0].push([l.clone(),p,q.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;\nTHREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"TubeGeometry\";this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;f=f||THREE.TubeGeometry.NoTaper;var g=[],h,k,l=b+1,p,q,n,t,r,s=new THREE.Vector3,u,v,x;u=new THREE.TubeGeometry.FrenetFrames(a,b,e);v=u.normals;x=u.binormals;this.tangents=u.tangents;this.normals=v;this.binormals=x;for(u=0;u<l;u++)for(g[u]=[],p=u/(l-1),r=a.getPointAt(p),h=v[u],k=x[u],n=c*f(p),p=0;p<d;p++)q=\np/d*2*Math.PI,t=-n*Math.cos(q),q=n*Math.sin(q),s.copy(r),s.x+=t*h.x+q*k.x,s.y+=t*h.y+q*k.y,s.z+=t*h.z+q*k.z,g[u][p]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1;for(u=0;u<b;u++)for(p=0;p<d;p++)f=e?(u+1)%b:u+1,l=(p+1)%d,a=g[u][p],c=g[f][p],f=g[f][l],l=g[u][l],s=new THREE.Vector2(u/b,p/d),v=new THREE.Vector2((u+1)/b,p/d),x=new THREE.Vector2((u+1)/b,(p+1)/d),h=new THREE.Vector2(u/b,(p+1)/d),this.faces.push(new THREE.Face3(a,c,l)),this.faceVertexUvs[0].push([s,v,h]),this.faces.push(new THREE.Face3(c,\nf,l)),this.faceVertexUvs[0].push([v.clone(),x,h.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};\nTHREE.TubeGeometry.FrenetFrames=function(a,b,c){var d=new THREE.Vector3,e=[],f=[],g=[],h=new THREE.Vector3,k=new THREE.Matrix4;b+=1;var l,p,q;this.tangents=e;this.normals=f;this.binormals=g;for(l=0;l<b;l++)p=l/(b-1),e[l]=a.getTangentAt(p),e[l].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;l=Math.abs(e[0].x);p=Math.abs(e[0].y);q=Math.abs(e[0].z);l<=a&&(a=l,d.set(1,0,0));p<=a&&(a=p,d.set(0,1,0));q<=a&&d.set(0,0,1);h.crossVectors(e[0],d).normalize();f[0].crossVectors(e[0],\nh);g[0].crossVectors(e[0],f[0]);for(l=1;l<b;l++)f[l]=f[l-1].clone(),g[l]=g[l-1].clone(),h.crossVectors(e[l-1],e[l]),1E-4<h.length()&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[l-1].dot(e[l]),-1,1)),f[l].applyMatrix4(k.makeRotationAxis(h,d))),g[l].crossVectors(e[l],f[l]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),l=1;l<b;l++)f[l].applyMatrix4(k.makeRotationAxis(e[l],d*l)),g[l].crossVectors(e[l],f[l])};\nTHREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);k.faces.push(d);u.copy(a).add(b).add(c).divideScalar(3);d=Math.atan2(u.z,-u.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function g(a,\nb){for(var c=Math.pow(2,b),d=e(k.vertices[a.a]),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),l=[],n=0;n<=c;n++){l[n]=[];for(var p=e(d.clone().lerp(h,n/c)),q=e(g.clone().lerp(h,n/c)),s=c-n,r=0;r<=s;r++)l[n][r]=0==r&&n==c?p:e(p.clone().lerp(q,r/s))}for(n=0;n<c;n++)for(r=0;r<2*(c-n)-1;r++)d=Math.floor(r/2),0==r%2?f(l[n][d+1],l[n+1][d],l[n][d]):f(l[n][d+1],l[n+1][d+1],l[n+1][d])}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y));return a.clone()}\nTHREE.Geometry.call(this);this.type=\"PolyhedronGeometry\";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;for(var k=this,l=0,p=a.length;l<p;l+=3)e(new THREE.Vector3(a[l],a[l+1],a[l+2]));a=this.vertices;for(var q=[],n=l=0,p=b.length;l<p;l+=3,n++){var t=a[b[l]],r=a[b[l+1]],s=a[b[l+2]];q[n]=new THREE.Face3(t.index,r.index,s.index,[t.clone(),r.clone(),s.clone()])}for(var u=new THREE.Vector3,l=0,p=q.length;l<p;l++)g(q[l],d);l=0;for(p=this.faceVertexUvs[0].length;l<p;l++)b=this.faceVertexUvs[0][l],\nd=b[0].x,a=b[1].x,q=b[2].x,n=Math.max(d,Math.max(a,q)),t=Math.min(d,Math.min(a,q)),.9<n&&.1>t&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>q&&(b[2].x+=1));l=0;for(p=this.vertices.length;l<p;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;\nTHREE.DodecahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};var c=(1+Math.sqrt(5))/2,d=1/c;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,\n11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b)};THREE.DodecahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;\nTHREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type=\"IcosahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type=\"OctahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;\nTHREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type=\"TetrahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;\nTHREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);this.type=\"ParametricGeometry\";this.parameters={func:a,slices:b,stacks:c};var d=this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,k,l,p=b+1;for(g=0;g<=c;g++)for(l=g/c,h=0;h<=b;h++)k=h/b,k=a(k,l),d.push(k);var q,n,t,r;for(g=0;g<c;g++)for(h=0;h<b;h++)a=g*p+h,d=g*p+h+1,l=(g+1)*p+h+1,k=(g+1)*p+h,q=new THREE.Vector2(h/b,g/c),n=new THREE.Vector2((h+1)/b,g/c),t=new THREE.Vector2((h+1)/b,(g+1)/c),r=new THREE.Vector2(h/b,(g+1)/c),e.push(new THREE.Face3(a,\nd,k)),f.push([q,n,r]),e.push(new THREE.Face3(d,l,k)),f.push([n.clone(),t,r.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;\nTHREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.BufferAttribute(b,3));a.addAttribute(\"color\",new THREE.BufferAttribute(c,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,a,b,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.AxisHelper.prototype.constructor=THREE.AxisHelper;\nTHREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var b=new THREE.CylinderGeometry(0,.5,1,5,1);b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));return function(c,d,e,f,g,h){THREE.Object3D.call(this);void 0===f&&(f=16776960);void 0===e&&(e=1);void 0===g&&(g=.2*e);void 0===h&&(h=.2*g);this.position.copy(d);this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=!1;this.add(this.line);\nthis.cone=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:f}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(c);this.setLength(e,g,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;\nTHREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,a-b,1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};\nTHREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a);this.cone.material.color.set(a)};THREE.BoxHelper=function(a){var b=new THREE.BufferGeometry;b.addAttribute(\"position\",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;\nTHREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,b=b.boundingBox.max,d=this.geometry.attributes.position.array;d[0]=b.x;d[1]=b.y;d[2]=b.z;d[3]=c.x;d[4]=b.y;d[5]=b.z;d[6]=c.x;d[7]=b.y;d[8]=b.z;d[9]=c.x;d[10]=c.y;d[11]=b.z;d[12]=c.x;d[13]=c.y;d[14]=b.z;d[15]=b.x;d[16]=c.y;d[17]=b.z;d[18]=b.x;d[19]=c.y;d[20]=b.z;d[21]=b.x;d[22]=b.y;d[23]=b.z;d[24]=b.x;d[25]=b.y;d[26]=c.z;d[27]=c.x;d[28]=b.y;d[29]=c.z;d[30]=c.x;d[31]=b.y;\nd[32]=c.z;d[33]=c.x;d[34]=c.y;d[35]=c.z;d[36]=c.x;d[37]=c.y;d[38]=c.z;d[39]=b.x;d[40]=c.y;d[41]=c.z;d[42]=b.x;d[43]=c.y;d[44]=c.z;d[45]=b.x;d[46]=b.y;d[47]=c.z;d[48]=b.x;d[49]=b.y;d[50]=b.z;d[51]=b.x;d[52]=b.y;d[53]=c.z;d[54]=c.x;d[55]=b.y;d[56]=b.z;d[57]=c.x;d[58]=b.y;d[59]=c.z;d[60]=c.x;d[61]=c.y;d[62]=b.z;d[63]=c.x;d[64]=c.y;d[65]=c.z;d[66]=b.x;d[67]=c.y;d[68]=b.z;d[69]=b.x;d[70]=c.y;d[71]=c.z;this.geometry.attributes.position.needsUpdate=!0;this.geometry.computeBoundingSphere();this.matrix=a.matrixWorld;\nthis.matrixAutoUpdate=!1};THREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};\nTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b(\"n1\",\"n2\",16755200);b(\"n2\",\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);\nb(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);THREE.Line.call(this,d,e,THREE.LinePieces);this.camera=a;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};\nTHREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;\nTHREE.CameraHelper.prototype.update=function(){var a,b,c=new THREE.Vector3,d=new THREE.Camera,e=function(e,g,h,k){c.set(g,h,k).unproject(d);e=b[e];if(void 0!==e)for(g=0,h=e.length;g<h;g++)a.vertices[e[g]].copy(c)};return function(){a=this.geometry;b=this.pointMap;d.projectionMatrix.copy(this.camera.projectionMatrix);e(\"c\",0,0,-1);e(\"t\",0,0,1);e(\"n1\",-1,-1,-1);e(\"n2\",1,-1,-1);e(\"n3\",-1,1,-1);e(\"n4\",1,1,-1);e(\"f1\",-1,-1,1);e(\"f2\",1,-1,1);e(\"f3\",-1,1,1);e(\"f4\",1,1,1);e(\"u1\",.7,1.1,-1);e(\"u2\",-.7,1.1,\n-1);e(\"u3\",0,2,-1);e(\"cf1\",-1,0,1);e(\"cf2\",1,0,1);e(\"cf3\",0,-1,1);e(\"cf4\",0,1,1);e(\"cn1\",-1,0,-1);e(\"cn2\",1,0,-1);e(\"cn3\",0,-1,-1);e(\"cn4\",0,1,-1);a.verticesNeedUpdate=!0}}();\nTHREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(c,d);this.add(this.lightPlane);\nc=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3);d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(c,d);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;\nTHREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};\nTHREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(c);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();\nTHREE.EdgesHelper=function(a,b,c){b=void 0!==b?b:16777215;c=Math.cos(THREE.Math.degToRad(void 0!==c?c:1));var d=[0,0],e={},f=function(a,b){return a-b},g=[\"a\",\"b\",\"c\"],h=new THREE.BufferGeometry,k;a.geometry instanceof THREE.BufferGeometry?(k=new THREE.Geometry,k.fromBufferGeometry(a.geometry)):k=a.geometry.clone();k.mergeVertices();k.computeFaceNormals();var l=k.vertices;k=k.faces;for(var p=0,q=0,n=k.length;q<n;q++)for(var t=k[q],r=0;3>r;r++){d[0]=t[g[r]];d[1]=t[g[(r+1)%3]];d.sort(f);var s=d.toString();\nvoid 0===e[s]?(e[s]={vert1:d[0],vert2:d[1],face1:q,face2:void 0},p++):e[s].face2=q}d=new Float32Array(6*p);f=0;for(s in e)if(g=e[s],void 0===g.face2||k[g.face1].normal.dot(k[g.face2].normal)<=c)p=l[g.vert1],d[f++]=p.x,d[f++]=p.y,d[f++]=p.z,p=l[g.vert2],d[f++]=p.x,d[f++]=p.y,d[f++]=p.z;h.addAttribute(\"position\",new THREE.BufferAttribute(d,3));THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:b}),THREE.LinePieces);this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};\nTHREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;\nTHREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=new THREE.Geometry;c=0;for(var e=this.object.geometry.faces.length;c<e;c++)b.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:a,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;\nTHREE.FaceNormalsHelper.prototype.update=function(){var a=this.geometry.vertices,b=this.object,c=b.geometry.vertices,d=b.geometry.faces,e=b.matrixWorld;b.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(e);for(var f=b=0,g=d.length;b<g;b++,f+=2){var h=d[b];a[f].copy(c[h.a]).add(c[h.b]).add(c[h.c]).divideScalar(3).applyMatrix4(e);a[f+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(a[f])}this.geometry.verticesNeedUpdate=!0;return this};\nTHREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var e=-a;e<=a;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};\nTHREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var d=0;8>d;d++)c.faces[d].color=this.colors[4>d?0:1];d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,d);this.add(this.lightSphere);\nthis.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};\nTHREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();\nTHREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;\nTHREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};\nTHREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)));c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,b,c,THREE.LinePieces);this.root=a;this.matrix=a.matrixWorld;\nthis.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b};\nTHREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var f=this.bones[e];f.parent instanceof THREE.Bone&&(c.multiplyMatrices(b,f.matrixWorld),a.vertices[d].setFromMatrixPosition(c),c.multiplyMatrices(b,f.parent.matrixWorld),a.vertices[d+1].setFromMatrixPosition(c),d+=2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};\nTHREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.CylinderGeometry(0,1,1,8,1,!0);a.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var b=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(a,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};\nTHREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();\nTHREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;b=void 0!==c?c:16711680;d=void 0!==d?d:1;c=new THREE.Geometry;a=a.geometry.faces;for(var e=0,f=a.length;e<f;e++)for(var g=0,h=a[e].vertexNormals.length;g<h;g++)c.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;\nTHREE.VertexNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=[\"a\",\"b\",\"c\",\"d\"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,k=0,l=f.length;k<l;k++)for(var p=f[k],q=0,n=p.vertexNormals.length;q<n;q++){var t=p.vertexNormals[q];d[h].copy(e[p[a[q]]]).applyMatrix4(g);b.copy(t).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);\nb.add(d[h]);h+=1;d[h].copy(b);h+=1}this.geometry.verticesNeedUpdate=!0;return this}}();\nTHREE.VertexTangentsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;b=void 0!==c?c:255;d=void 0!==d?d:1;c=new THREE.Geometry;a=a.geometry.faces;for(var e=0,f=a.length;e<f;e++)for(var g=0,h=a[e].vertexTangents.length;g<h;g++)c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.VertexTangentsHelper.prototype.constructor=THREE.VertexTangentsHelper;\nTHREE.VertexTangentsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=[\"a\",\"b\",\"c\",\"d\"];this.object.updateMatrixWorld(!0);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,k=0,l=f.length;k<l;k++)for(var p=f[k],q=0,n=p.vertexTangents.length;q<n;q++){var t=p.vertexTangents[q];d[h].copy(e[p[a[q]]]).applyMatrix4(g);b.copy(t).transformDirection(g).multiplyScalar(this.size);b.add(d[h]);h+=1;d[h].copy(b);\nh+=1}this.geometry.verticesNeedUpdate=!0;return this}}();\nTHREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215,d=[0,0],e={},f=function(a,b){return a-b},g=[\"a\",\"b\",\"c\"],h=new THREE.BufferGeometry;if(a.geometry instanceof THREE.Geometry){for(var k=a.geometry.vertices,l=a.geometry.faces,p=0,q=new Uint32Array(6*l.length),n=0,t=l.length;n<t;n++)for(var r=l[n],s=0;3>s;s++){d[0]=r[g[s]];d[1]=r[g[(s+1)%3]];d.sort(f);var u=d.toString();void 0===e[u]&&(q[2*p]=d[0],q[2*p+1]=d[1],e[u]=!0,p++)}d=new Float32Array(6*p);n=0;for(t=p;n<t;n++)for(s=0;2>s;s++)p=\nk[q[2*n+s]],g=6*n+3*s,d[g+0]=p.x,d[g+1]=p.y,d[g+2]=p.z;h.addAttribute(\"position\",new THREE.BufferAttribute(d,3))}else if(a.geometry instanceof THREE.BufferGeometry){if(void 0!==a.geometry.attributes.index){k=a.geometry.attributes.position.array;t=a.geometry.attributes.index.array;l=a.geometry.drawcalls;p=0;0===l.length&&(l=[{count:t.length,index:0,start:0}]);for(var q=new Uint32Array(2*t.length),r=0,v=l.length;r<v;++r)for(var s=l[r].start,u=l[r].count,g=l[r].index,n=s,x=s+u;n<x;n+=3)for(s=0;3>s;s++)d[0]=\ng+t[n+s],d[1]=g+t[n+(s+1)%3],d.sort(f),u=d.toString(),void 0===e[u]&&(q[2*p]=d[0],q[2*p+1]=d[1],e[u]=!0,p++);d=new Float32Array(6*p);n=0;for(t=p;n<t;n++)for(s=0;2>s;s++)g=6*n+3*s,p=3*q[2*n+s],d[g+0]=k[p],d[g+1]=k[p+1],d[g+2]=k[p+2]}else for(k=a.geometry.attributes.position.array,p=k.length/3,q=p/3,d=new Float32Array(6*p),n=0,t=q;n<t;n++)for(s=0;3>s;s++)g=18*n+6*s,q=9*n+3*s,d[g+0]=k[q],d[g+1]=k[q+1],d[g+2]=k[q+2],p=9*n+(s+1)%3*3,d[g+3]=k[p],d[g+4]=k[p+1],d[g+5]=k[p+2];h.addAttribute(\"position\",new THREE.BufferAttribute(d,\n3))}THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces);this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;\nTHREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation(\"__default\",0,c-1,c/1);this.setAnimationWeight(\"__default\",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;\nTHREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var k=h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};\nTHREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};\nTHREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):THREE.warn(\"THREE.MorphBlendMesh: animation[\"+a+\"] undefined in .playAnimation()\")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};\nTHREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;\nf!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n],[43]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.14119619f1da17c7cd3c.js","import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nVue.use(Vuex);\r\nexport default new Vuex.Store({\r\n\tstate: {\r\n\t\tnav: {\r\n\t\t\tvisible: false\r\n\t\t},\r\n\t\tlang: 'ru',\r\n\t\tcurrentPath: '/',\r\n\t\t//preloaderDone: false\r\n\t\tpreloaderDone: true, //for dev purposes\r\n\t\ttransitionName: 'fade',\r\n    scrollIsDone: true,\r\n\t\tcurrentPageSlide: 1,\r\n\t},\r\n\tmutations: {\r\n\t\tsetLang(state, lang){\r\n\t\t\tstate.lang = lang;\r\n\t\t}\r\n\t},\r\n\tactions: {\r\n\t\tincrement(context, lang){\r\n\t\t\tcontext.commit('setLang', lang);\r\n\t\t}\r\n\t}\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-09516374\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../../assets/style/image_block.sass\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./image_block.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-09516374\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./image_block.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/global/image_block.vue\n// module id = 4\n// module chunks = 14","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-4959ffbf\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../../assets/style/info_devided.sass\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./info_divided.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4959ffbf\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./info_divided.vue\"),\n  /* scopeId */\n  \"data-v-4959ffbf\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/global/info_divided.vue\n// module id = 5\n// module chunks = 14","import store from './store'\r\nexport default {\r\n  getPageInfo(){\r\n    fetch('http://farnosovadmin2.krokus.info/page/home')\r\n      .then((response) => {console.log(response)});\r\n  },\r\n  onePageScroll(direction){\r\n    let currentPos,\r\n        windowHeight,\r\n        stepSize,\r\n        step,\r\n        finalPos,\r\n        i,\r\n        scrollIime,\r\n        stepsNumber,\r\n        stepsInterval;\r\n    scrollIime = 500; //set scroll time to 1 second\r\n    windowHeight = window.innerHeight;\r\n    stepSize = 10; //set step size to 5 px\r\n    store.state.scrollIsDone = false;\r\n    currentPos = window.scrollY;\r\n    stepsNumber = Math.floor(windowHeight / stepSize);\r\n    stepsInterval = Math.floor(scrollIime / stepsNumber);\r\n    if (direction =='up') {\r\n      finalPos = currentPos - windowHeight;\r\n      step = (-1)*stepSize;\r\n    }\r\n    else if (direction == 'down') {\r\n      finalPos = currentPos + windowHeight;\r\n      step = stepSize;\r\n    }\r\n    if ((finalPos + windowHeight) < this.documentHeight()) {\r\n      i = setInterval(function () {\r\n        window.scroll(0, currentPos + step);\r\n        currentPos = window.scrollY;\r\n        if ((currentPos == finalPos) || (i > stepsNumber)) {\r\n          window.clearInterval(i);\r\n          store.state.scrollIsDone = true;\r\n        }\r\n      }, stepsInterval);\r\n    }\r\n    else store.state.scrollIsDone = true;\r\n  },\r\n  documentHeight(){\r\n    var body = document.body,\r\n        html = document.documentElement;\r\n    return Math.max( body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/functions.js","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport store from './../store'\r\nimport Home from '@/components/Home.vue';\r\n\r\n//lazy load\r\nconst Idar = resolve => {\r\n\trequire.ensure(['@/components/Idar.vue'], () => {\r\n\t\tresolve(require('@/components/Idar.vue'));\r\n\t});\r\n};\r\nconst Fashion = resolve => {\r\n\trequire.ensure(['@/components/Fashion.vue'], () => {\r\n\t\tresolve(require('@/components/Fashion.vue'));\r\n\t});\r\n};\r\nconst Gallery_fashion = resolve => {\r\n\trequire.ensure(['@/components/gallery/Gallery_fashion.vue'], () => {\r\n\t\tresolve(require('@/components/gallery/Gallery_fashion.vue'));\r\n\t});\r\n};\r\nconst Services = resolve => {\r\n\trequire.ensure(['@/components/Services.vue'], () => {\r\n\t\tresolve(require('@/components/Services.vue'));\r\n\t});\r\n};\r\nconst Farnosova = resolve => {\r\n\trequire.ensure(['@/components/Farnosova.vue'], () => {\r\n\t\tresolve(require('@/components/Farnosova.vue'));\r\n\t});\r\n};\r\nconst Contact = resolve => {\r\n\trequire.ensure(['@/components/Contact.vue'], () => {\r\n\t\tresolve(require('@/components/Contact.vue'));\r\n\t});\r\n};\r\nconst Page_404 = resolve => {\r\n\trequire.ensure(['@/components/Page_404.vue'], () => {\r\n\t\tresolve(require('@/components/Page_404.vue'));\r\n\t});\r\n};\r\nconst Gallery_lastest = resolve => {\r\n\trequire.ensure(['@/components/gallery/Gallery_lastest.vue'], () => {\r\n\t\tresolve(require('@/components/gallery/Gallery_lastest.vue'));\r\n\t});\r\n};\r\nconst Gallery_idar_project = resolve => {\r\n\trequire.ensure(['@/components/gallery/Gallery_idar-project.vue'], () => {\r\n\t\tresolve(require('@/components/gallery/Gallery_idar-project.vue'));\r\n\t});\r\n};\r\n\r\nconst Idar_items = resolve => {\r\n\trequire.ensure(['@/components/Idar_items.vue'], () => {\r\n\t\tresolve(require('@/components/Idar_items.vue'));\r\n\t});\r\n};\r\n\r\nconst Videos = resolve => {\r\n\trequire.ensure(['@/components/Videos.vue'], () => {\r\n\t\tresolve(require('@/components/Videos.vue'));\r\n\t});\r\n};\r\n\r\nconst Media = resolve => {\r\n\trequire.ensure(['@/components/Media.vue'], () => {\r\n\t\tresolve(require('@/components/Media.vue'));\r\n\t});\r\n};\r\n\r\nconst Styleguide = resolve => {\r\n  require.ensure(['@/components/Styleguide.vue'], () => {\r\n    resolve(require('@/components/Styleguide.vue'));\r\n  });\r\n};\r\n\r\nconst Test = resolve => {\r\n  require.ensure(['@/components/Test.vue'], () => {\r\n    resolve(require('@/components/Test.vue'));\r\n  });\r\n};\r\n\r\nVue.use(Router);\r\n\r\nexport default new Router({\r\n\tmode: 'history',\r\n  \troutes: [\r\n\t\t{path: '/', redirect: store.state.lang},\r\n\t\t{path: '/:lang/', component: Home},\r\n\t\t{path: '/:lang/idar', component: Idar},\r\n\t\t{path: '/:lang/idar/:filter', component: Idar_items},\r\n\t\t{path: '/:lang/fashion', component: Fashion},\r\n\t\t{path: '/:lang/fashion/videos', component: Videos},\r\n\t\t{path: '/:lang/fashion/:project_id', component: Gallery_fashion},\r\n\t\t{path: '/:lang/services', component: Services},\r\n\t\t{path: '/:lang/farnosova', component: Farnosova},\r\n\t\t{path: '/:lang/contact', component: Contact},\r\n\t\t{path: '/:lang/gallery/lastest/:gallery_category', component: Gallery_lastest},\r\n\t\t{path: '/:lang/gallery/idar/:project_id', component: Gallery_idar_project},\r\n\t\t{path: '/:lang/media', component: Media},\r\n    {path: '/:lang/test', component: Test},\r\n\t\t{path: '/:lang/styleguide', component: Styleguide},\r\n\t\t{path: '/:lang/*', component: Page_404},\r\n  ]\r\n})\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-2f6b98c2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./assets/style/transitions.sass\")\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-2f6b98c2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./assets/libs/css/bootstrap.css\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2f6b98c2\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 9\n// module chunks = 14","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1e80c0e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../../assets/style/banner.sass\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./banner.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1e80c0e8\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./banner.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/idar/banner.vue\n// module id = 11\n// module chunks = 14","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1a5da219\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../../assets/style/home-gallery.sass\")\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1a5da219\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../../assets/style/styleguide.sass\")\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1a5da219\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./../../assets/libs/css/normalize.css\")\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1a5da219\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./../../assets/libs/css/demo.css\")\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1a5da219\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./../../assets/libs/css/mirror.css\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./gallery.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1a5da219\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./gallery.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/home/gallery.vue\n// module id = 13\n// module chunks = 14","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-494924eb\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../../assets/style/contact.sass\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./contact.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-494924eb\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./contact.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/global/contact.vue\n// module id = 28\n// module chunks = 14","<template>\r\n  <div>\r\n    <app-preloader v-if=\"!this.$store.state.preloaderDone\"></app-preloader>\r\n    <app-nav-global v-if=\"this.$store.state.preloaderDone\"></app-nav-global>\r\n    <!--<h1 class=\"white\">{{this.$store.state.scrollIsDone}}</h1>-->\r\n    <transition\r\n      :name=\"$store.state.transitionName\"\r\n      @after-enter=\"$store.state.transitionName = 'fade'\">\r\n      <router-view v-if=\"this.$store.state.preloaderDone\"></router-view>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import preloader from './components/global/preloader.vue';\r\n  import nav_global from './components/global/nav_global.vue';\r\n  import f from './functions'\r\n  export default {\r\n    data(){\r\n      return {\r\n        transitionName: ''\r\n      }\r\n    },\r\n    name: 'app',\r\n    components: {\r\n      appNavGlobal: nav_global,\r\n      appPreloader: preloader\r\n    },\r\n    methods: {\r\n      handleScroll(e){\r\n        let scrollDirection;\r\n        e.wheelDelta < 0 ? scrollDirection = 'down' : scrollDirection = 'up';\r\n        if (typeof (this.$store.state.scrollIsDone) == 'undefined') this.$store.state.scrollIsDone = true;\r\n        if(this.$store.state.scrollIsDone) f.onePageScroll(scrollDirection);\r\n      }\r\n    },\r\n    mounted(){\r\n      //don't need to remove these event listeners\r\n//      window.addEventListener('mousewheel', function(e){\r\n//        e.preventDefault();\r\n//        this.handleScroll(e);\r\n//      }.bind(this));\r\n    },\r\n    watch:{\r\n      '$store.state.scrollIsDone'(isDone){\r\n        if( isDone ) { //enter animations\r\n          this.$store.state.currentPageSlide = (window.scrollY / window.innerHeight) + 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style src=\"./assets/style/transitions.sass\" lang=\"sass\"></style>\r\n<style src=\"./assets/libs/css/bootstrap.css\"></style>\n\n\n// WEBPACK FOOTER //\n// App.vue?165204c7","<template key=\"home\">\r\n  <div class=\"page page_home page_no-pagination\" >\r\n    <app-gallery>\r\n    </app-gallery>\r\n    <app-info :class=\"$store.state.currentPageSlide == 2?'current':''\" first=\"text\">\r\n      <h4 slot=\"text\" class=\"title\">{{page_home[$route.params.lang]['info_1']['title']}}</h4>\r\n      <p slot=\"text\" class=\"description\">{{page_home[$route.params.lang]['info_1']['description']}}</p>\r\n      <a class=\"button__full button-border__regular\" slot=\"text\"\r\n         @click=\"navigateToFarnosova\">{{page_home[$route.params.lang]['info_1']['button']}}</a>\r\n      <div slot=\"image\">\r\n        <farnosova></farnosova>\r\n      </div>\r\n    </app-info>\r\n    <app-info :class=\"$store.state.currentPageSlide == 3?'current':''\" first=\"image\">\r\n      <h4 slot=\"text\" class=\"title\">{{page_home[$route.params.lang]['info_2']['title']}}</h4>\r\n      <a slot=\"text\" class=\"button_arrow button_arrow__big white\" @click=\"navigateToLastest\">\r\n        <svg version=\"1.1\" class=\"svg-line\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n           viewBox=\"0 0 150 5\" style=\"enable-background:new 0 0 151 7;\" xml:space=\"preserve\">\r\n           <polygon class=\"svg_path-line\" points=\"151,3.5 147,0 147,3 0,3 0,4 147,4 147,7  \"/>\r\n        </svg>\r\n      </a>\r\n      <div slot=\"image\">\r\n        <lastestProjectsImage></lastestProjectsImage>\r\n      </div>\r\n    </app-info>\r\n    <app-info first=\"text\">\r\n      <h4 slot=\"text\" class=\"title\">{{page_home[$route.params.lang]['info_3']['title']}}</h4>\r\n      <p slot=\"text\" class=\"description\">{{page_home[$route.params.lang]['info_3']['description']}}</p>\r\n      <a slot=\"text\" class=\" button_arrow button_arrow__big white\" @click=\"navigateToMedia\">\r\n        <svg version=\"1.1\" class=\"svg-line\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n            viewBox=\"0 0 150 5\" style=\"enable-background:new 0 0 151 7;\" xml:space=\"preserve\">\r\n            <polygon class=\"svg_path-line\" points=\"151,3.5 147,0 147,3 0,3 0,4 147,4 147,7  \"/>\r\n        </svg>\r\n      </a>\r\n      <div slot=\"image\">\r\n        <!--<img src=\"/static/images/home__info-block_3.jpg\" alt=\"\">-->\r\n        <app-block-image\r\n          class=\"bg-image image\"\r\n          :bg_image=\"page_home[$route.params.lang]['info_3']['image']\"\r\n        ></app-block-image>\r\n      </div>\r\n    </app-info>\r\n    <app-contact></app-contact>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import gallery from './home/gallery.vue';\r\n  import banner from './idar/banner.vue';\r\n  import info from './global/info_divided.vue';\r\n  import farnosova from './home/farnosova.vue';\r\n  import lastestProjectsImage from './home/lastestProjectsImage.vue';\r\n  import contact from './global/contact.vue';\r\n  import block_image from './global/image_block.vue';\r\n  import functions from './../functions'\r\n  export default {\r\n    data(){\r\n      return {\r\n        one_page_scroll: {\r\n          enable: true,\r\n          navigation: true\r\n        },\r\n        page_home: {\r\n          ru: {\r\n            gallery: {\r\n              button_idar: 'Дизайн интерьера',\r\n              button_fashion: 'Мода'\r\n            },\r\n            info_1: {\r\n              title: 'Наталья Фарносова',\r\n              description: 'Я – архитектор Наталья Фарносова. Свою трудовую деятельность я начала будучи студенткой архитектурного факультета Киевского инженерно-строительного института.',\r\n              button: 'подробнее',\r\n              image: '/static/img/Home_about.png'\r\n            },\r\n            info_2: {\r\n              title: 'Последние реализованные проекты',\r\n              image: '/static/img/Home_lastwork.png'\r\n            },\r\n            info_3: {\r\n              title: 'СМИ и публикации',\r\n              description: 'Публикации и видео с участием дизайнера',\r\n              image: '/static/img/Home_news.png'\r\n            }\r\n          },\r\n          en: {\r\n            gallery: {\r\n              button_idar: 'Interiour design',\r\n              button_fashion: 'Fashion'\r\n            },\r\n            info_1: {\r\n              title: 'Natalya Farnosova',\r\n              description: 'lorem ipsum',\r\n              button: 'more info'\r\n            },\r\n            info_2: {\r\n              title: 'Lastest projects',\r\n            },\r\n            info_3: {\r\n              title: 'Media',\r\n              description: 'lorem'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    components: {\r\n      appBlockImage: block_image,\r\n      appGallery: gallery,\r\n      appInfo: info,\r\n      farnosova,\r\n      lastestProjectsImage,\r\n      appIdarGallery: contact,\r\n      appContact: contact\r\n    },\r\n    methods: {\r\n      navigateToFarnosova(){\r\n        this.$router.push('/' + this.$route.params.lang + '/farnosova');\r\n      },\r\n      navigateToLastest(){\r\n        this.$router.push('/' + this.$route.params.lang + '/gallery/lastest/idar');\r\n      },\r\n      navigateToMedia(){\r\n        this.$router.push('/' + this.$route.params.lang + '/media');\r\n      }\r\n    },\r\n    created(){\r\n      //functions.getPageInfo();\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"sass\" src=\"./../assets/style/styleguide.sass\"></style>\r\n<style lang=\"sass\" src=\"./../assets/style/global.sass\"></style>\r\n<style lang=\"sass\" src=\"./../assets/style/page_home.sass\"></style>\n\n\n// WEBPACK FOOTER //\n// Home.vue?64f2dd9a","<template>\r\n  <div>\r\n    <app-info first=\"image\">\r\n      <h4 slot=\"text\" class=\"title\">{{contact_info[$route.params.lang]['title']}}</h4>\r\n      <div slot=\"text\" class=\"description contacts\" v-html=\"contact_info[$route.params.lang]['description']\"></div>\r\n      <a class=\"button__full button-border__regular\" slot=\"text\"\r\n         @click=\"goToContact\">{{contact_info[$route.params.lang]['button']}}</a>\r\n      <div slot=\"image\">\r\n        <app-block-image\r\n          class=\"bg-image image\"\r\n          :bg_image=\"contact_info[$route.params.lang]['image']\"\r\n        ></app-block-image>\r\n      </div>\r\n    </app-info>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import info from './info_divided.vue';\r\n  import block_image from '../global/image_block.vue'\r\n\r\n  export default {\r\n    data(){\r\n      return {\r\n        contact_info: {\r\n          ru: {\r\n            image: '/static/img/Home_contact.png',\r\n            title: 'Контакты',\r\n            description: '<p>+38 (044) 232 4242    +38 (067) 226 3377</p><p>г.Киев, ул Шелковичная 36/7</p><p>f-style@ukr.net</p>',\r\n            button: 'подробнее'\r\n          },\r\n          en: {\r\n            title: 'Contacts',\r\n            description: '<p>+38 (044) 232 4242    +38 (067) 226 3377</p><p>Shelkovichna str. Kyiv 36/7</p><p>f-style@ukr.net</p>',\r\n            button: 'Details'\r\n          },\r\n        }\r\n      }\r\n    },\r\n    mounted(){\r\n      $('.match-height').matchHeight({byRow: true});\r\n    },\r\n    components: {\r\n      appInfo: info,\r\n      appBlockImage: block_image\r\n    },\r\n    methods: {\r\n      goToContact(){\r\n        this.$router.push('/' + this.$route.params.lang + '/contact');\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"sass\" src=\"./../../assets/style/contact.sass\"></style>\n\n\n// WEBPACK FOOTER //\n// contact.vue?041b268b","<template>\r\n  <div\r\n    key=\"initial\"\r\n    :title=\"alt\"\r\n    class=\"block_image\"\r\n    :style=\"staticStyle\">\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n      dynamicStyle: {},\r\n    }\r\n  },\r\n  props: {\r\n    bg_image: {\r\n      type: String,\r\n      default: \"/static/images/image_none.png\"\r\n    },\r\n    alt: {\r\n      type: String,\r\n      default: \"FARNOSOVA\"\r\n    },\r\n  },\r\n  computed: {\r\n    staticStyle(){\r\n      let v = this;\r\n      let s = {\r\n        backgroundImage: 'url(' + v.bg_image + ')',\r\n      };\r\n      return s;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"sass\" src=\"./../../assets/style/image_block.sass\"></style>\r\n\n\n\n// WEBPACK FOOTER //\n// image_block.vue?3534130a","<template>\r\n  <div class=\"col-xs-12 info_divided\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6 col-lg-6 info-block match-height\" :class=\"{'col-sm-push-6': (first == 'text')}\">\r\n        <slot name=\"image\"></slot>\r\n      </div>\r\n      <div class=\"col-sm-6 col-lg-3 col-lg-offset-1 info-block match-height\"\r\n           :class=\"{'col-sm-pull-6': (first == 'text')}\">\r\n        <div class=\"table h100\">\r\n          <div class=\"table-cell vam\">\r\n            <slot name=\"text\"></slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: {\r\n      first: {\r\n        type: String,\r\n        default: \"image\"\r\n      }\r\n    },\r\n  }\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"sass\" src=\"./../../assets/style/info_devided.sass\" scoped></style>\n\n\n// WEBPACK FOOTER //\n// info_divided.vue?62bca89f","<template>\r\n  <nav\r\n    class=\" navbar-default\"\r\n    id=\"nav_global\"\r\n    v-if=\"$route.params.lang\">\r\n    <div class=\"container-fluid\">\r\n      <!-- Brand and toggle get grouped for better mobile display -->\r\n      <!--<div class=\"navbar-header\">-->\r\n      <!--<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\"-->\r\n      <!--data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">-->\r\n      <!--<span class=\"sr-only\">Toggle navigation</span>-->\r\n      <!--<span class=\"icon-bar\"></span>-->\r\n      <!--<span class=\"icon-bar\"></span>-->\r\n      <!--<span class=\"icon-bar\"></span>-->\r\n      <!--</button>-->\r\n      <!--<router-link :to=\"'/'+$route.params.lang+'/'\" class=\"navbar-brand\">Farnosova</router-link>-->\r\n      <!--</div>-->\r\n      <!--<div class=\"collapse navbar-collapse\">-->\r\n      <!--<ul class=\"nav navbar-nav\">-->\r\n      <!--<li>-->\r\n      <!--<a @click=changeLang()>{{$route.params.lang | alternateLang}}</a>-->\r\n      <!--</li>-->\r\n      <!--<router-link-->\r\n      <!--:to=\"'/'+$route.params.lang+'/idar'\" activeClass=\"active\" tag=\"li\">-->\r\n      <!--<a>{{nav_global[$route.params.lang]['pages']['idar']}}</a>-->\r\n      <!--</router-link>-->\r\n      <!--<router-link-->\r\n      <!--:to=\"'/'+$route.params.lang+'/fashion'\" activeClass=\"active\" tag=\"li\">-->\r\n      <!--<a>{{nav_global[$route.params.lang]['pages']['fashion']}}</a>-->\r\n      <!--</router-link>-->\r\n      <!--<router-link-->\r\n      <!--:to=\"'/'+$route.params.lang+'/services'\" activeClass=\"active\" tag=\"li\">-->\r\n      <!--<a>{{nav_global[$route.params.lang]['pages']['services']}}</a>-->\r\n      <!--</router-link>-->\r\n      <!--<router-link-->\r\n      <!--:to=\"'/'+$route.params.lang+'/farnosova'\" activeClass=\"active\" tag=\"li\">-->\r\n      <!--<a>{{nav_global[$route.params.lang]['pages']['farnosova']}}</a>-->\r\n      <!--</router-link>-->\r\n      <!--<router-link-->\r\n      <!--:to=\"'/'+$route.params.lang+'/contact'\" activeClass=\"active\" tag=\"li\">-->\r\n      <!--<a>{{nav_global[$route.params.lang]['pages']['contact']}}</a>-->\r\n      <!--</router-link>-->\r\n      <!--<li v-for=\"link in nav_global[$route.params.lang]['social']\">-->\r\n      <!--<a :href=\"link.url\"-->\r\n      <!--target=\"_blank\">{{link.text}}</a>-->\r\n      <!--</li>-->\r\n      <!--</ul>-->\r\n      <!--</div>-->\r\n    </div><!-- /.container-fluid -->\r\n    <div class=\"logo fixed\">\r\n      <router-link :to=\"'/'+$route.params.lang+'/'\">\r\n        <svg class=\"svg-farnosova\"  xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 999.9 88\" style=\"enable-background:new 0 0 999.9 88;\" xml:space=\"preserve\">\r\n        <path style=\"fill:#fff\" d=\"M1000.9 85c-9.8 1.1-18.5-1.1-26.9-6.7-11.8-7.7-24.2-14.4-36.9-21.8-3.2 6.9-6.5 13.2-9.2 19.8-3.6 8.7-5.1 9.9-14.5 8.9-1.1-.1-2.3-.1-4.3-.2 5.5-11.8 10.7-23.2 16.2-35.1C916.1 44.4 907 39 898 33.6c11.1-.7 22.4-4 32.5 5.1 3-6.3 5.7-12.1 8.4-17.9 1.2-2.6 2.4-5.1 3.6-7.7 3.8-8.3 8.5-11 17.3-8.7 2.6.7 5.3 3.5 6.5 6 11.4 24.1 22.4 48.3 33.6 72.4.2.4.6.8.9 1.2.1.3.1.7.1 1zm-23.5-19.4c-7.7-16.5-14.8-31.8-22.4-48-4.5 9.8-8.6 18.6-12.8 27.7 10.7 6.4 20.9 12.5 31.2 18.6.8.5 1.8.8 4 1.7zM801.2 5c.9-.2 1.3-.4 1.8-.4 11.7-.9 11.7-.9 16.5 9.6 8.1 17.3 16.1 34.7 24.2 52 .8 1.6 1.6 3.2 2.7 5.5 1.7-3.4 3-6.2 4.4-9.1 8-17.2 16.2-34.3 23.8-51.6 2.2-5.1 5-7.4 10.5-6.5 2.1.3 4.2.1 7.2.1-.9 2.2-1.5 3.7-2.2 5.2-11 23.7-22.3 47.2-33 71.1-2.8 6.3-7.9 4.1-12.3 4.9-3.9.7-7.2-.7-9-4.6-11.5-24.9-22.9-49.9-34.4-74.8-.1-.4-.1-.7-.2-1.4zm-59.5-5c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44-20.4-44-45.5-44zm0 75.6c-18 0-32.6-14.1-32.6-31.6s14.6-31.6 32.6-31.6 32.6 14.1 32.6 31.6-14.6 31.6-32.6 31.6zm-154.4-2.5c2.3-3.5 4.4-6.8 6.7-10.4 3.9 2 7.6 3.9 11.3 5.7 11.9 5.5 24.2 7 36.9 3.7 2.8-.7 5.6-2.1 8.1-3.7 3.5-2.1 4.5-5.6 3.8-9.5-.7-4-3.3-6.2-7.1-6.7-10.4-1.5-20.8-2.7-31.2-4.1-2.8-.4-5.6-.6-8.4-1.1-8.6-1.7-15.2-5.7-17.1-15.1-1.8-8.6 1.3-18 9.4-22.4 6.1-3.4 13.2-5.6 20.1-6.6 12.9-1.8 25.6 0 37.3 6.1 2.6 1.4 5 3.1 8 5-2.9 3.6-5.4 6.7-8.2 10.2-10.3-5.9-21.3-8.9-33-8.1-4.3.3-8.6 1-12.8 2-4.1 1-6.7 4-6.3 8.4.3 4.1 3.6 5.1 7.1 5.7 13 2.1 25.9 4.3 38.9 6.5 9.2 1.6 15.8 6.3 17.5 15.9 1.8 10.1-.3 19.4-9.3 25-5.3 3.3-11.8 5.7-18 6.6-19.1 2.7-37.5.1-53.7-13.1zM515 0c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44S540.1 0 515 0zm0 75.6c-18 0-32.6-14.1-32.6-31.6S497 12.4 515 12.4s32.6 14.1 32.6 31.6-14.5 31.6-32.6 31.6zM374.1 19.8v65h-12.5V4.9c6.1 0 12.2-.4 18.2.2 1.8.2 3.6 2.7 4.9 4.6 13.1 18.6 26.2 37.4 39.2 56.1 1.1 1.6 2.3 3.1 4.6 4.5V5.2h12.8v80c-6 0-11.8.3-17.5-.2-1.8-.2-3.8-2.4-5-4.2-13.4-18.9-26.6-37.9-39.9-56.8-1.1-1.6-2.3-3.1-3.5-4.7-.5.1-.9.3-1.3.5zm-64.2 36.3c5.5 9.1 11.3 18.7 17.6 29-5 0-9.2.3-13.2-.2-1.6-.2-3.3-2-4.3-3.6-4.5-7-8.9-14.1-13-21.3-2-3.4-4.4-4.9-8.4-4.9-9.4.2-18.9.1-29 .1v29.5h-13.1V4.5h13.1c13.5-.1 27-.1 40.5-.2 9.6-.1 18.1 2.4 22.8 11.4 5.1 9.8 5.4 20.1-.6 29.5-2.9 4.3-7.9 7-12.4 10.9zm-49.8-15c14.8 0 29.1.1 43.4 0 4.6 0 7.3-2.8 8.5-7.1 2.3-8.8-1.9-15-11.1-15.3-13-.4-26-.1-38.9-.1-.6 0-1.2.3-1.8.5-.1 7.4-.1 14.5-.1 22zM157 56.3c-3.3 7.3-6.3 13.5-9.1 19.9-3.8 8.9-4.4 9.4-14 8.9-1.3-.1-2.6 0-4.8 0 5.5-12 10.8-23.4 16.3-35.3-9.2-5.5-18.3-10.9-27.3-16.3 11.3-1.1 22.6-3.8 32.7 4.8 4.6-9.8 8.9-19.1 13.3-28.5 3.4-7.3 16.4-8.4 21.1-1.6.9 1.2 1.5 2.6 2.2 3.9 10.6 22.8 21.2 45.5 31.7 68.3.6 1.3 1.1 2.7 1.7 4.3-8.9 1.4-16.7-.3-24.1-4.9-13-7.8-26-15.4-39.7-23.5zm5.3-11c11.5 6.9 22.7 13.5 33.8 20.1.3-.3.5-.6.8-1-7.1-15.3-14.2-30.5-21.8-46.9-4.5 9.8-8.6 18.6-12.8 27.8zM1 36h30.8V5.3h71.8V17H46.1v18.4h39.5v13.4h-40v35.7H32.3V48.9H1V36z\"/>\r\n      </svg>\r\n      </router-link>\r\n    </div>\r\n    <div class=\"social-icons fixed\">\r\n      <ul class=\"social-list\">\r\n        <li v-for=\"link in nav_global[$route.params.lang]['social']\"\r\n          :key=\"link\">\r\n          <a :href=\"link.url\"\r\n             target=\"_blank\"\r\n             class=\"social__link\">{{link.text}}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"lang-switch fixed\">\r\n      <a class=\"lang__link\" @click=changeLang()>{{$route.params.lang | alternateLang}}</a>\r\n    </div>\r\n    <div class=\"menu fixed\">\r\n      <ul>\r\n        <router-link\r\n          :to=\"'/'+$route.params.lang+'/idar'\" activeClass=\"active\" tag=\"li\">\r\n          <a>{{nav_global[$route.params.lang]['pages']['idar']}}</a>\r\n        </router-link>\r\n        <router-link\r\n          :to=\"'/'+$route.params.lang+'/fashion'\" activeClass=\"active\" tag=\"li\">\r\n          <a>{{nav_global[$route.params.lang]['pages']['fashion']}}</a>\r\n        </router-link>\r\n        <router-link\r\n          :to=\"'/'+$route.params.lang+'/services'\" activeClass=\"active\" tag=\"li\">\r\n          <a>{{nav_global[$route.params.lang]['pages']['services']}}</a>\r\n        </router-link>\r\n        <router-link\r\n          :to=\"'/'+$route.params.lang+'/farnosova'\" activeClass=\"active\" tag=\"li\">\r\n          <a>{{nav_global[$route.params.lang]['pages']['farnosova']}}</a>\r\n        </router-link>\r\n        <router-link\r\n          :to=\"'/'+$route.params.lang+'/contact'\" activeClass=\"active\" tag=\"li\">\r\n          <a>{{nav_global[$route.params.lang]['pages']['contact']}}</a>\r\n        </router-link>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data(){\r\n      return {\r\n        nav_global: {\r\n          ru: {\r\n            pages: {\r\n              idar: 'Дизайн интерьера',\r\n              fashion: 'Мода',\r\n              services: 'Услуги',\r\n              farnosova: 'Наталья Фарносова',\r\n              contact: 'Контакты'\r\n            },\r\n            social: {\r\n              instagram: {\r\n                text: 'IN',\r\n                url: 'https://www.instagram.com/nataly_farnosova_design_studio/'\r\n              },\r\n              pinterest: {\r\n                text: 'P',\r\n                url: 'https://www.pinterest.com/pin/567664728008063851/'\r\n              },\r\n              facebook: {\r\n                text: 'F',\r\n                url: 'https://www.facebook.com/pages/fSTYLE/107532029277973'\r\n              },\r\n              youtube: {\r\n                text: 'YOU',\r\n                url: 'https://www.youtube.com/user/TVFStyle'\r\n              },\r\n            }\r\n          },\r\n          en: {\r\n            pages: {\r\n              idar: 'ID&A',\r\n              fashion: 'Fashion',\r\n              services: 'Services',\r\n              farnosova: 'Farnosova',\r\n              contact: 'Contact'\r\n            },\r\n            social: {\r\n              instagram: {\r\n                text: 'IN',\r\n                url: 'https://www.instagram.com/nataly_farnosova_design_studio/'\r\n              },\r\n              pinterest: {\r\n                text: 'P',\r\n                url: 'https://www.pinterest.com/pin/567664728008063851/'\r\n              },\r\n              facebook: {\r\n                text: 'F',\r\n                url: 'https://www.facebook.com/pages/fSTYLE/107532029277973'\r\n              },\r\n              youtube: {\r\n                text: 'YOU',\r\n                url: 'https://www.youtube.com/user/TVFStyle'\r\n              },\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    filters: {\r\n      alternateLang(value){\r\n        if (value == 'ru') return 'en';\r\n        else if (value == 'en') return 'ru';\r\n      }\r\n    },\r\n    methods: {\r\n      changeLang(){\r\n        if (this.$route.params.lang == 'ru') {\r\n          this.$router.push('/en' + this.$route.path.substring(3));\r\n        }\r\n        else if (this.$route.params.lang == 'en') {\r\n          this.$router.push('/ru' + this.$route.path.substring(3));\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"sass\" src=\"./../../assets/style/nav_global.sass\"></style>\n\n\n// WEBPACK FOOTER //\n// nav_global.vue?3098a37a","<template>\r\n  <div class=\"section-preloader\" id=\"section-preloader\">\r\n    <div class=\"section-border\" id=\"section-border\">\r\n      <div class=\"pre-hr pre-hr_top\"></div>\r\n      <div class=\"pre-hr pre-hr_bottom\"></div>\r\n      <div class=\"pre-hr pre-hr_left\"></div>\r\n      <div class=\"pre-hr pre-hr_right\"></div>\r\n      <svg class=\"svg-farnosova\"  xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 999.9 88\" style=\"enable-background:new 0 0 999.9 88;\" xml:space=\"preserve\">\r\n        <defs xmlns=\"http://www.w3.org/2000/svg\">\r\n          <filter x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\" id=\"boom\">\r\n            <feFlood id=\"flood-loader\" flood-color=\"rgb(0, 0, 0)\" flood-opacity=\"1\"/>\r\n            <feComposite in2=\"SourceGraphic\" operator=\"out\"/>\r\n            <feGaussianBlur stdDeviation=\"9\"/>\r\n            <feOffset dx=\"6\" dy=\"6\"/>\r\n            <feComposite in2=\"SourceAlpha\" operator=\"in\" result=\"r1\"/>\r\n          </filter>\r\n        </defs>\r\n        <path data-svg-origin=\"0 5.1999969482421875\" filter=\"url(#boom)\" class=\"logo-letters\"  d=\"M1000.9 85c-9.8 1.1-18.5-1.1-26.9-6.7-11.8-7.7-24.2-14.4-36.9-21.8-3.2 6.9-6.5 13.2-9.2 19.8-3.6 8.7-5.1 9.9-14.5 8.9-1.1-.1-2.3-.1-4.3-.2 5.5-11.8 10.7-23.2 16.2-35.1C916.1 44.4 907 39 898 33.6c11.1-.7 22.4-4 32.5 5.1 3-6.3 5.7-12.1 8.4-17.9 1.2-2.6 2.4-5.1 3.6-7.7 3.8-8.3 8.5-11 17.3-8.7 2.6.7 5.3 3.5 6.5 6 11.4 24.1 22.4 48.3 33.6 72.4.2.4.6.8.9 1.2.1.3.1.7.1 1zm-23.5-19.4c-7.7-16.5-14.8-31.8-22.4-48-4.5 9.8-8.6 18.6-12.8 27.7 10.7 6.4 20.9 12.5 31.2 18.6.8.5 1.8.8 4 1.7zM801.2 5c.9-.2 1.3-.4 1.8-.4 11.7-.9 11.7-.9 16.5 9.6 8.1 17.3 16.1 34.7 24.2 52 .8 1.6 1.6 3.2 2.7 5.5 1.7-3.4 3-6.2 4.4-9.1 8-17.2 16.2-34.3 23.8-51.6 2.2-5.1 5-7.4 10.5-6.5 2.1.3 4.2.1 7.2.1-.9 2.2-1.5 3.7-2.2 5.2-11 23.7-22.3 47.2-33 71.1-2.8 6.3-7.9 4.1-12.3 4.9-3.9.7-7.2-.7-9-4.6-11.5-24.9-22.9-49.9-34.4-74.8-.1-.4-.1-.7-.2-1.4zm-59.5-5c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44-20.4-44-45.5-44zm0 75.6c-18 0-32.6-14.1-32.6-31.6s14.6-31.6 32.6-31.6 32.6 14.1 32.6 31.6-14.6 31.6-32.6 31.6zm-154.4-2.5c2.3-3.5 4.4-6.8 6.7-10.4 3.9 2 7.6 3.9 11.3 5.7 11.9 5.5 24.2 7 36.9 3.7 2.8-.7 5.6-2.1 8.1-3.7 3.5-2.1 4.5-5.6 3.8-9.5-.7-4-3.3-6.2-7.1-6.7-10.4-1.5-20.8-2.7-31.2-4.1-2.8-.4-5.6-.6-8.4-1.1-8.6-1.7-15.2-5.7-17.1-15.1-1.8-8.6 1.3-18 9.4-22.4 6.1-3.4 13.2-5.6 20.1-6.6 12.9-1.8 25.6 0 37.3 6.1 2.6 1.4 5 3.1 8 5-2.9 3.6-5.4 6.7-8.2 10.2-10.3-5.9-21.3-8.9-33-8.1-4.3.3-8.6 1-12.8 2-4.1 1-6.7 4-6.3 8.4.3 4.1 3.6 5.1 7.1 5.7 13 2.1 25.9 4.3 38.9 6.5 9.2 1.6 15.8 6.3 17.5 15.9 1.8 10.1-.3 19.4-9.3 25-5.3 3.3-11.8 5.7-18 6.6-19.1 2.7-37.5.1-53.7-13.1zM515 0c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44S540.1 0 515 0zm0 75.6c-18 0-32.6-14.1-32.6-31.6S497 12.4 515 12.4s32.6 14.1 32.6 31.6-14.5 31.6-32.6 31.6zM374.1 19.8v65h-12.5V4.9c6.1 0 12.2-.4 18.2.2 1.8.2 3.6 2.7 4.9 4.6 13.1 18.6 26.2 37.4 39.2 56.1 1.1 1.6 2.3 3.1 4.6 4.5V5.2h12.8v80c-6 0-11.8.3-17.5-.2-1.8-.2-3.8-2.4-5-4.2-13.4-18.9-26.6-37.9-39.9-56.8-1.1-1.6-2.3-3.1-3.5-4.7-.5.1-.9.3-1.3.5zm-64.2 36.3c5.5 9.1 11.3 18.7 17.6 29-5 0-9.2.3-13.2-.2-1.6-.2-3.3-2-4.3-3.6-4.5-7-8.9-14.1-13-21.3-2-3.4-4.4-4.9-8.4-4.9-9.4.2-18.9.1-29 .1v29.5h-13.1V4.5h13.1c13.5-.1 27-.1 40.5-.2 9.6-.1 18.1 2.4 22.8 11.4 5.1 9.8 5.4 20.1-.6 29.5-2.9 4.3-7.9 7-12.4 10.9zm-49.8-15c14.8 0 29.1.1 43.4 0 4.6 0 7.3-2.8 8.5-7.1 2.3-8.8-1.9-15-11.1-15.3-13-.4-26-.1-38.9-.1-.6 0-1.2.3-1.8.5-.1 7.4-.1 14.5-.1 22zM157 56.3c-3.3 7.3-6.3 13.5-9.1 19.9-3.8 8.9-4.4 9.4-14 8.9-1.3-.1-2.6 0-4.8 0 5.5-12 10.8-23.4 16.3-35.3-9.2-5.5-18.3-10.9-27.3-16.3 11.3-1.1 22.6-3.8 32.7 4.8 4.6-9.8 8.9-19.1 13.3-28.5 3.4-7.3 16.4-8.4 21.1-1.6.9 1.2 1.5 2.6 2.2 3.9 10.6 22.8 21.2 45.5 31.7 68.3.6 1.3 1.1 2.7 1.7 4.3-8.9 1.4-16.7-.3-24.1-4.9-13-7.8-26-15.4-39.7-23.5zm5.3-11c11.5 6.9 22.7 13.5 33.8 20.1.3-.3.5-.6.8-1-7.1-15.3-14.2-30.5-21.8-46.9-4.5 9.8-8.6 18.6-12.8 27.8zM1 36h30.8V5.3h71.8V17H46.1v18.4h39.5v13.4h-40v35.7H32.3V48.9H1V36z\"/>\r\n      </svg>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    mounted() {\r\n      let preloaderInit = function() {\r\n        var preloaderBlock = document.getElementById(\"section-preloader\");\r\n        preloaderBlock.style.opacity = 1;\r\n        var interPreloader = setInterval(function () {\r\n          preloaderBlock.style.opacity = preloaderBlock.style.opacity - 0.05;\r\n          if (preloaderBlock.style.opacity <= 0.05) {\r\n            clearInterval(interPreloader);\r\n            preloaderBlock.style.display = \"none\";\r\n          }\r\n        }, 16);\r\n        this.$store.state.preloaderDone = true;\r\n      };\r\n      setTimeout(preloaderInit.bind(this), 3500);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"sass\" src=\"./../../assets/style/preloader.sass\"></style>\n\n\n// WEBPACK FOOTER //\n// preloader.vue?22cbc5d0","<template>\r\n  <div>\r\n    <div class=\"slideshow\">\r\n      <slide image=\"/static/images/slider/image-girl.png\"></slide>\r\n      <slide image=\"/static/images/slider/image-girl2.png\"></slide>\r\n      <div class=\"button-wrap button__arrow-right slider-button slider-button__left\">\r\n        <a @click=\"navigateToIdar\" class=\"button__full button-border__regular button__slider \"><span>Interior Design & architecture</span></a>\r\n      </div>\r\n      <div class=\"button-wrap button__arrow-right slider-button slider-button__right\">\r\n        <a @click=\"navigateToFashion\" class=\"button__full button__full_inverse button-border__regular button__slider \"><span>Fashion</span></a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import anime from 'animejs'\r\n  window.anime = anime;\r\n  import './../../assets/libs/js/mirrorFx.js'\r\n  import './../../assets/libs/js/slideshow.js'\r\n  import smoke from '../../assets/libs/js/smoke.js'\r\n  import slide from './gallery__slide.vue'\r\n  export default {\r\n    data(){\r\n      return {\r\n        slider: {}\r\n      }\r\n    },\r\n    methods: {\r\n      navigateToIdar(){\r\n        this.$store.state.transitionName = 'slide-right';\r\n        this.$router.push('/' + this.$route.params.lang + '/idar');\r\n      },\r\n      navigateToFashion(){\r\n        this.$store.state.transitionName = 'slide-left';\r\n        this.$router.push('/' + this.$route.params.lang + '/fashion');\r\n      },\r\n      nextSlide(){\r\n        if (this.slider.itemsTotal > this.slider.current + 1)\r\n          this.slider._navigate(this.slider.current + 1)\r\n        else if (this.slider.itemsTotal = this.slider.current + 1)\r\n          this.slider._navigate(0)\r\n      }\r\n    },\r\n    components: {\r\n      slide\r\n    },\r\n    mounted(){\r\n      this.slider = new Slideshow(document.querySelector('.slideshow'));\r\n      document.querySelector('.slideshow').appendChild( window.smoke );\r\n      setInterval(this.nextSlide, 7000);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"sass\" src=\"./../../assets/style/home-gallery.sass\"></style>\r\n<style lang=\"sass\" src=\"./../../assets/style/styleguide.sass\"></style>\r\n<style src=\"./../../assets/libs/css/normalize.css\"></style>\r\n<style src=\"./../../assets/libs/css/demo.css\"></style>\r\n<style src=\"./../../assets/libs/css/mirror.css\"></style>\n\n\n// WEBPACK FOOTER //\n// gallery.vue?11107e52","<template>\r\n  <div class=\"slide\">\r\n    <div class=\"mirror\" data-visible-area=\"0.85\">\r\n      <div class=\"mirror__side mirror__side--one\">\r\n        <img class=\"mirror__img\" :src=\"image\" :alt=\"alt\" />\r\n      </div>\r\n      <div class=\"mirror__side mirror__side--two\">\r\n        <img class=\"mirror__img\" :src=\"image\" :alt=\"alt\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: {\r\n      image: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      alt: {\r\n        type: String,\r\n        default: 'Farnosova'\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// gallery__slide.vue?62898485","<template>\r\n  <div class=\"col-xs-12\">\r\n    <div class=\"row h100\">\r\n      <div class=\"banner\" :style=\"{ backgroundImage: 'url(' + image + ')' }\">\r\n        <h1 class=\"banner__title\" v-if=\"text\">{{text}}</h1>\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\timage: {\r\n\t\t\t\ttype: String,\r\n\t\t\t},\r\n\t\t\ttext: {\r\n\t\t\t\ttype: String,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style src=\"./../../assets/style/banner.sass\" lang=\"sass\"></style>\n\n\n// WEBPACK FOOTER //\n// banner.vue?059fa564","/**\n * mirrorFx.js\n * http://www.codrops.com\n *\n * Licensed under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n * \n * Copyright 2017, Codrops\n * http://www.codrops.com\n */\n\n;(function(window) {\n\n\t'use strict';\n\n\t// Helper vars and functions.\n\tfunction extend( a, b ) {\n\t\tfor( var key in b ) { \n\t\t\tif( b.hasOwnProperty( key ) ) {\n\t\t\t\ta[key] = b[key];\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\t// from http://www.quirksmode.org/js/events_properties.html#position\n\tfunction getMousePos(e) {\n\t\tvar posx = 0, posy = 0;\n\t\tif (!e) var e = window.event;\n\t\tif (e.pageX || e.pageY) \t{\n\t\t\tposx = e.pageX;\n\t\t\tposy = e.pageY;\n\t\t}\n\t\telse if (e.clientX || e.clientY) \t{\n\t\t\tposx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\tposy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t}\n\t\treturn { x : posx, y : posy }\n\t}\n\n\t// equation of a line\n\tfunction lineEq(y2, y1, x2, x1, currentVal) {\n\t\t// y = mx + b\n\t\tvar m = (y2 - y1) / (x2 - x1),\n\t\t\tb = y1 - m * x1;\n\n\t\treturn m * currentVal + b;\n\t}\n\n\tfunction MirrorFx(el, options) {\n\t\tthis.el = el;\n\t\tthis.options = extend({}, this.options);\n\t\textend(this.options, options);\n\t\tthis.imgs = {\n\t\t\tside1: this.el.querySelector('.mirror__side--one > img.mirror__img'),\n\t\t\tside2: this.el.querySelector('.mirror__side--two > img.mirror__img')\n\t\t};\n\t\t// check possible data-attrs in the DOM element.\n\t\tif( this.el.getAttribute('data-visible-area') != undefined ) {\n\t\t\tthis.options.visibleArea = this.el.getAttribute('data-visible-area');\n\t\t}\n\t\tif( this.el.getAttribute('data-layout') != undefined ) {\n\t\t\tthis.options.layout = this.el.getAttribute('data-layout');\n\t\t}\n\t\tif( this.el.getAttribute('data-tilt') != undefined ) {\n\t\t\tthis.options.tilt = true;\n\t\t}\n\t}\n\n\tMirrorFx.prototype.options = {\n\t\t// Animation duration for when showing and hiding the image(s).\n\t\tduration: {show: 1500, hide: 1000},\n\t\t// Animation easing for when showing and hiding the image(s).\n\t\teasing: {show: 'easeOutExpo', hide: 'easeOutQuint'},\n\t\t// horizontal||vertical layout.\n\t\tlayout: 'horizontal',\n\t\t// This is the amount of the image that is shown. Value goes from 0 to 1. The higher the value the more the image gets revealed.\n\t\tvisibleArea: 1,\n\t\t// Mousemove functionality.\n\t\ttilt: false,\n\t\t// Each image will move from visibleArea and visibleArea*tiltFactor\n\t\ttiltFactor: 0.6,\n\t\t// Rotation on the z-axis\n\t\ttiltRotation: 10\n\t};\n\n\tMirrorFx.prototype._initTilt = function() {\n\t\tvar self = this;\n\t\tthis.imgs.side1.style.WebkitTransition = this.imgs.side2.style.transition = 'transform 0.2s ease-out';\n\n\t\tthis.mousemoveFn = function(ev) {\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\t// Mouse position relative to the document.\n\t\t\t\tvar mousepos = getMousePos(ev),\n\t\t\t\t\t// Document scrolls.\n\t\t\t\t\tdocScrolls = {left : document.body.scrollLeft + document.documentElement.scrollLeft, top : document.body.scrollTop + document.documentElement.scrollTop},\n\t\t\t\t\twin = {width: window.innerWidth, height: window.innerHeight},\n\t\t\t\t\t// Mouse position relative to the main element (this.el).\n\t\t\t\t\trelmousepos = { x : mousepos.x - docScrolls.left, y : mousepos.y - docScrolls.top },\n\n\t\t\t\t\td = self.options.layout === 'horizontal' ? win.width : win.height,\n\t\t\t\t\tm = self.options.layout === 'horizontal' ? relmousepos.x : relmousepos.y,\n\t\t\t\t\ttVal = m < d/2 ? \n\t\t\t\t\t\tlineEq(self.options.visibleArea, self.options.visibleArea*self.options.tiltFactor, d/2, 0, m) : \n\t\t\t\t\t\tlineEq(self.options.visibleArea*self.options.tiltFactor, self.options.visibleArea, d, d/2, m),\n\n\t\t\t\t\trz = self.options.tiltRotation/win.height*relmousepos.y;\n\n\t\t\t\tself.imgs.side1.style.WebkitTransform = self.imgs.side1.style.transform = self.imgs.side2.style.WebkitTransform = self.imgs.side2.style.transform = 'translate' + (self.options.layout === 'horizontal' ? 'X' : 'Y') + '(' + (1-tVal)*100 + '%) rotateZ(' + rz + 'deg)';\n\t\t\t});\n\t\t};\n\t\twindow.addEventListener('mousemove', this.mousemoveFn);\n\t};\n\n\tMirrorFx.prototype._removeTilt = function() {\n\t\tthis.imgs.side1.style.WebkitTransition = this.imgs.side2.style.transition = 'none';\n\t\twindow.removeEventListener('mousemove', this.mousemoveFn);\n\t};\n\n\tMirrorFx.prototype._animate = function(action, callback) {\n\t\tthis._removeTilt();\n\n\t\tvar opts = {\n\t\t\ttargets: [this.imgs.side1, this.imgs.side2],\n\t\t\tduration: this.options.duration[action],\n\t\t\teasing: this.options.easing[action],\n\t\t\topacity: {\n\t\t\t\tvalue: action === 'show' ? [0,1] : [1,0], \n\t\t\t\tduration: action === 'show' ? this.options.duration[action] : this.options.duration[action]*.5,\n\t\t\t\teasing: this.options.easing[action]\n\t\t\t},\n\t\t\trotateZ: 0\n\t\t};\n\n\t\tif( this.options.layout === 'horizontal' ) {\n\t\t\topts.translateX = action === 'show' ? ['100%', Math.ceil((1-this.options.visibleArea)*100) + '%'] : '100%';\n\t\t}\n\t\telse {\n\t\t\topts.translateY = action === 'show' ? ['100%', Math.ceil((1-this.options.visibleArea)*100) + '%'] : '100%';\n\t\t}\n\n\t\tvar self = this;\n\t\t\n\t\topts.complete = typeof callback === 'function' ? \n\t\t\tfunction() {\n\t\t\t\tcallback();\n\t\t\t\tif( self.options.tilt && action === 'show' ) {\n\t\t\t\t\tself._initTilt();\n\t\t\t\t}\n\t\t\t} : \n\t\t\tfunction() {\n\t\t\t\tif( self.options.tilt && action === 'show' ) {\n\t\t\t\t\tself._initTilt();\n\t\t\t\t}\n\t\t\t};\n\n\t\tanime.remove(this.imgs.side1);\n\t\tanime.remove(this.imgs.side2);\n\t\tanime(opts);\n\t};\n\n\tMirrorFx.prototype.show = function(callback) {\n\t\tthis._animate('show', callback);\n\t};\n\n\tMirrorFx.prototype.hide = function(callback) {\n\t\tthis._animate('hide', callback);\n\t};\n\n\twindow.MirrorFx = MirrorFx;\n\n})(window);\n\n\n// WEBPACK FOOTER //\n// ./src/assets/libs/js/mirrorFx.js",";(function(window) {\n\t'use strict';\n\t// Helper vars and functions.\n\tfunction extend( a, b ) {\n\t\tfor( var key in b ) { \n\t\t\tif( b.hasOwnProperty( key ) ) {\n\t\t\t\ta[key] = b[key];\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tfunction Slideshow(el, options) {\n\t\tthis.el = el;\n\t\tthis.options = extend({}, this.options);\n\t\textend(this.options, options);\n\t\tthis.items = [].slice.call(this.el.querySelectorAll('.slide'));\n\t\tthis.itemsTotal = this.items.length;\n\t\tthis.current = 0;\n\t\tthis._init();\n\t}\n\n\tSlideshow.prototype.options = {\n\t\tduration: {show: 1500, hide: 500},\n\t\tdelay: {show: 250, hide: 0},\n\t\teasing: {show: 'easeOutExpo', hide: 'easeOutExpo'},\n\t};\n\n\tSlideshow.prototype._init = function() {\n\t\tvar self = this;\n\t\t\n\t\t// Initialize a MirrorFx instance per item and store the references in an array:\n\t\tthis.mirrorElems = [];\n\t\tthis.items.forEach(function(item) {\n\t\t\tself.mirrorElems.push(new MirrorFx(item.querySelector('.mirror')));\n\t\t});\n\n\t\tthis.items[this.current].classList.add('slide--current');\n\t\tthis.mirrorElems[this.current].show();\n\n\t};\n\n\tSlideshow.prototype._navigate = function(pos) {\n\t\tvar self = this, \n\t\t\tcurrentItem = this.items[this.current],\n\t\t\tnextItem = this.items[pos];\n\n\t\tthis.mirrorElems[this.current].hide(function() {\n\t\t\tcurrentItem.style.opacity = 0;\n\t\t\tcurrentItem.classList.remove('slide--current');\t\n\t\t\t\n\t\t\tself.current = pos;\n\t\t\t\n\t\t\tself.mirrorElems[self.current].show();\n\t\t\t\n\t\t\tnextItem.style.opacity = 1;\n\t\t\tnextItem.classList.add('slide--current');\n\n\t\t\tself.isAnimating = false;\n\t\t});\n\t};\n\n  window.Slideshow = Slideshow;\n\n})(window);\n\n\n// WEBPACK FOOTER //\n// ./src/assets/libs/js/slideshow.js","import THREE from '../../../../static/js/three.min.js'\r\n\r\nvar camera, scene, renderer,\r\n    geometry, material, mesh;\r\n\r\nlet clock, cubeSineDriver, light, smokeTexture, smokeMaterial, smokeGeo,\r\n    smokeParticles, p, delta;\r\ninit();\r\nanimate();\r\n\r\nfunction init() {\r\n  clock = new THREE.Clock();\r\n\r\n  renderer = new THREE.WebGLRenderer();\r\n  renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n  scene = new THREE.Scene();\r\n\r\n  camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\r\n  camera.position.z = 1000;\r\n  scene.add( camera );\r\n\r\n  geometry = new THREE.CubeGeometry( 200, 200, 200 );\r\n  material = new THREE.MeshLambertMaterial( { color: 0xaa6666, wireframe: false } );\r\n  mesh = new THREE.Mesh( geometry, material );\r\n  //scene.add( mesh );\r\n  cubeSineDriver = 0;\r\n\r\n  light = new THREE.DirectionalLight(0xffffff,0.5);\r\n  light.position.set(-1,0,1);\r\n  scene.add(light);\r\n\r\n  smokeTexture = THREE.ImageUtils.loadTexture('/static/images/Smoke-Element.png');\r\n  smokeMaterial = new THREE.MeshLambertMaterial({color: 0x7317ef, map: smokeTexture, transparent: true});\r\n  smokeGeo = new THREE.PlaneGeometry(300,300);\r\n  smokeParticles = [];\r\n\r\n  for (p = 0; p < 150; p++) {\r\n    var particle = new THREE.Mesh(smokeGeo,smokeMaterial);\r\n    particle.position.set(Math.random()*500-250,Math.random()*500-250,Math.random()*1000-100);\r\n    particle.rotation.z = Math.random() * 360;\r\n    scene.add(particle);\r\n    smokeParticles.push(particle);\r\n  }\r\n\r\n}\r\n\r\nfunction animate() {\r\n  delta = clock.getDelta();\r\n  requestAnimationFrame( animate );\r\n  evolveSmoke();\r\n  render();\r\n}\r\n\r\nfunction evolveSmoke() {\r\n  var sp = smokeParticles.length;\r\n  while(sp--) {\r\n    smokeParticles[sp].rotation.z += (delta * 0.2);\r\n  }\r\n}\r\n\r\nfunction render() {\r\n\r\n  mesh.rotation.x += 0.005;\r\n  mesh.rotation.y += 0.01;\r\n  cubeSineDriver += .01;\r\n  mesh.position.z = 100 + (Math.sin(cubeSineDriver) * 500);\r\n  renderer.render( scene, camera );\r\n\r\n}\r\n\r\nwindow.smoke = renderer.domElement;\n\n\n// WEBPACK FOOTER //\n// ./src/assets/libs/js/smoke.js","import Vue from 'vue'\r\nimport App from './App'\r\nimport store from './store'\r\nimport router from './router'\r\nimport resource from 'vue-resource'\r\nimport jquery from 'jquery'\r\nimport matchHeight from 'jquery-match-height'\r\n// import onepage_scroll from './assets/libs/js/jquery.onepage-scroll.min'\r\n\r\nVue.use(resource);\r\n\r\nwindow.$ = jquery;\r\nwindow.$.matchHeight = matchHeight;\r\n// window.$.onepage_scroll = onepage_scroll;\r\n\r\nVue.config.productionTip = false;\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  store,\r\n  router,\r\n  template: '<App/>',\r\n  components: { App }\r\n});\r\n\r\n//scrolltop after opening new page\r\nrouter.afterEach(function() {\r\n  window.scrollTo(0, 0);\r\n  window.scrollIsDone = true;\r\n  store.state.currentPath = router.history.current.fullPath;\r\n  store.state.lang = router.history.current.fullPath.substr(1,2);\r\n  store.state.nav.visible = false;\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-6e346d14\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../assets/style/styleguide.sass\")\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-6e346d14\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../assets/style/global.sass\")\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-6e346d14\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../assets/style/page_home.sass\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6e346d14\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home.vue\n// module id = 60\n// module chunks = 14","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-ebcc3378\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../../assets/style/nav_global.sass\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./nav_global.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ebcc3378\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./nav_global.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/global/nav_global.vue\n// module id = 61\n// module chunks = 14","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-67d77cfe\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!./../../assets/style/preloader.sass\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./preloader.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-67d77cfe\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./preloader.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/global/preloader.vue\n// module id = 62\n// module chunks = 14","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0c0dc5a6\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./farnosova.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/home/farnosova.vue\n// module id = 63\n// module chunks = 14","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./gallery__slide.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-34eacd48\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./gallery__slide.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/home/gallery__slide.vue\n// module id = 64\n// module chunks = 14","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-68600e0c\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./lastestProjectsImage.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/home/lastestProjectsImage.vue\n// module id = 65\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    key: \"initial\",\n    staticClass: \"block_image\",\n    style: (_vm.staticStyle),\n    attrs: {\n      \"title\": _vm.alt\n    }\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-09516374\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/global/image_block.vue\n// module id = 66\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"page_home__farnosova\"\n  }, [_c('div', {\n    staticClass: \"layer layer_image\",\n    staticStyle: {\n      \"background-image\": \"url('/static/images/image_NF.jpg\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"layer layer_padder --top draw\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"layer layer_padder --bottom draw\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"layer layer_image\",\n    staticStyle: {\n      \"background-image\": \"url('/static/images/image_NF_transparent.png\"\n    }\n  })])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-0c0dc5a6\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/home/farnosova.vue\n// module id = 67\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"slideshow\"\n  }, [_c('slide', {\n    attrs: {\n      \"image\": \"/static/images/slider/image-girl.png\"\n    }\n  }), _vm._v(\" \"), _c('slide', {\n    attrs: {\n      \"image\": \"/static/images/slider/image-girl2.png\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"button-wrap button__arrow-right slider-button slider-button__left\"\n  }, [_c('a', {\n    staticClass: \"button__full button-border__regular button__slider \",\n    on: {\n      \"click\": _vm.navigateToIdar\n    }\n  }, [_c('span', [_vm._v(\"Interior Design & architecture\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"button-wrap button__arrow-right slider-button slider-button__right\"\n  }, [_c('a', {\n    staticClass: \"button__full button__full_inverse button-border__regular button__slider \",\n    on: {\n      \"click\": _vm.navigateToFashion\n    }\n  }, [_c('span', [_vm._v(\"Fashion\")])])])], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-1a5da219\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/home/gallery.vue\n// module id = 68\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"col-xs-12\"\n  }, [_c('div', {\n    staticClass: \"row h100\"\n  }, [_c('div', {\n    staticClass: \"banner\",\n    style: ({\n      backgroundImage: 'url(' + _vm.image + ')'\n    })\n  }, [(_vm.text) ? _c('h1', {\n    staticClass: \"banner__title\"\n  }, [_vm._v(_vm._s(_vm.text))]) : _vm._e(), _vm._v(\" \"), _vm._t(\"default\")], 2)])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-1e80c0e8\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/idar/banner.vue\n// module id = 69\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [(!this.$store.state.preloaderDone) ? _c('app-preloader') : _vm._e(), _vm._v(\" \"), (this.$store.state.preloaderDone) ? _c('app-nav-global') : _vm._e(), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": _vm.$store.state.transitionName\n    },\n    on: {\n      \"after-enter\": function($event) {\n        _vm.$store.state.transitionName = 'fade'\n      }\n    }\n  }, [(this.$store.state.preloaderDone) ? _c('router-view') : _vm._e()], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-2f6b98c2\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 70\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"slide\"\n  }, [_c('div', {\n    staticClass: \"mirror\",\n    attrs: {\n      \"data-visible-area\": \"0.85\"\n    }\n  }, [_c('div', {\n    staticClass: \"mirror__side mirror__side--one\"\n  }, [_c('img', {\n    staticClass: \"mirror__img\",\n    attrs: {\n      \"src\": _vm.image,\n      \"alt\": _vm.alt\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"mirror__side mirror__side--two\"\n  }, [_c('img', {\n    staticClass: \"mirror__img\",\n    attrs: {\n      \"src\": _vm.image,\n      \"alt\": _vm.alt\n    }\n  })])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-34eacd48\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/home/gallery__slide.vue\n// module id = 71\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('app-info', {\n    attrs: {\n      \"first\": \"image\"\n    }\n  }, [_c('h4', {\n    staticClass: \"title\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.contact_info[_vm.$route.params.lang]['title']))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"description contacts\",\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.contact_info[_vm.$route.params.lang]['description'])\n    },\n    slot: \"text\"\n  }), _vm._v(\" \"), _c('a', {\n    staticClass: \"button__full button-border__regular\",\n    on: {\n      \"click\": _vm.goToContact\n    },\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.contact_info[_vm.$route.params.lang]['button']))]), _vm._v(\" \"), _c('div', {\n    slot: \"image\"\n  }, [_c('app-block-image', {\n    staticClass: \"bg-image image\",\n    attrs: {\n      \"bg_image\": _vm.contact_info[_vm.$route.params.lang]['image']\n    }\n  })], 1)])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-494924eb\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/global/contact.vue\n// module id = 72\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"col-xs-12 info_divided\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-sm-6 col-lg-6 info-block match-height\",\n    class: {\n      'col-sm-push-6': (_vm.first == 'text')\n    }\n  }, [_vm._t(\"image\")], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-6 col-lg-3 col-lg-offset-1 info-block match-height\",\n    class: {\n      'col-sm-pull-6': (_vm.first == 'text')\n    }\n  }, [_c('div', {\n    staticClass: \"table h100\"\n  }, [_c('div', {\n    staticClass: \"table-cell vam\"\n  }, [_vm._t(\"text\")], 2)])])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-4959ffbf\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/global/info_divided.vue\n// module id = 73\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"section-preloader\",\n    attrs: {\n      \"id\": \"section-preloader\"\n    }\n  }, [_c('div', {\n    staticClass: \"section-border\",\n    attrs: {\n      \"id\": \"section-border\"\n    }\n  }, [_c('div', {\n    staticClass: \"pre-hr pre-hr_top\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"pre-hr pre-hr_bottom\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"pre-hr pre-hr_left\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"pre-hr pre-hr_right\"\n  }), _vm._v(\" \"), _c('svg', {\n    staticClass: \"svg-farnosova\",\n    staticStyle: {\n      \"enable-background\": \"new 0 0 999.9 88\"\n    },\n    attrs: {\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n      \"x\": \"0px\",\n      \"y\": \"0px\",\n      \"viewBox\": \"0 0 999.9 88\",\n      \"xml:space\": \"preserve\"\n    }\n  }, [_c('defs', {\n    attrs: {\n      \"xmlns\": \"http://www.w3.org/2000/svg\"\n    }\n  }, [_c('filter', {\n    attrs: {\n      \"x\": \"-50%\",\n      \"y\": \"-50%\",\n      \"width\": \"200%\",\n      \"height\": \"200%\",\n      \"id\": \"boom\"\n    }\n  }, [_c('feFlood', {\n    attrs: {\n      \"id\": \"flood-loader\",\n      \"flood-color\": \"rgb(0, 0, 0)\",\n      \"flood-opacity\": \"1\"\n    }\n  }), _vm._v(\" \"), _c('feComposite', {\n    attrs: {\n      \"in2\": \"SourceGraphic\",\n      \"operator\": \"out\"\n    }\n  }), _vm._v(\" \"), _c('feGaussianBlur', {\n    attrs: {\n      \"stdDeviation\": \"9\"\n    }\n  }), _vm._v(\" \"), _c('feOffset', {\n    attrs: {\n      \"dx\": \"6\",\n      \"dy\": \"6\"\n    }\n  }), _vm._v(\" \"), _c('feComposite', {\n    attrs: {\n      \"in2\": \"SourceAlpha\",\n      \"operator\": \"in\",\n      \"result\": \"r1\"\n    }\n  })], 1)]), _vm._v(\" \"), _c('path', {\n    staticClass: \"logo-letters\",\n    attrs: {\n      \"data-svg-origin\": \"0 5.1999969482421875\",\n      \"filter\": \"url(#boom)\",\n      \"d\": \"M1000.9 85c-9.8 1.1-18.5-1.1-26.9-6.7-11.8-7.7-24.2-14.4-36.9-21.8-3.2 6.9-6.5 13.2-9.2 19.8-3.6 8.7-5.1 9.9-14.5 8.9-1.1-.1-2.3-.1-4.3-.2 5.5-11.8 10.7-23.2 16.2-35.1C916.1 44.4 907 39 898 33.6c11.1-.7 22.4-4 32.5 5.1 3-6.3 5.7-12.1 8.4-17.9 1.2-2.6 2.4-5.1 3.6-7.7 3.8-8.3 8.5-11 17.3-8.7 2.6.7 5.3 3.5 6.5 6 11.4 24.1 22.4 48.3 33.6 72.4.2.4.6.8.9 1.2.1.3.1.7.1 1zm-23.5-19.4c-7.7-16.5-14.8-31.8-22.4-48-4.5 9.8-8.6 18.6-12.8 27.7 10.7 6.4 20.9 12.5 31.2 18.6.8.5 1.8.8 4 1.7zM801.2 5c.9-.2 1.3-.4 1.8-.4 11.7-.9 11.7-.9 16.5 9.6 8.1 17.3 16.1 34.7 24.2 52 .8 1.6 1.6 3.2 2.7 5.5 1.7-3.4 3-6.2 4.4-9.1 8-17.2 16.2-34.3 23.8-51.6 2.2-5.1 5-7.4 10.5-6.5 2.1.3 4.2.1 7.2.1-.9 2.2-1.5 3.7-2.2 5.2-11 23.7-22.3 47.2-33 71.1-2.8 6.3-7.9 4.1-12.3 4.9-3.9.7-7.2-.7-9-4.6-11.5-24.9-22.9-49.9-34.4-74.8-.1-.4-.1-.7-.2-1.4zm-59.5-5c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44-20.4-44-45.5-44zm0 75.6c-18 0-32.6-14.1-32.6-31.6s14.6-31.6 32.6-31.6 32.6 14.1 32.6 31.6-14.6 31.6-32.6 31.6zm-154.4-2.5c2.3-3.5 4.4-6.8 6.7-10.4 3.9 2 7.6 3.9 11.3 5.7 11.9 5.5 24.2 7 36.9 3.7 2.8-.7 5.6-2.1 8.1-3.7 3.5-2.1 4.5-5.6 3.8-9.5-.7-4-3.3-6.2-7.1-6.7-10.4-1.5-20.8-2.7-31.2-4.1-2.8-.4-5.6-.6-8.4-1.1-8.6-1.7-15.2-5.7-17.1-15.1-1.8-8.6 1.3-18 9.4-22.4 6.1-3.4 13.2-5.6 20.1-6.6 12.9-1.8 25.6 0 37.3 6.1 2.6 1.4 5 3.1 8 5-2.9 3.6-5.4 6.7-8.2 10.2-10.3-5.9-21.3-8.9-33-8.1-4.3.3-8.6 1-12.8 2-4.1 1-6.7 4-6.3 8.4.3 4.1 3.6 5.1 7.1 5.7 13 2.1 25.9 4.3 38.9 6.5 9.2 1.6 15.8 6.3 17.5 15.9 1.8 10.1-.3 19.4-9.3 25-5.3 3.3-11.8 5.7-18 6.6-19.1 2.7-37.5.1-53.7-13.1zM515 0c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44S540.1 0 515 0zm0 75.6c-18 0-32.6-14.1-32.6-31.6S497 12.4 515 12.4s32.6 14.1 32.6 31.6-14.5 31.6-32.6 31.6zM374.1 19.8v65h-12.5V4.9c6.1 0 12.2-.4 18.2.2 1.8.2 3.6 2.7 4.9 4.6 13.1 18.6 26.2 37.4 39.2 56.1 1.1 1.6 2.3 3.1 4.6 4.5V5.2h12.8v80c-6 0-11.8.3-17.5-.2-1.8-.2-3.8-2.4-5-4.2-13.4-18.9-26.6-37.9-39.9-56.8-1.1-1.6-2.3-3.1-3.5-4.7-.5.1-.9.3-1.3.5zm-64.2 36.3c5.5 9.1 11.3 18.7 17.6 29-5 0-9.2.3-13.2-.2-1.6-.2-3.3-2-4.3-3.6-4.5-7-8.9-14.1-13-21.3-2-3.4-4.4-4.9-8.4-4.9-9.4.2-18.9.1-29 .1v29.5h-13.1V4.5h13.1c13.5-.1 27-.1 40.5-.2 9.6-.1 18.1 2.4 22.8 11.4 5.1 9.8 5.4 20.1-.6 29.5-2.9 4.3-7.9 7-12.4 10.9zm-49.8-15c14.8 0 29.1.1 43.4 0 4.6 0 7.3-2.8 8.5-7.1 2.3-8.8-1.9-15-11.1-15.3-13-.4-26-.1-38.9-.1-.6 0-1.2.3-1.8.5-.1 7.4-.1 14.5-.1 22zM157 56.3c-3.3 7.3-6.3 13.5-9.1 19.9-3.8 8.9-4.4 9.4-14 8.9-1.3-.1-2.6 0-4.8 0 5.5-12 10.8-23.4 16.3-35.3-9.2-5.5-18.3-10.9-27.3-16.3 11.3-1.1 22.6-3.8 32.7 4.8 4.6-9.8 8.9-19.1 13.3-28.5 3.4-7.3 16.4-8.4 21.1-1.6.9 1.2 1.5 2.6 2.2 3.9 10.6 22.8 21.2 45.5 31.7 68.3.6 1.3 1.1 2.7 1.7 4.3-8.9 1.4-16.7-.3-24.1-4.9-13-7.8-26-15.4-39.7-23.5zm5.3-11c11.5 6.9 22.7 13.5 33.8 20.1.3-.3.5-.6.8-1-7.1-15.3-14.2-30.5-21.8-46.9-4.5 9.8-8.6 18.6-12.8 27.8zM1 36h30.8V5.3h71.8V17H46.1v18.4h39.5v13.4h-40v35.7H32.3V48.9H1V36z\"\n    }\n  })])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-67d77cfe\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/global/preloader.vue\n// module id = 74\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"page_home__lastestProjectImage\"\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-68600e0c\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/home/lastestProjectsImage.vue\n// module id = 75\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"page page_home page_no-pagination\"\n  }, [_c('app-gallery'), _vm._v(\" \"), _c('app-info', {\n    class: _vm.$store.state.currentPageSlide == 2 ? 'current' : '',\n    attrs: {\n      \"first\": \"text\"\n    }\n  }, [_c('h4', {\n    staticClass: \"title\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_1']['title']))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"description\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_1']['description']))]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button__full button-border__regular\",\n    on: {\n      \"click\": _vm.navigateToFarnosova\n    },\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_1']['button']))]), _vm._v(\" \"), _c('div', {\n    slot: \"image\"\n  }, [_c('farnosova')], 1)]), _vm._v(\" \"), _c('app-info', {\n    class: _vm.$store.state.currentPageSlide == 3 ? 'current' : '',\n    attrs: {\n      \"first\": \"image\"\n    }\n  }, [_c('h4', {\n    staticClass: \"title\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_2']['title']))]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button_arrow button_arrow__big white\",\n    on: {\n      \"click\": _vm.navigateToLastest\n    },\n    slot: \"text\"\n  }, [_c('svg', {\n    staticClass: \"svg-line\",\n    staticStyle: {\n      \"enable-background\": \"new 0 0 151 7\"\n    },\n    attrs: {\n      \"version\": \"1.1\",\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n      \"x\": \"0px\",\n      \"y\": \"0px\",\n      \"viewBox\": \"0 0 150 5\",\n      \"xml:space\": \"preserve\"\n    }\n  }, [_c('polygon', {\n    staticClass: \"svg_path-line\",\n    attrs: {\n      \"points\": \"151,3.5 147,0 147,3 0,3 0,4 147,4 147,7  \"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    slot: \"image\"\n  }, [_c('lastestProjectsImage')], 1)]), _vm._v(\" \"), _c('app-info', {\n    attrs: {\n      \"first\": \"text\"\n    }\n  }, [_c('h4', {\n    staticClass: \"title\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_3']['title']))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"description\",\n    slot: \"text\"\n  }, [_vm._v(_vm._s(_vm.page_home[_vm.$route.params.lang]['info_3']['description']))]), _vm._v(\" \"), _c('a', {\n    staticClass: \" button_arrow button_arrow__big white\",\n    on: {\n      \"click\": _vm.navigateToMedia\n    },\n    slot: \"text\"\n  }, [_c('svg', {\n    staticClass: \"svg-line\",\n    staticStyle: {\n      \"enable-background\": \"new 0 0 151 7\"\n    },\n    attrs: {\n      \"version\": \"1.1\",\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n      \"x\": \"0px\",\n      \"y\": \"0px\",\n      \"viewBox\": \"0 0 150 5\",\n      \"xml:space\": \"preserve\"\n    }\n  }, [_c('polygon', {\n    staticClass: \"svg_path-line\",\n    attrs: {\n      \"points\": \"151,3.5 147,0 147,3 0,3 0,4 147,4 147,7  \"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    slot: \"image\"\n  }, [_c('app-block-image', {\n    staticClass: \"bg-image image\",\n    attrs: {\n      \"bg_image\": _vm.page_home[_vm.$route.params.lang]['info_3']['image']\n    }\n  })], 1)]), _vm._v(\" \"), _c('app-contact')], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-6e346d14\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n// module id = 76\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return (_vm.$route.params.lang) ? _c('nav', {\n    staticClass: \" navbar-default\",\n    attrs: {\n      \"id\": \"nav_global\"\n    }\n  }, [_c('div', {\n    staticClass: \"container-fluid\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"logo fixed\"\n  }, [_c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/'\n    }\n  }, [_c('svg', {\n    staticClass: \"svg-farnosova\",\n    staticStyle: {\n      \"enable-background\": \"new 0 0 999.9 88\"\n    },\n    attrs: {\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n      \"x\": \"0px\",\n      \"y\": \"0px\",\n      \"viewBox\": \"0 0 999.9 88\",\n      \"xml:space\": \"preserve\"\n    }\n  }, [_c('path', {\n    staticStyle: {\n      \"fill\": \"#fff\"\n    },\n    attrs: {\n      \"d\": \"M1000.9 85c-9.8 1.1-18.5-1.1-26.9-6.7-11.8-7.7-24.2-14.4-36.9-21.8-3.2 6.9-6.5 13.2-9.2 19.8-3.6 8.7-5.1 9.9-14.5 8.9-1.1-.1-2.3-.1-4.3-.2 5.5-11.8 10.7-23.2 16.2-35.1C916.1 44.4 907 39 898 33.6c11.1-.7 22.4-4 32.5 5.1 3-6.3 5.7-12.1 8.4-17.9 1.2-2.6 2.4-5.1 3.6-7.7 3.8-8.3 8.5-11 17.3-8.7 2.6.7 5.3 3.5 6.5 6 11.4 24.1 22.4 48.3 33.6 72.4.2.4.6.8.9 1.2.1.3.1.7.1 1zm-23.5-19.4c-7.7-16.5-14.8-31.8-22.4-48-4.5 9.8-8.6 18.6-12.8 27.7 10.7 6.4 20.9 12.5 31.2 18.6.8.5 1.8.8 4 1.7zM801.2 5c.9-.2 1.3-.4 1.8-.4 11.7-.9 11.7-.9 16.5 9.6 8.1 17.3 16.1 34.7 24.2 52 .8 1.6 1.6 3.2 2.7 5.5 1.7-3.4 3-6.2 4.4-9.1 8-17.2 16.2-34.3 23.8-51.6 2.2-5.1 5-7.4 10.5-6.5 2.1.3 4.2.1 7.2.1-.9 2.2-1.5 3.7-2.2 5.2-11 23.7-22.3 47.2-33 71.1-2.8 6.3-7.9 4.1-12.3 4.9-3.9.7-7.2-.7-9-4.6-11.5-24.9-22.9-49.9-34.4-74.8-.1-.4-.1-.7-.2-1.4zm-59.5-5c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44-20.4-44-45.5-44zm0 75.6c-18 0-32.6-14.1-32.6-31.6s14.6-31.6 32.6-31.6 32.6 14.1 32.6 31.6-14.6 31.6-32.6 31.6zm-154.4-2.5c2.3-3.5 4.4-6.8 6.7-10.4 3.9 2 7.6 3.9 11.3 5.7 11.9 5.5 24.2 7 36.9 3.7 2.8-.7 5.6-2.1 8.1-3.7 3.5-2.1 4.5-5.6 3.8-9.5-.7-4-3.3-6.2-7.1-6.7-10.4-1.5-20.8-2.7-31.2-4.1-2.8-.4-5.6-.6-8.4-1.1-8.6-1.7-15.2-5.7-17.1-15.1-1.8-8.6 1.3-18 9.4-22.4 6.1-3.4 13.2-5.6 20.1-6.6 12.9-1.8 25.6 0 37.3 6.1 2.6 1.4 5 3.1 8 5-2.9 3.6-5.4 6.7-8.2 10.2-10.3-5.9-21.3-8.9-33-8.1-4.3.3-8.6 1-12.8 2-4.1 1-6.7 4-6.3 8.4.3 4.1 3.6 5.1 7.1 5.7 13 2.1 25.9 4.3 38.9 6.5 9.2 1.6 15.8 6.3 17.5 15.9 1.8 10.1-.3 19.4-9.3 25-5.3 3.3-11.8 5.7-18 6.6-19.1 2.7-37.5.1-53.7-13.1zM515 0c-25.1 0-45.5 19.7-45.5 44s20.4 44 45.5 44 45.5-19.7 45.5-44S540.1 0 515 0zm0 75.6c-18 0-32.6-14.1-32.6-31.6S497 12.4 515 12.4s32.6 14.1 32.6 31.6-14.5 31.6-32.6 31.6zM374.1 19.8v65h-12.5V4.9c6.1 0 12.2-.4 18.2.2 1.8.2 3.6 2.7 4.9 4.6 13.1 18.6 26.2 37.4 39.2 56.1 1.1 1.6 2.3 3.1 4.6 4.5V5.2h12.8v80c-6 0-11.8.3-17.5-.2-1.8-.2-3.8-2.4-5-4.2-13.4-18.9-26.6-37.9-39.9-56.8-1.1-1.6-2.3-3.1-3.5-4.7-.5.1-.9.3-1.3.5zm-64.2 36.3c5.5 9.1 11.3 18.7 17.6 29-5 0-9.2.3-13.2-.2-1.6-.2-3.3-2-4.3-3.6-4.5-7-8.9-14.1-13-21.3-2-3.4-4.4-4.9-8.4-4.9-9.4.2-18.9.1-29 .1v29.5h-13.1V4.5h13.1c13.5-.1 27-.1 40.5-.2 9.6-.1 18.1 2.4 22.8 11.4 5.1 9.8 5.4 20.1-.6 29.5-2.9 4.3-7.9 7-12.4 10.9zm-49.8-15c14.8 0 29.1.1 43.4 0 4.6 0 7.3-2.8 8.5-7.1 2.3-8.8-1.9-15-11.1-15.3-13-.4-26-.1-38.9-.1-.6 0-1.2.3-1.8.5-.1 7.4-.1 14.5-.1 22zM157 56.3c-3.3 7.3-6.3 13.5-9.1 19.9-3.8 8.9-4.4 9.4-14 8.9-1.3-.1-2.6 0-4.8 0 5.5-12 10.8-23.4 16.3-35.3-9.2-5.5-18.3-10.9-27.3-16.3 11.3-1.1 22.6-3.8 32.7 4.8 4.6-9.8 8.9-19.1 13.3-28.5 3.4-7.3 16.4-8.4 21.1-1.6.9 1.2 1.5 2.6 2.2 3.9 10.6 22.8 21.2 45.5 31.7 68.3.6 1.3 1.1 2.7 1.7 4.3-8.9 1.4-16.7-.3-24.1-4.9-13-7.8-26-15.4-39.7-23.5zm5.3-11c11.5 6.9 22.7 13.5 33.8 20.1.3-.3.5-.6.8-1-7.1-15.3-14.2-30.5-21.8-46.9-4.5 9.8-8.6 18.6-12.8 27.8zM1 36h30.8V5.3h71.8V17H46.1v18.4h39.5v13.4h-40v35.7H32.3V48.9H1V36z\"\n    }\n  })])])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"social-icons fixed\"\n  }, [_c('ul', {\n    staticClass: \"social-list\"\n  }, _vm._l((_vm.nav_global[_vm.$route.params.lang]['social']), function(link) {\n    return _c('li', {\n      key: link\n    }, [_c('a', {\n      staticClass: \"social__link\",\n      attrs: {\n        \"href\": link.url,\n        \"target\": \"_blank\"\n      }\n    }, [_vm._v(_vm._s(link.text))])])\n  }))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"lang-switch fixed\"\n  }, [_c('a', {\n    staticClass: \"lang__link\",\n    on: {\n      \"click\": function($event) {\n        _vm.changeLang()\n      }\n    }\n  }, [_vm._v(_vm._s(_vm._f(\"alternateLang\")(_vm.$route.params.lang)))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"menu fixed\"\n  }, [_c('ul', [_c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/idar',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['idar']))])]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/fashion',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['fashion']))])]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/services',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['services']))])]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/farnosova',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['farnosova']))])]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": '/' + _vm.$route.params.lang + '/contact',\n      \"activeClass\": \"active\",\n      \"tag\": \"li\"\n    }\n  }, [_c('a', [_vm._v(_vm._s(_vm.nav_global[_vm.$route.params.lang]['pages']['contact']))])])], 1)])]) : _vm._e()\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-ebcc3378\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/global/nav_global.vue\n// module id = 77\n// module chunks = 14","// threejs.org/license\n'use strict';var THREE={REVISION:\"71\"};\"object\"===typeof module&&(module.exports=THREE);void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});THREE.log=function(){console.log.apply(console,arguments)};THREE.warn=function(){console.warn.apply(console,arguments)};THREE.error=function(){console.error.apply(console,arguments)};THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;\nTHREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;\nTHREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;\nTHREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;\nTHREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;\nTHREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;\nTHREE.Projector=function(){THREE.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\");this.projectVector=function(a,b){THREE.warn(\"THREE.Projector: .projectVector() is now vector.project().\");a.project(b)};this.unprojectVector=function(a,b){THREE.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");a.unproject(b)};this.pickingRay=function(a,b){THREE.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}};\nTHREE.CanvasRenderer=function(){THREE.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\");this.domElement=document.createElement(\"canvas\");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};\nTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):\"number\"===typeof a?this.setHex(a):\"string\"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*\nc:.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a};b=.5>=c?c*(1+b):c+b-c*b;c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(a))return a=/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(a))return a=/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(a),this.r=\nMath.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\\#([0-9a-f]{6})$/i.test(a))return a=/^\\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=\na.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var c=0<b?1/b:1;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=Math.pow(a.b,c);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=\nMath.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k/(e+f):k/(2-e-f);switch(e){case b:g=(c-d)/k+(c<d?6:0);break;case c:g=(d-b)/k+2;break;case d:g=(b-c)/k+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return\"rgb(\"+\n(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;\nreturn this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};\nTHREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,\ndarkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,\ngrey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,\nlime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,\npalegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,\ntomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};\nTHREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;\nthis._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error(\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);\"XYZ\"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"YXZ\"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=\nc*d*h-f*g*e,this._w=c*d*e+f*g*h):\"ZXY\"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"ZYX\"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"YZX\"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):\"XZY\"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,\nb){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5/Math.sqrt(l+1),this._w=.25/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=\n.25*c,this._z=(g+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+k)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=\n-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},\nmultiply:function(a,b){return void 0!==b?(THREE.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,k=b._z,l=b._w;this._x=c*l+f*g+d*k-e*h;this._y=d*l+f*h+e*g-c*k;this._z=e*l+f*k+c*h-d*g;this._w=f*l-c*g-d*h-e*k;this.onChangeCallback();return this},multiplyVector3:function(a){THREE.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");\nreturn a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),k=Math.sqrt(1-g*g);if(.001>Math.abs(k))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;g=Math.sin((1-b)*h)/k;h=\nMath.sin(b*h)/k;this._w=f*g+this._w*h;this._x=c*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=\na;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\nTHREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error(\"index is out of range: \"+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,\nb){if(void 0!==b)return THREE.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},sub:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},\nsubScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);\nthis.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=\nMath.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},\ndistanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===\na&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];return this},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\nTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error(\"index is out of range: \"+\na);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),\nthis.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=\na;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&THREE.error(\"THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.\");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,\nc));return this}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*\nc+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),\nunproject:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=\na):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,\nb=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):\nMath.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},\nsetLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},cross:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=\ne*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this},projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===\na&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){THREE.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},\nsetEulerFromQuaternion:function(a,b){THREE.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(a){THREE.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){THREE.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,\nb){THREE.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;\nreturn this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=\na.array[b+2];return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\nTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;\ncase 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error(\"index is out of range: \"+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,\nb){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return THREE.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=\na;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>\nb?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var l=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>Math.abs(k-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(k+b)&&.1>Math.abs(e+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+g)/4;f=(f+c)/4;k=(k+b)/4;e>h&&e>l?.01>e?(b=0,d=c=.707106781):(b=\nMath.sqrt(e),c=d/b,d=f/b):h>l?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),b=d/c,d=k/c):.01>l?(c=b=.707106781,d=0):(d=Math.sqrt(l),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-k)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+l-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&\n(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=\nMath.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);\nthis.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+\nMath.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},\nfromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=a.array[b+3];return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};\nTHREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=\"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");THREE.Euler.DefaultOrder=\"XYZ\";\nTHREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},copy:function(a){this._x=\na._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],l=e[9],p=e[2],q=e[6],e=e[10];b=b||this._order;\"XYZ\"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,e),this._z=Math.atan2(-f,a)):(this._x=Math.atan2(q,k),this._z=0)):\"YXZ\"===b?(this._x=Math.asin(-d(l,-1,1)),.99999>Math.abs(l)?(this._y=Math.atan2(g,e),this._z=Math.atan2(h,\nk)):(this._y=Math.atan2(-p,a),this._z=0)):\"ZXY\"===b?(this._x=Math.asin(d(q,-1,1)),.99999>Math.abs(q)?(this._y=Math.atan2(-p,e),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,a))):\"ZYX\"===b?(this._y=Math.asin(-d(p,-1,1)),.99999>Math.abs(p)?(this._x=Math.atan2(q,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-f,k))):\"YZX\"===b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-p,a)):(this._x=0,this._y=Math.atan2(g,e))):\"XZY\"===b?(this._z=\nMath.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(q,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-l,e),this._y=0)):THREE.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeRotationFromQuaternion(b);this.setFromRotationMatrix(a,c,d);return this}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,\nb||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._order;return a},toVector3:function(a){return a?\na.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};\nTHREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,\nb){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);\nthis.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};\nTHREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=\nthis.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);\nthis.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>\nthis.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\na.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};\nTHREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);\nthis.makeEmpty();b.traverse(function(b){var e=b.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var f=e.vertices,e=0,g=f.length;e<g;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(e instanceof THREE.BufferGeometry&&void 0!==e.attributes.position)for(f=e.attributes.position.array,e=0,g=f.length;e<g;e+=3)a.set(f[e],f[e+1],f[e+2]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},\nmakeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);\nthis.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-\nthis.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=\nnew THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,\nthis.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);\nthis.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&THREE.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[3]=b;l[6]=c;l[1]=d;l[4]=e;l[7]=f;l[2]=g;l[5]=h;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){THREE.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");return a.applyMatrix3(this)},\nmultiplyVector3Array:function(a){THREE.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=\na;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];\nc=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");THREE.warn(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];\na[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}};\nTHREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&THREE.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,k,l,p,q,n,t,r,s){var u=this.elements;u[0]=a;u[4]=b;u[8]=c;u[12]=d;u[1]=e;u[5]=f;u[9]=g;u[13]=h;u[2]=k;u[6]=l;u[10]=p;u[14]=q;u[3]=n;u[7]=t;u[11]=r;u[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){THREE.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");return this.copyPosition(a)},\ncopyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){var d=this.elements;a.set(d[0],d[1],d[2]);b.set(d[4],d[5],d[6]);c.set(d[8],d[9],d[10]);return this},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements;b=b.elements;var d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),\nf=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&THREE.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if(\"XYZ\"===a.order){a=f*h;var k=f*e,\nl=c*h,p=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=k+l*d;b[5]=a-p*d;b[9]=-c*g;b[2]=p-a*d;b[6]=l+k*d;b[10]=f*g}else\"YXZ\"===a.order?(a=g*h,k=g*e,l=d*h,p=d*e,b[0]=a+p*c,b[4]=l*c-k,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=k*c-l,b[6]=p+a*c,b[10]=f*g):\"ZXY\"===a.order?(a=g*h,k=g*e,l=d*h,p=d*e,b[0]=a-p*c,b[4]=-f*e,b[8]=l+k*c,b[1]=k+l*c,b[5]=f*h,b[9]=p-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):\"ZYX\"===a.order?(a=f*h,k=f*e,l=c*h,p=c*e,b[0]=g*h,b[4]=l*d-k,b[8]=a*d+p,b[1]=g*e,b[5]=p*d+a,b[9]=k*d-l,b[2]=-d,b[6]=c*g,b[10]=f*g):\"YZX\"===\na.order?(a=f*g,k=f*d,l=c*g,p=c*d,b[0]=g*h,b[4]=p-a*e,b[8]=l*e+k,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+l,b[10]=a-p*e):\"XZY\"===a.order&&(a=f*g,k=f*d,l=c*g,p=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+p,b[5]=f*h,b[9]=k*e-l,b[2]=l*e-k,b[6]=c*h,b[10]=p*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){THREE.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");return this.makeRotationFromQuaternion(a)},\nmakeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*h,c=c*k,p=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(p+e);b[4]=l-f;b[8]=c+h;b[1]=l+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+p);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,\nc).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(THREE.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],\nk=c[12],l=c[1],p=c[5],q=c[9],n=c[13],t=c[2],r=c[6],s=c[10],u=c[14],v=c[3],x=c[7],D=c[11],c=c[15],w=d[0],y=d[4],A=d[8],E=d[12],G=d[1],F=d[5],z=d[9],I=d[13],U=d[2],M=d[6],H=d[10],L=d[14],P=d[3],N=d[7],R=d[11],d=d[15];e[0]=f*w+g*G+h*U+k*P;e[4]=f*y+g*F+h*M+k*N;e[8]=f*A+g*z+h*H+k*R;e[12]=f*E+g*I+h*L+k*d;e[1]=l*w+p*G+q*U+n*P;e[5]=l*y+p*F+q*M+n*N;e[9]=l*A+p*z+q*H+n*R;e[13]=l*E+p*I+q*L+n*d;e[2]=t*w+r*G+s*U+u*P;e[6]=t*y+r*F+s*M+u*N;e[10]=t*A+r*z+s*H+u*R;e[14]=t*E+r*I+s*L+u*d;e[3]=v*w+x*G+D*U+c*P;e[7]=v*y+\nx*F+D*M+c*N;e[11]=v*A+x*z+D*H+c*R;e[15]=v*E+x*I+D*L+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=\na;b[15]*=a;return this},multiplyVector3:function(a){THREE.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\");return a.applyProjection(this)},multiplyVector4:function(a){THREE.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},multiplyVector3Array:function(a){THREE.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");\nreturn this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix4(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){THREE.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");a.transformDirection(this)},crossVector:function(a){THREE.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");\nreturn a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],k=a[13],l=a[2],p=a[6],q=a[10],n=a[14];return a[3]*(+e*h*p-d*k*p-e*g*q+c*k*q+d*g*n-c*h*n)+a[7]*(+b*h*n-b*k*q+e*f*q-d*f*n+d*k*l-e*h*l)+a[11]*(+b*k*p-b*g*n-e*f*p+c*f*n+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*p+b*g*q+d*f*p-c*f*q+c*h*l)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];\na[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){THREE.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");var b=\nthis.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],k=d[1],l=d[5],p=d[9],q=d[13],n=d[2],t=d[6],r=d[10],s=d[14],u=d[3],v=d[7],x=d[11],d=d[15];c[0]=p*s*v-q*r*v+q*t*x-l*s*x-p*t*d+l*r*d;c[4]=h*r*v-g*s*v-h*t*x+f*s*x+g*t*d-f*r*d;c[8]=g*q*v-h*p*v+h*l*x-f*q*x-g*l*d+f*p*d;c[12]=h*p*t-g*q*t-h*l*r+f*q*r+g*l*s-f*p*s;c[1]=q*r*u-p*s*u-q*n*x+\nk*s*x+p*n*d-k*r*d;c[5]=g*s*u-h*r*u+h*n*x-e*s*x-g*n*d+e*r*d;c[9]=h*p*u-g*q*u-h*k*x+e*q*x+g*k*d-e*p*d;c[13]=g*q*n-h*p*n+h*k*r-e*q*r-g*k*s+e*p*s;c[2]=l*s*u-q*t*u+q*n*v-k*s*v-l*n*d+k*t*d;c[6]=h*t*u-f*s*u-h*n*v+e*s*v+f*n*d-e*t*d;c[10]=f*q*u-h*l*u+h*k*v-e*q*v-f*k*d+e*l*d;c[14]=h*l*n-f*q*n-h*k*t+e*q*t+f*k*s-e*l*s;c[3]=p*t*u-l*r*u-p*n*v+k*r*v+l*n*x-k*t*x;c[7]=f*r*u-g*t*u+g*n*v-e*r*v-f*n*x+e*t*x;c[11]=g*l*u-f*p*u-g*k*v+e*p*v+f*k*x-e*l*x;c[15]=f*p*n-g*l*n+g*k*t-e*p*t-f*k*r+e*l*r;c=e*c[0]+k*c[4]+n*c[8]+u*c[12];\nif(0==c){if(b)throw Error(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");THREE.warn(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(a){THREE.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(a){THREE.error(\"THREE.Matrix4: .rotateX() has been removed.\")},rotateY:function(a){THREE.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(a){THREE.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},\nrotateByAxis:function(a,b){THREE.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,\nc,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,k=e*f,l=e*g;this.set(k*f+c,k*g-d*h,k*h+d*g,0,k*g+\nd*h,l*g+c,l*h-d*f,0,k*h-d*g,l*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];\nc.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,l=1/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;\ng[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*a));var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,k=c-d,l=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/k;g[9]=0;g[13]=-((c+d)/k);g[2]=0;g[6]=0;g[10]=-2/l;g[14]=-((f+e)/l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],\na[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};\nTHREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);\nvar d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);\nb.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),l=c.dot(this.direction),p=-c.dot(b),q=c.lengthSq(),n=Math.abs(1-k*k),t;0<n?(d=k*p-l,e=k*l-p,t=h*n,0<=d?e>=-t?e<=t?(h=1/n,d*=h,e*=h,k=d*(d+k*e+2*l)+e*(k*d+e+2*p)+q):(e=h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*p)+q):(e=-h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*p)+q):e<=-t?(d=Math.max(0,-(-k*h+l)),e=0<d?-h:Math.min(Math.max(-h,-p),h),k=-d*d+e*(e+2*p)+q):e<=t?(d=0,e=Math.min(Math.max(-h,-p),h),k=e*(e+\n2*p)+q):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-p),h),k=-d*d+e*(e+2*p)+q)):(e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*p)+q);f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=new THREE.Vector3;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;\nif(e>f)return null;f=Math.sqrt(f-e);e=d-f;d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},\nisIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*\ng,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));\nif(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/f,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};\nTHREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=\nthis.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);\nreturn a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};\nTHREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};\nTHREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],p=c[8],q=c[9],n=c[10],t=c[11],r=c[12],s=c[13],u=c[14],c=c[15];b[0].setComponents(f-a,l-g,t-p,c-r).normalize();b[1].setComponents(f+\na,l+g,t+p,c+r).normalize();b[2].setComponents(f+d,l+h,t+q,c+s).normalize();b[3].setComponents(f-d,l-h,t-q,c-s).normalize();b[4].setComponents(f-e,l-k,t-n,c-u).normalize();b[5].setComponents(f+e,l+k,t+n,c+u).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,\nc=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),\ncontainsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};\nTHREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,\nc);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,\nb){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),\ncoplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),g=this.coplanarPoint(b);g.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,g);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&\na.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};\nTHREE.Math={generateUUID:function(){var a=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?b[e]=\"-\":14==e?b[e]=\"4\":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join(\"\")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=\nb)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return Math.floor(this.randFloat(a,b))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=\n180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};\nTHREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,k,l,p,q,n;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+\n2;l=this.points[c[0]];p=this.points[c[1]];q=this.points[c[2]];n=this.points[c[3]];h=g*g;k=g*h;d.x=b(l.x,p.x,q.x,n.x,g,h,k);d.y=b(l.y,p.y,q.y,n.y,g,h,k);d.z=b(l.z,p.z,q.z,n.z,g,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=\na/c,d=this.getPoint(b),g.copy(d),k+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],k=new THREE.Vector3,n=this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=n.chunks[b]-n.chunks[b-1];g=Math.ceil(a*c/n.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),h.push(k.copy(d).clone());\nh.push(k.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();\nTHREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new THREE.Vector3;if(0==l)return h.set(-2,-1,-1);l=1/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}();\nTHREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();\nTHREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||\nnew THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},\nclone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};\nTHREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),\na=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};\nTHREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&\nc[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};\n(function(a){a.Raycaster=function(b,c,f,g){this.ray=new a.Ray(b,c);this.near=f||0;this.far=g||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var b=function(a,b){return a.distance-b.distance},c=function(a,b,f,g){a.raycast(b,f);if(!0===g){a=a.children;g=0;for(var h=a.length;g<h;g++)c(a[g],b,f,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,precision:1E-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c instanceof a.PerspectiveCamera?\n(this.ray.origin.copy(c.position),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(c.position).normalize()):c instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,-1).unproject(c),this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)):a.error(\"THREE.Raycaster: Unsupported camera type.\")},intersectObject:function(a,e){var f=[];c(a,this,f,e);f.sort(b);return f},intersectObjects:function(d,e){var f=[];if(!1===d instanceof Array)return a.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),\nf;for(var g=0,h=d.length;g<h;g++)c(d[g],this,f,e);f.sort(b);return f}}})(THREE);\nTHREE.Object3D=function(){Object.defineProperty(this,\"id\",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Object3D\";this.parent=void 0;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,\nvalue:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d}});this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);\nTHREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){THREE.warn(\"THREE.Object3D: .eulerOrder has been moved to .rotation.order.\");return this.rotation.order},set eulerOrder(a){THREE.warn(\"THREE.Object3D: .eulerOrder has been moved to .rotation.order.\");this.rotation.order=a},get useQuaternion(){THREE.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set useQuaternion(a){THREE.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},\napplyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,\nc);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));\nreturn this}}(),translate:function(a,b){THREE.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,\nb)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return THREE.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",\na),this;a instanceof THREE.Object3D?(void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:\"added\"}),this.children.push(a)):THREE.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",a);return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=void 0,a.dispatchEvent({type:\"removed\"}),this.children.splice(b,1))},getChildByName:function(a){THREE.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");\nreturn this.getObjectByName(a)},getObjectById:function(a){return this.getObjectByProperty(\"id\",a)},getObjectByName:function(a){return this.getObjectByProperty(\"name\",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new THREE.Vector3;this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=\nnew THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,\nb,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverseVisible(a)}},traverseAncestors:function(a){this.parent&&(a(this.parent),\nthis.parent.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},\ntoJSON:function(){var a={metadata:{version:4.3,type:\"Object\",generator:\"ObjectExporter\"}},b={},c={},d=function(b){void 0===a.materials&&(a.materials=[]);if(void 0===c[b.uuid]){var d=b.toJSON();delete d.metadata;c[b.uuid]=d;a.materials.push(d)}return b.uuid},e=function(c){var g={};g.uuid=c.uuid;g.type=c.type;\"\"!==c.name&&(g.name=c.name);\"{}\"!==JSON.stringify(c.userData)&&(g.userData=c.userData);!0!==c.visible&&(g.visible=c.visible);if(c instanceof THREE.PerspectiveCamera)g.fov=c.fov,g.aspect=c.aspect,\ng.near=c.near,g.far=c.far;else if(c instanceof THREE.OrthographicCamera)g.left=c.left,g.right=c.right,g.top=c.top,g.bottom=c.bottom,g.near=c.near,g.far=c.far;else if(c instanceof THREE.AmbientLight)g.color=c.color.getHex();else if(c instanceof THREE.DirectionalLight)g.color=c.color.getHex(),g.intensity=c.intensity;else if(c instanceof THREE.PointLight)g.color=c.color.getHex(),g.intensity=c.intensity,g.distance=c.distance,g.decay=c.decay;else if(c instanceof THREE.SpotLight)g.color=c.color.getHex(),\ng.intensity=c.intensity,g.distance=c.distance,g.angle=c.angle,g.exponent=c.exponent,g.decay=c.decay;else if(c instanceof THREE.HemisphereLight)g.color=c.color.getHex(),g.groundColor=c.groundColor.getHex();else if(c instanceof THREE.Mesh||c instanceof THREE.Line||c instanceof THREE.PointCloud){var h=c.geometry;void 0===a.geometries&&(a.geometries=[]);if(void 0===b[h.uuid]){var k=h.toJSON();delete k.metadata;b[h.uuid]=k;a.geometries.push(k)}g.geometry=h.uuid;g.material=d(c.material);c instanceof THREE.Line&&\n(g.mode=c.mode)}else c instanceof THREE.Sprite&&(g.material=d(c.material));g.matrix=c.matrix.toArray();if(0<c.children.length)for(g.children=[],h=0;h<c.children.length;h++)g.children.push(e(c.children[h]));return g};a.object=e(this);return a},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);\na.matrixWorld.copy(this.matrixWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;\nTHREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0};\nTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.materialIndex=this.materialIndex;for(var b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}};\nTHREE.Face4=function(a,b,c,d,e,f,g){THREE.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");return new THREE.Face3(a,b,c,e,f,g)};THREE.BufferAttribute=function(a,b){this.array=a;this.itemSize=b;this.needsUpdate=!1};\nTHREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},setX:function(a,b){this.array[a*this.itemSize]=b;return this},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},setXY:function(a,\nb,c){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}};\nTHREE.Int8Attribute=function(a,b){THREE.warn(\"THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.Uint8Attribute=function(a,b){THREE.warn(\"THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};\nTHREE.Uint8ClampedAttribute=function(a,b){THREE.warn(\"THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.Int16Attribute=function(a,b){THREE.warn(\"THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};\nTHREE.Uint16Attribute=function(a,b){THREE.warn(\"THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.Int32Attribute=function(a,b){THREE.warn(\"THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};\nTHREE.Uint32Attribute=function(a,b){THREE.warn(\"THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.Float32Attribute=function(a,b){THREE.warn(\"THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};\nTHREE.Float64Attribute=function(a,b){THREE.warn(\"THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.\");return new THREE.BufferAttribute(a,b)};THREE.DynamicBufferAttribute=function(a,b){THREE.BufferAttribute.call(this,a,b);this.updateRange={offset:0,count:-1}};THREE.DynamicBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.DynamicBufferAttribute.prototype.constructor=THREE.DynamicBufferAttribute;\nTHREE.DynamicBufferAttribute.prototype.clone=function(){return new THREE.DynamicBufferAttribute(new this.array.constructor(this.array),this.itemSize)};THREE.BufferGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"BufferGeometry\";this.attributes={};this.attributesKeys=[];this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};\nTHREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c){!1===b instanceof THREE.BufferAttribute?(THREE.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.attributes[a]={array:b,itemSize:c}):(this.attributes[a]=b,this.attributesKeys=Object.keys(this.attributes))},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!==c?c:0})},applyMatrix:function(a){var b=\nthis.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.applyMatrix((new THREE.Matrix4).setPosition(a));return a},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};\nvar c=a.vertices,d=a.faces,e=a.faceVertexUvs,f=b.vertexColors,g=0<e[0].length,h=3==d[0].vertexNormals.length,k=new Float32Array(9*d.length);this.addAttribute(\"position\",new THREE.BufferAttribute(k,3));var l=new Float32Array(9*d.length);this.addAttribute(\"normal\",new THREE.BufferAttribute(l,3));if(f!==THREE.NoColors){var p=new Float32Array(9*d.length);this.addAttribute(\"color\",new THREE.BufferAttribute(p,3))}if(!0===g){var q=new Float32Array(6*d.length);this.addAttribute(\"uv\",new THREE.BufferAttribute(q,\n2))}for(var n=0,t=0,r=0;n<d.length;n++,t+=6,r+=9){var s=d[n],u=c[s.a],v=c[s.b],x=c[s.c];k[r]=u.x;k[r+1]=u.y;k[r+2]=u.z;k[r+3]=v.x;k[r+4]=v.y;k[r+5]=v.z;k[r+6]=x.x;k[r+7]=x.y;k[r+8]=x.z;!0===h?(u=s.vertexNormals[0],v=s.vertexNormals[1],x=s.vertexNormals[2],l[r]=u.x,l[r+1]=u.y,l[r+2]=u.z,l[r+3]=v.x,l[r+4]=v.y,l[r+5]=v.z,l[r+6]=x.x,l[r+7]=x.y,l[r+8]=x.z):(u=s.normal,l[r]=u.x,l[r+1]=u.y,l[r+2]=u.z,l[r+3]=u.x,l[r+4]=u.y,l[r+5]=u.z,l[r+6]=u.x,l[r+7]=u.y,l[r+8]=u.z);f===THREE.FaceColors?(s=s.color,p[r]=\ns.r,p[r+1]=s.g,p[r+2]=s.b,p[r+3]=s.r,p[r+4]=s.g,p[r+5]=s.b,p[r+6]=s.r,p[r+7]=s.g,p[r+8]=s.b):f===THREE.VertexColors&&(u=s.vertexColors[0],v=s.vertexColors[1],s=s.vertexColors[2],p[r]=u.r,p[r+1]=u.g,p[r+2]=u.b,p[r+3]=v.r,p[r+4]=v.g,p[r+5]=v.b,p[r+6]=s.r,p[r+7]=s.g,p[r+8]=s.b);!0===g&&(s=e[0][n][0],u=e[0][n][1],v=e[0][n][2],q[t]=s.x,q[t+1]=s.y,q[t+2]=u.x,q[t+3]=u.y,q[t+4]=v.x,q[t+5]=v.y)}this.computeBoundingSphere();return this},computeBoundingBox:function(){var a=new THREE.Vector3;return function(){null===\nthis.boundingBox&&(this.boundingBox=new THREE.Box3);var b=this.attributes.position.array;if(b){var c=this.boundingBox;c.makeEmpty();for(var d=0,e=b.length;d<e;d+=3)a.set(b[d],b[d+1],b[d+2]),c.expandByPoint(a)}if(void 0===b||0===b.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&THREE.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.')}}(),\ncomputeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.expandByPoint(b);a.center(d);for(var g=0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g);isNaN(this.boundingSphere.radius)&&\nTHREE.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.attributes;if(a.position){var b=a.position.array;if(void 0===a.normal)this.addAttribute(\"normal\",new THREE.BufferAttribute(new Float32Array(b.length),3));else for(var c=a.normal.array,d=0,e=c.length;d<e;d++)c[d]=0;var c=a.normal.array,f,g,h,k=new THREE.Vector3,l=new THREE.Vector3,\np=new THREE.Vector3,q=new THREE.Vector3,n=new THREE.Vector3;if(a.index)for(var t=a.index.array,r=0<this.offsets.length?this.offsets:[{start:0,count:t.length,index:0}],s=0,u=r.length;s<u;++s){e=r[s].start;f=r[s].count;for(var v=r[s].index,d=e,e=e+f;d<e;d+=3)f=3*(v+t[d]),g=3*(v+t[d+1]),h=3*(v+t[d+2]),k.fromArray(b,f),l.fromArray(b,g),p.fromArray(b,h),q.subVectors(p,l),n.subVectors(k,l),q.cross(n),c[f]+=q.x,c[f+1]+=q.y,c[f+2]+=q.z,c[g]+=q.x,c[g+1]+=q.y,c[g+2]+=q.z,c[h]+=q.x,c[h+1]+=q.y,c[h+2]+=q.z}else for(d=\n0,e=b.length;d<e;d+=9)k.fromArray(b,d),l.fromArray(b,d+3),p.fromArray(b,d+6),q.subVectors(p,l),n.subVectors(k,l),q.cross(n),c[d]=q.x,c[d+1]=q.y,c[d+2]=q.z,c[d+3]=q.x,c[d+4]=q.y,c[d+5]=q.z,c[d+6]=q.x,c[d+7]=q.y,c[d+8]=q.z;this.normalizeNormals();a.normal.needsUpdate=!0}},computeTangents:function(){function a(a,b,c){q.fromArray(d,3*a);n.fromArray(d,3*b);t.fromArray(d,3*c);r.fromArray(f,2*a);s.fromArray(f,2*b);u.fromArray(f,2*c);v=n.x-q.x;x=t.x-q.x;D=n.y-q.y;w=t.y-q.y;y=n.z-q.z;A=t.z-q.z;E=s.x-r.x;G=\nu.x-r.x;F=s.y-r.y;z=u.y-r.y;I=1/(E*z-G*F);U.set((z*v-F*x)*I,(z*D-F*w)*I,(z*y-F*A)*I);M.set((E*x-G*v)*I,(E*w-G*D)*I,(E*A-G*y)*I);k[a].add(U);k[b].add(U);k[c].add(U);l[a].add(M);l[b].add(M);l[c].add(M)}function b(a){ha.fromArray(e,3*a);O.copy(ha);ba=k[a];oa.copy(ba);oa.sub(ha.multiplyScalar(ha.dot(ba))).normalize();ja.crossVectors(O,ba);qa=ja.dot(l[a]);ca=0>qa?-1:1;h[4*a]=oa.x;h[4*a+1]=oa.y;h[4*a+2]=oa.z;h[4*a+3]=ca}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||\nvoid 0===this.attributes.uv)THREE.warn(\"THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()\");else{var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&this.addAttribute(\"tangent\",new THREE.BufferAttribute(new Float32Array(4*g),4));for(var h=this.attributes.tangent.array,k=[],l=[],p=0;p<g;p++)k[p]=new THREE.Vector3,\nl[p]=new THREE.Vector3;var q=new THREE.Vector3,n=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector2,s=new THREE.Vector2,u=new THREE.Vector2,v,x,D,w,y,A,E,G,F,z,I,U=new THREE.Vector3,M=new THREE.Vector3,H,L,P,N,R;0===this.drawcalls.length&&this.addDrawCall(0,c.length,0);var V=this.drawcalls,p=0;for(L=V.length;p<L;++p){H=V[p].start;P=V[p].count;var J=V[p].index,g=H;for(H+=P;g<H;g+=3)P=J+c[g],N=J+c[g+1],R=J+c[g+2],a(P,N,R)}var oa=new THREE.Vector3,ja=new THREE.Vector3,ha=new THREE.Vector3,O=new THREE.Vector3,\nca,ba,qa,p=0;for(L=V.length;p<L;++p)for(H=V[p].start,P=V[p].count,J=V[p].index,g=H,H+=P;g<H;g+=3)P=J+c[g],N=J+c[g+1],R=J+c[g+2],b(P),b(N),b(R)}},computeOffsets:function(a){void 0===a&&(a=65535);for(var b=this.attributes.index.array,c=this.attributes.position.array,d=b.length/3,e=new Uint16Array(b.length),f=0,g=0,h=[{start:0,count:0,index:0}],k=h[0],l=0,p=0,q=new Int32Array(6),n=new Int32Array(c.length),t=new Int32Array(c.length),r=0;r<c.length;r++)n[r]=-1,t[r]=-1;for(c=0;c<d;c++){for(var s=p=0;3>\ns;s++)r=b[3*c+s],-1==n[r]?(q[2*s]=r,q[2*s+1]=-1,p++):n[r]<k.index?(q[2*s]=r,q[2*s+1]=-1,l++):(q[2*s]=r,q[2*s+1]=n[r]);if(g+p>k.index+a)for(k={start:f,count:0,index:g},h.push(k),p=0;6>p;p+=2)s=q[p+1],-1<s&&s<k.index&&(q[p+1]=-1);for(p=0;6>p;p+=2)r=q[p],s=q[p+1],-1===s&&(s=g++),n[r]=s,t[s]=r,e[f++]=s-k.index,k.count++}this.reorderBuffers(e,t,g);return this.drawcalls=this.offsets=h},merge:function(a,b){if(!1===a instanceof THREE.BufferGeometry)THREE.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",\na);else{void 0===b&&(b=0);var c=this.attributes,d;for(d in c)if(void 0!==a.attributes[d])for(var e=c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},reorderBuffers:function(a,b,c){var d={},e;for(e in this.attributes)\"index\"!=e&&(d[e]=new this.attributes[e].array.constructor(this.attributes[e].itemSize*\nc));for(var f=0;f<c;f++){var g=b[f];for(e in this.attributes)if(\"index\"!=e)for(var h=this.attributes[e].array,k=this.attributes[e].itemSize,l=d[e],p=0;p<k;p++)l[f*k+p]=h[g*k+p]}this.attributes.index.array=a;for(e in this.attributes)\"index\"!=e&&(this.attributes[e].array=d[e],this.attributes[e].numItems=this.attributes[e].itemSize*c)},toJSON:function(){var a={metadata:{version:4,type:\"BufferGeometry\",generator:\"BufferGeometryExporter\"},uuid:this.uuid,type:this.type,data:{attributes:{}}},b=this.attributes,\nc=this.offsets,d=this.boundingSphere,e;for(e in b){var f=b[e],g=Array.prototype.slice.call(f.array);a.data.attributes[e]={itemSize:f.itemSize,type:f.array.constructor.name,array:g}}0<c.length&&(a.data.offsets=JSON.parse(JSON.stringify(c)));null!==d&&(a.data.boundingSphere={center:d.center.toArray(),radius:d.radius});return a},clone:function(){var a=new THREE.BufferGeometry,b;for(b in this.attributes)a.addAttribute(b,this.attributes[b].clone());b=0;for(var c=this.offsets.length;b<c;b++){var d=this.offsets[b];\na.offsets.push({start:d.start,index:d.index,count:d.count})}return a},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);\nTHREE.Geometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Geometry\";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=\nthis.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};\nTHREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=\nthis.verticesNeedUpdate=!0},fromBufferGeometry:function(a){for(var b=this,c=a.attributes,d=c.position.array,e=void 0!==c.index?c.index.array:void 0,f=void 0!==c.normal?c.normal.array:void 0,g=void 0!==c.color?c.color.array:void 0,h=void 0!==c.uv?c.uv.array:void 0,k=[],l=[],p=c=0;c<d.length;c+=3,p+=2)b.vertices.push(new THREE.Vector3(d[c],d[c+1],d[c+2])),void 0!==f&&k.push(new THREE.Vector3(f[c],f[c+1],f[c+2])),void 0!==g&&b.colors.push(new THREE.Color(g[c],g[c+1],g[c+2])),void 0!==h&&l.push(new THREE.Vector2(h[p],\nh[p+1]));var q=function(a,c,d){var e=void 0!==f?[k[a].clone(),k[c].clone(),k[d].clone()]:[],n=void 0!==g?[b.colors[a].clone(),b.colors[c].clone(),b.colors[d].clone()]:[];b.faces.push(new THREE.Face3(a,c,d,e,n));void 0!==h&&b.faceVertexUvs[0].push([l[a].clone(),l[c].clone(),l[d].clone()])};if(void 0!==e)if(d=a.drawcalls,0<d.length)for(c=0;c<d.length;c++)for(var p=d[c],n=p.start,t=p.count,r=p.index,p=n,n=n+t;p<n;p+=3)q(r+e[p],r+e[p+1],r+e[p+2]);else for(c=0;c<e.length;c+=3)q(e[c],e[c+1],e[c+2]);else for(c=\n0;c<d.length/3;c+=3)q(c,c+1,c+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.applyMatrix((new THREE.Matrix4).setPosition(a));return a},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],\ng=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new THREE.Vector3;if(a){var e,f,g,h=new THREE.Vector3,k=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),k.subVectors(e,f),h.cross(k),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=\n0,b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=\ne.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=\nthis.morphNormals[a].vertexNormals,h,k;c=0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,k={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(h),g.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<\nd;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var a,b,c,d,e,f,g,h,k,l,p,q,n,t,r,s,u,v=[],x=[];c=new THREE.Vector3;var D=new THREE.Vector3,w=new THREE.Vector3,y=new THREE.Vector3,A=new THREE.Vector3;a=0;for(b=this.vertices.length;a<b;a++)v[a]=new THREE.Vector3,x[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)e=this.faces[a],f=this.faceVertexUvs[0][a],d=e.a,u=e.b,e=e.c,g=this.vertices[d],h=this.vertices[u],k=this.vertices[e],\nl=f[0],p=f[1],q=f[2],f=h.x-g.x,n=k.x-g.x,t=h.y-g.y,r=k.y-g.y,h=h.z-g.z,g=k.z-g.z,k=p.x-l.x,s=q.x-l.x,p=p.y-l.y,l=q.y-l.y,q=1/(k*l-s*p),c.set((l*f-p*n)*q,(l*t-p*r)*q,(l*h-p*g)*q),D.set((k*n-s*f)*q,(k*r-s*t)*q,(k*g-s*h)*q),v[d].add(c),v[u].add(c),v[e].add(c),x[d].add(D),x[u].add(D),x[e].add(D);D=[\"a\",\"b\",\"c\",\"d\"];a=0;for(b=this.faces.length;a<b;a++)for(e=this.faces[a],c=0;c<Math.min(e.vertexNormals.length,3);c++)A.copy(e.vertexNormals[c]),d=e[D[c]],u=v[d],w.copy(u),w.sub(A.multiplyScalar(A.dot(u))).normalize(),\ny.crossVectors(e.vertexNormals[c],u),d=y.dot(x[d]),d=0>d?-1:1,e.vertexTangents[c]=new THREE.Vector4(w.x,w.y,w.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);\nthis.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)THREE.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",a);else{var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var p=0,q=g.length;p<q;p++){var n=g[p].clone();void 0!==b&&n.applyMatrix4(b);f.push(n)}p=0;for(q=k.length;p<\nq;p++){var g=k[p],t,r=g.vertexNormals,s=g.vertexColors,n=new THREE.Face3(g.a+e,g.b+e,g.c+e);n.normal.copy(g.normal);void 0!==d&&n.normal.applyMatrix3(d).normalize();b=0;for(f=r.length;b<f;b++)t=r[b].clone(),void 0!==d&&t.applyMatrix3(d).normalize(),n.vertexNormals.push(t);n.color.copy(g.color);b=0;for(f=s.length;b<f;b++)t=s[b],n.vertexColors.push(t.clone());n.materialIndex=g.materialIndex+c;h.push(n)}p=0;for(q=a.length;p<q;p++)if(c=a[p],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());\nl.push(d)}}},mergeMesh:function(a){!1===a instanceof THREE.Mesh?THREE.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",a):(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+\"_\"+Math.round(d.y*e)+\"_\"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<\ng;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return f},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length/3;k.push(a.x,a.y,\na.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==q[b])return q[b];q[b]=p.length;p.push(a.getHex());return q[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==t[b])return t[b];t[b]=n.length/2;n.push(a.x,a.y);return t[b]}var e={metadata:{version:4,type:\"BufferGeometry\",generator:\"BufferGeometryExporter\"},uuid:this.uuid,type:this.type};\"\"!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==\nf[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},p=[],q={},n=[],t={};for(g=0;g<this.faces.length;g++){var r=this.faces[g],s=void 0!==this.faceVertexUvs[0][g],u=0<r.normal.length(),v=0<r.vertexNormals.length,x=1!==r.color.r||1!==r.color.g||1!==r.color.b,D=0<r.vertexColors.length,w=0,w=a(w,0,0),w=a(w,1,!1),w=a(w,2,!1),w=a(w,3,s),w=a(w,4,u),w=a(w,5,v),w=a(w,6,x),w=a(w,7,D);h.push(w);h.push(r.a,r.b,r.c);s&&(s=this.faceVertexUvs[0][g],\nh.push(d(s[0]),d(s[1]),d(s[2])));u&&h.push(b(r.normal));v&&(u=r.vertexNormals,h.push(b(u[0]),b(u[1]),b(u[2])));x&&h.push(c(r.color));D&&(r=r.vertexColors,h.push(c(r[0]),c(r[1]),c(r[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<p.length&&(e.data.colors=p);0<n.length&&(e.data.uvs=[n]);e.data.faces=h;return e},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());c=0;\nfor(d=this.faceVertexUvs.length;c<d;c++){b=this.faceVertexUvs[c];void 0===a.faceVertexUvs[c]&&(a.faceVertexUvs[c]=[]);for(var e=0,f=b.length;e<f;e++){for(var g=b[e],h=[],k=0,l=g.length;k<l;k++)h.push(g[k].clone());a.faceVertexUvs[c].push(h)}}return a},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;\nTHREE.Camera=function(){THREE.Object3D.call(this);this.type=\"Camera\";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();\nTHREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);return a};\nTHREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);this.type=\"CubeCamera\";var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));\nthis.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var k=new THREE.PerspectiveCamera(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,-1));this.add(k);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,n=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=\n1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=n;c.activeCubeFace=5;a.render(b,k,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;\nTHREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.type=\"OrthographicCamera\";this.zoom=1;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(c-a,c+a,d+b,d-b,this.near,this.far)};\nTHREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,a);a.zoom=this.zoom;a.left=this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return a};\nTHREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type=\"PerspectiveCamera\";this.zoom=1;this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;\nTHREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var b=this.fullWidth/this.fullHeight,a=Math.tan(THREE.Math.degToRad(.5*a))*this.near,c=-a,d=b*c,b=Math.abs(b*a-d),c=Math.abs(a-c);this.projectionMatrix.makeFrustum(d+this.x*b/this.fullWidth,d+(this.x+this.width)*b/this.fullWidth,a-(this.y+this.height)*c/this.fullHeight,a-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(a,\nthis.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.zoom=this.zoom;a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return a};THREE.Light=function(a){THREE.Object3D.call(this);this.type=\"Light\";this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;\nTHREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};THREE.AmbientLight=function(a){THREE.Light.call(this,a);this.type=\"AmbientLight\"};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,a);return a};\nTHREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.type=\"AreaLight\";this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight.prototype.constructor=THREE.AreaLight;\nTHREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.type=\"DirectionalLight\";this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;\nthis.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;\nTHREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraLeft=this.shadowCameraLeft;a.shadowCameraRight=this.shadowCameraRight;a.shadowCameraTop=this.shadowCameraTop;a.shadowCameraBottom=this.shadowCameraBottom;a.shadowCameraVisible=\nthis.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;a.shadowCascade=this.shadowCascade;a.shadowCascadeOffset.copy(this.shadowCascadeOffset);a.shadowCascadeCount=this.shadowCascadeCount;a.shadowCascadeBias=this.shadowCascadeBias.slice(0);a.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);a.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);a.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);\na.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return a};THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.type=\"HemisphereLight\";this.position.set(0,100,0);this.groundColor=new THREE.Color(b);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;\nTHREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,a);a.groundColor.copy(this.groundColor);a.intensity=this.intensity;return a};THREE.PointLight=function(a,b,c,d){THREE.Light.call(this,a);this.type=\"PointLight\";this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;\nTHREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.intensity=this.intensity;a.distance=this.distance;a.decay=this.decay;return a};\nTHREE.SpotLight=function(a,b,c,d,e,f){THREE.Light.call(this,a);this.type=\"SpotLight\";this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.exponent=void 0!==e?e:10;this.decay=void 0!==f?f:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=\n512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;\nTHREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.decay=this.decay;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraFov=this.shadowCameraFov;a.shadowCameraVisible=this.shadowCameraVisible;a.shadowBias=this.shadowBias;\na.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;return a};THREE.Cache={files:{},add:function(a,b){this.files[a]=b},get:function(a){return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};\nTHREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\nTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var a=document.createElement(\"div\");a.style.position=\"absolute\";a.style.right=\"0px\";a.style.top=\"0px\";a.style.fontSize=\"0.8em\";a.style.textAlign=\"left\";a.style.background=\"rgba(0,0,0,0.25)\";a.style.color=\"#fff\";a.style.width=\"120px\";a.style.padding=\"0.5em 0.5em 0.5em 0.5em\";a.style.zIndex=1E3;a.innerHTML=\"Loading ...\";return a},updateProgress:function(a){var b=\"Loaded \",b=a.total?b+((100*a.loaded/a.total).toFixed(0)+\n\"%\"):b+((a.loaded/1024).toFixed(2)+\" KB\");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split(\"/\");if(1===a.length)return\"./\";a.pop();return a.join(\"/\")+\"/\"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=this.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function d(a,\nd,e,g,h,k,s){var u=b+e,v,x=THREE.Loader.Handlers.get(u);null!==x?v=x.load(u):(v=new THREE.Texture,x=f.imageLoader,x.crossOrigin=f.crossOrigin,x.load(u,function(a){if(!1===THREE.Math.isPowerOfTwo(a.width)||!1===THREE.Math.isPowerOfTwo(a.height)){var b=c(a.width),d=c(a.height),e=document.createElement(\"canvas\");e.width=b;e.height=d;e.getContext(\"2d\").drawImage(a,0,0,b,d);v.image=e}else v.image=a;v.needsUpdate=!0}));v.sourceFile=e;g&&(v.repeat.set(g[0],g[1]),1!==g[0]&&(v.wrapS=THREE.RepeatWrapping),\n1!==g[1]&&(v.wrapT=THREE.RepeatWrapping));h&&v.offset.set(h[0],h[1]);k&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==e[k[0]]&&(v.wrapS=e[k[0]]),void 0!==e[k[1]]&&(v.wrapT=e[k[1]]));s&&(v.anisotropy=s);a[d]=v}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var f=this,g=\"MeshLambertMaterial\",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();\"phong\"===k?g=\"MeshPhongMaterial\":\n\"basic\"===k&&(g=\"MeshBasicMaterial\")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(h.blending=THREE[a.blending]);void 0!==a.transparent&&(h.transparent=a.transparent);void 0!==a.opacity&&1>a.opacity&&(h.transparent=!0);void 0!==a.depthTest&&(h.depthTest=a.depthTest);void 0!==a.depthWrite&&(h.depthWrite=a.depthWrite);void 0!==a.visible&&(h.visible=a.visible);void 0!==a.flipSided&&(h.side=THREE.BackSide);void 0!==a.doubleSided&&(h.side=THREE.DoubleSide);void 0!==a.wireframe&&(h.wireframe=a.wireframe);\nvoid 0!==a.vertexColors&&(\"face\"===a.vertexColors?h.vertexColors=THREE.FaceColors:a.vertexColors&&(h.vertexColors=THREE.VertexColors));a.colorDiffuse?h.color=e(a.colorDiffuse):a.DbgColor&&(h.color=a.DbgColor);a.colorSpecular&&(h.specular=e(a.colorSpecular));a.colorEmissive&&(h.emissive=e(a.colorEmissive));void 0!==a.transparency&&(console.warn(\"THREE.Loader: transparency has been renamed to opacity\"),a.opacity=a.transparency);void 0!==a.opacity&&(h.opacity=a.opacity);a.specularCoef&&(h.shininess=\na.specularCoef);a.mapDiffuse&&b&&d(h,\"map\",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&d(h,\"lightMap\",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&d(h,\"bumpMap\",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&d(h,\"normalMap\",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&d(h,\"specularMap\",\na.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapAlpha&&b&&d(h,\"alphaMap\",a.mapAlpha,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy);a.mapBumpScale&&(h.bumpScale=a.mapBumpScale);a.mapNormalFactor&&(h.normalScale=new THREE.Vector2(a.mapNormalFactor,a.mapNormalFactor));g=new THREE[g](h);void 0!==a.DbgName&&(g.name=a.DbgName);return g}};\nTHREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,c=this.handlers.length;b<c;b+=2){var d=this.handlers[b+1];if(this.handlers[b].test(a))return d}return null}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=THREE.Cache.get(a);void 0!==f?b&&b(f):(f=new XMLHttpRequest,f.open(\"GET\",a,!0),f.addEventListener(\"load\",function(c){THREE.Cache.add(a,this.response);b&&b(this.response);e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener(\"progress\",function(a){c(a)},!1),void 0!==d&&f.addEventListener(\"error\",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(f.responseType=\nthis.responseType),f.send(null),e.manager.itemStart(a))},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=THREE.Cache.get(a);if(void 0!==f)b(f);else return f=document.createElement(\"img\"),f.addEventListener(\"load\",function(c){THREE.Cache.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener(\"progress\",function(a){c(a)},!1),void 0!==d&&f.addEventListener(\"error\",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.src=a,e.manager.itemStart(a),f},setCrossOrigin:function(a){this.crossOrigin=\na}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&\"string\"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};\nTHREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText),k=h.metadata;if(void 0!==k){if(\"object\"===k.type){THREE.error(\"THREE.JSONLoader: \"+b+\" should be loaded with THREE.ObjectLoader instead.\");return}if(\"scene\"===k.type){THREE.error(\"THREE.JSONLoader: \"+b+\" seems to be a Scene. Use THREE.SceneLoader instead.\");return}}h=a.parse(h,\nd);c(h.geometry,h.materials)}else THREE.error(\"THREE.JSONLoader: \"+b+\" seems to be unreachable or the file is empty.\");a.onLoadComplete()}else THREE.error(\"THREE.JSONLoader: Couldn't load \"+b+\" (\"+f.status+\")\");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader(\"Content-Length\")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader(\"Content-Length\"))};f.open(\"GET\",b,!0);f.withCredentials=this.withCredentials;f.send(null)};\nTHREE.JSONLoader.prototype.parse=function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1;(function(b){var d,g,h,k,l,p,q,n,t,r,s,u,v,x=a.faces;p=a.vertices;var D=a.normals,w=a.colors,y=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&y++;for(d=0;d<y;d++)c.faceVertexUvs[d]=[]}k=0;for(l=p.length;k<l;)d=new THREE.Vector3,d.x=p[k++]*b,d.y=p[k++]*b,d.z=p[k++]*b,c.vertices.push(d);k=0;for(l=x.length;k<l;)if(b=x[k++],t=b&1,h=b&2,d=b&8,q=b&16,r=b&32,p=b&64,b&=128,t){t=new THREE.Face3;\nt.a=x[k];t.b=x[k+1];t.c=x[k+3];s=new THREE.Face3;s.a=x[k+1];s.b=x[k+2];s.c=x[k+3];k+=4;h&&(h=x[k++],t.materialIndex=h,s.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<y;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4>g;g++)n=x[k++],v=u[2*n],n=u[2*n+1],v=new THREE.Vector2(v,n),2!==g&&c.faceVertexUvs[d][h].push(v),0!==g&&c.faceVertexUvs[d][h+1].push(v);q&&(q=3*x[k++],t.normal.set(D[q++],D[q++],D[q]),s.normal.copy(t.normal));if(r)for(d=0;4>d;d++)q=3*x[k++],r=new THREE.Vector3(D[q++],\nD[q++],D[q]),2!==d&&t.vertexNormals.push(r),0!==d&&s.vertexNormals.push(r);p&&(p=x[k++],p=w[p],t.color.setHex(p),s.color.setHex(p));if(b)for(d=0;4>d;d++)p=x[k++],p=w[p],2!==d&&t.vertexColors.push(new THREE.Color(p)),0!==d&&s.vertexColors.push(new THREE.Color(p));c.faces.push(t);c.faces.push(s)}else{t=new THREE.Face3;t.a=x[k++];t.b=x[k++];t.c=x[k++];h&&(h=x[k++],t.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<y;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],g=0;3>g;g++)n=x[k++],v=u[2*n],n=u[2*n+1],\nv=new THREE.Vector2(v,n),c.faceVertexUvs[d][h].push(v);q&&(q=3*x[k++],t.normal.set(D[q++],D[q++],D[q]));if(r)for(d=0;3>d;d++)q=3*x[k++],r=new THREE.Vector3(D[q++],D[q++],D[q]),t.vertexNormals.push(r);p&&(p=x[k++],t.color.setHex(w[p]));if(b)for(d=0;3>d;d++)p=x[k++],t.vertexColors.push(new THREE.Color(w[p]));c.faces.push(t)}})(d);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinWeights.push(new THREE.Vector4(a.skinWeights[d],\n1<b?a.skinWeights[d+1]:0,2<b?a.skinWeights[d+2]:0,3<b?a.skinWeights[d+3]:0));if(a.skinIndices)for(d=0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new THREE.Vector4(a.skinIndices[d],1<b?a.skinIndices[d+1]:0,2<b?a.skinIndices[d+2]:0,3<b?a.skinIndices[d+3]:0));c.bones=a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&THREE.warn(\"THREE.JSONLoader: When skinning, number of vertices (\"+c.vertices.length+\"), skinIndices (\"+\nc.skinIndices.length+\"), and skinWeights (\"+c.skinWeights.length+\") should match.\");c.animation=a.animation;c.animations=a.animations})();(function(b){if(void 0!==a.morphTargets){var d,g,h,k,l,p;d=0;for(g=a.morphTargets.length;d<g;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=a.morphTargets[d].name,c.morphTargets[d].vertices=[],l=c.morphTargets[d].vertices,p=a.morphTargets[d].vertices,h=0,k=p.length;h<k;h+=3){var q=new THREE.Vector3;q.x=p[h]*b;q.y=p[h+1]*b;q.z=p[h+2]*b;l.push(q)}}if(void 0!==\na.morphColors)for(d=0,g=a.morphColors.length;d<g;d++)for(c.morphColors[d]={},c.morphColors[d].name=a.morphColors[d].name,c.morphColors[d].colors=[],k=c.morphColors[d].colors,l=a.morphColors[d].colors,b=0,h=l.length;b<h;b+=3)p=new THREE.Color(16755200),p.setRGB(l[b],l[b+1],l[b+2]),k.push(p)})(d);c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};d=this.initMaterials(a.materials,b);this.needsTangents(d)&&c.computeTangents();return{geometry:c,\nmaterials:d}};THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){f++};this.itemEnd=function(a){e++;if(void 0!==d.onProgress)d.onProgress(a,e,f);if(e===f&&void 0!==d.onLoad)d.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.data.attributes,d;for(d in c){var e=c[d],f=new self[e.type](e.array);b.addAttribute(d,new THREE.BufferAttribute(f,e.itemSize))}c=a.data.offsets;void 0!==c&&(b.offsets=JSON.parse(JSON.stringify(c)));\na=a.data.boundingSphere;void 0!==a&&(c=new THREE.Vector3,void 0!==a.center&&c.fromArray(a.center),b.boundingSphere=new THREE.Sphere(c,a.radius));return b}};THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];void 0!==a.color&&b.color.setHex(a.color);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&(b.shininess=a.shininess);\nvoid 0!==a.uniforms&&(b.uniforms=a.uniforms);void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.shading&&(b.shading=a.shading);void 0!==a.blending&&(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.wireframe&&(b.wireframe=a.wireframe);void 0!==a.size&&\n(b.size=a.size);void 0!==a.sizeAttenuation&&(b.sizeAttenuation=a.sizeAttenuation);if(void 0!==a.materials)for(var c=0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return b}};THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.texturePath=\"\"};\nTHREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){\"\"===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf(\"/\")+1));var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){e.parse(JSON.parse(a),b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==b&&b(e)}),\nd=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case \"PlaneGeometry\":case \"PlaneBufferGeometry\":g=new THREE[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case \"BoxGeometry\":case \"CubeGeometry\":g=\nnew THREE.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case \"CircleGeometry\":g=new THREE.CircleGeometry(h.radius,h.segments);break;case \"CylinderGeometry\":g=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded);break;case \"SphereGeometry\":g=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case \"IcosahedronGeometry\":g=new THREE.IcosahedronGeometry(h.radius,\nh.detail);break;case \"TorusGeometry\":g=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case \"TorusKnotGeometry\":g=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case \"BufferGeometry\":g=d.parse(h);break;case \"Geometry\":g=c.parse(h.data).geometry}g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);b[h.uuid]=g}return b},parseMaterials:function(a,b){var c={};if(void 0!==a)for(var d=function(a){void 0===b[a]&&\nTHREE.warn(\"THREE.ObjectLoader: Undefined texture\",a);return b[a]},e=new THREE.MaterialLoader,f=0,g=a.length;f<g;f++){var h=a[f],k=e.parse(h);k.uuid=h.uuid;void 0!==h.name&&(k.name=h.name);void 0!==h.map&&(k.map=d(h.map));void 0!==h.bumpMap&&(k.bumpMap=d(h.bumpMap),h.bumpScale&&(k.bumpScale=new THREE.Vector2(h.bumpScale,h.bumpScale)));void 0!==h.alphaMap&&(k.alphaMap=d(h.alphaMap));void 0!==h.envMap&&(k.envMap=d(h.envMap));void 0!==h.normalMap&&(k.normalMap=d(h.normalMap),h.normalScale&&(k.normalScale=\nnew THREE.Vector2(h.normalScale,h.normalScale)));void 0!==h.lightMap&&(k.lightMap=d(h.lightMap));void 0!==h.specularMap&&(k.specularMap=d(h.specularMap));c[h.uuid]=k}return c},parseImages:function(a,b){var c=this,d={};if(void 0!==a&&0<a.length){var e=new THREE.LoadingManager(b),f=new THREE.ImageLoader(e);f.setCrossOrigin(this.crossOrigin);for(var e=function(a){c.manager.itemStart(a);return f.load(a,function(){c.manager.itemEnd(a)})},g=0,h=a.length;g<h;g++){var k=a[g],l=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(k.url)?\nk.url:c.texturePath+k.url;d[k.uuid]=e(l)}}return d},parseTextures:function(a,b){var c={};if(void 0!==a)for(var d=0,e=a.length;d<e;d++){var f=a[d];void 0===f.image&&THREE.warn('THREE.ObjectLoader: No \"image\" speficied for',f.uuid);void 0===b[f.image]&&THREE.warn(\"THREE.ObjectLoader: Undefined image\",f.image);var g=new THREE.Texture(b[f.image]);g.needsUpdate=!0;g.uuid=f.uuid;void 0!==f.name&&(g.name=f.name);void 0!==f.repeat&&(g.repeat=new THREE.Vector2(f.repeat[0],f.repeat[1]));void 0!==f.minFilter&&\n(g.minFilter=THREE[f.minFilter]);void 0!==f.magFilter&&(g.magFilter=THREE[f.magFilter]);void 0!==f.anisotropy&&(g.anisotropy=f.anisotropy);f.wrap instanceof Array&&(g.wrapS=THREE[f.wrap[0]],g.wrapT=THREE[f.wrap[1]]);c[f.uuid]=g}return c},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;e=function(a){void 0===c[a]&&THREE.warn(\"THREE.ObjectLoader: Undefined geometry\",a);return c[a]};var f=function(a){void 0===d[a]&&THREE.warn(\"THREE.ObjectLoader: Undefined material\",a);return d[a]};\nswitch(b.type){case \"Scene\":e=new THREE.Scene;break;case \"PerspectiveCamera\":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case \"OrthographicCamera\":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case \"AmbientLight\":e=new THREE.AmbientLight(b.color);break;case \"DirectionalLight\":e=new THREE.DirectionalLight(b.color,b.intensity);break;case \"PointLight\":e=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case \"SpotLight\":e=new THREE.SpotLight(b.color,\nb.intensity,b.distance,b.angle,b.exponent,b.decay);break;case \"HemisphereLight\":e=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case \"Mesh\":e=new THREE.Mesh(e(b.geometry),f(b.material));break;case \"Line\":e=new THREE.Line(e(b.geometry),f(b.material),b.mode);break;case \"PointCloud\":e=new THREE.PointCloud(e(b.geometry),f(b.material));break;case \"Sprite\":e=new THREE.Sprite(f(b.material));break;case \"Group\":e=new THREE.Group;break;default:e=new THREE.Object3D}e.uuid=b.uuid;void 0!==\nb.name&&(e.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale));void 0!==b.visible&&(e.visible=b.visible);void 0!==b.userData&&(e.userData=b.userData);if(void 0!==b.children)for(var g in b.children)e.add(this.parseObject(b.children[g],c,d));return e}}()};\nTHREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){var e=new THREE.ImageLoader(this.manager);e.setCrossOrigin(this.crossOrigin);e.load(a,function(a){a=new THREE.Texture(a);a.needsUpdate=!0;void 0!==b&&b(a)},c,d)},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(){this._parser=null};\nTHREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(a,b,c,d){var e=this,f=new THREE.DataTexture,g=new THREE.XHRLoader;g.setResponseType(\"arraybuffer\");g.load(a,function(a){if(a=e._parser(a))void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping,f.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping,f.magFilter=void 0!==a.magFilter?a.magFilter:\nTHREE.LinearFilter,f.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter,f.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}};THREE.CompressedTextureLoader=function(){this._parser=null};\nTHREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,b,c){var d=this,e=[],f=new THREE.CompressedTexture;f.image=e;var g=new THREE.XHRLoader;g.setResponseType(\"arraybuffer\");if(a instanceof Array){var h=0;c=function(c){g.load(a[c],function(a){a=d._parser(a,!0);e[c]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};h+=1;6===h&&(1==a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.format=a.format,f.needsUpdate=!0,b&&b(f))})};for(var k=0,l=\na.length;k<l;++k)c(k)}else g.load(a,function(a){a=d._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length/a.mipmapCount,g=0;g<c;g++){e[g]={mipmaps:[]};for(var h=0;h<a.mipmapCount;h++)e[g].mipmaps.push(a.mipmaps[g*a.mipmapCount+h]),e[g].format=a.format,e[g].width=a.width,e[g].height=a.height}else f.image.width=a.width,f.image.height=a.height,f.mipmaps=a.mipmaps;1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter);f.format=a.format;f.needsUpdate=!0;b&&b(f)});return f}};\nTHREE.Material=function(){Object.defineProperty(this,\"id\",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Material\";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.colorWrite=this.depthWrite=this.depthTest=!0;this.polygonOffset=\n!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this._needsUpdate=this.visible=!0};\nTHREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)THREE.warn(\"THREE.Material: '\"+b+\"' parameter is undefined.\");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=\"overdraw\"==b?Number(c):c}}},toJSON:function(){var a={metadata:{version:4.2,\ntype:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type};\"\"!==this.name&&(a.name=this.name);this instanceof THREE.MeshBasicMaterial?(a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshLambertMaterial?(a.color=this.color.getHex(),a.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&\n(a.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(a.shading=this.shading),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshPhongMaterial?(a.color=this.color.getHex(),a.emissive=this.emissive.getHex(),a.specular=this.specular.getHex(),a.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(a.shading=this.shading),\nthis.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.PointCloudMaterial?(a.size=this.size,a.sizeAttenuation=\nthis.sizeAttenuation,a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending)):this instanceof THREE.ShaderMaterial?(a.uniforms=this.uniforms,a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(a.color=this.color.getHex());1>this.opacity&&(a.opacity=this.opacity);!1!==this.transparent&&(a.transparent=this.transparent);!1!==this.wireframe&&\n(a.wireframe=this.wireframe);return a},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.blendSrcAlpha=this.blendSrcAlpha;a.blendDstAlpha=this.blendDstAlpha;a.blendEquationAlpha=this.blendEquationAlpha;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=\nthis.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;\nTHREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type=\"LineBasicMaterial\";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap=\"round\";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;\nTHREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};\nTHREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type=\"LineDashedMaterial\";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;\nTHREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};\nTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type=\"MeshBasicMaterial\";this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};\nTHREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;\nTHREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;\na.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};\nTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type=\"MeshLambertMaterial\";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\n\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;\nTHREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=\nthis.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};\nTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type=\"MeshPhongMaterial\";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=\n1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;\nTHREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);a.specularMap=this.specularMap;\na.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};\nTHREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type=\"MeshDepthMaterial\";this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;\nTHREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type=\"MeshNormalMaterial\";this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);\nTHREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type=\"MeshFaceMaterial\";this.materials=a instanceof Array?a:[]};\nTHREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;b<c;b++)a.materials.push(this.materials[b].toJSON());return a},clone:function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a}};\nTHREE.PointCloudMaterial=function(a){THREE.Material.call(this);this.type=\"PointCloudMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial;\nTHREE.PointCloudMaterial.prototype.clone=function(){var a=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleBasicMaterial=function(a){THREE.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.\");return new THREE.PointCloudMaterial(a)};\nTHREE.ParticleSystemMaterial=function(a){THREE.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.\");return new THREE.PointCloudMaterial(a)};\nTHREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type=\"ShaderMaterial\";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=\nthis.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;\nTHREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=\nthis.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type=\"RawShaderMaterial\"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.RawShaderMaterial.prototype.clone=function(){var a=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,a);return a};\nTHREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type=\"SpriteMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;\nTHREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.rotation=this.rotation;a.fog=this.fog;return a};\nTHREE.Texture=function(a,b,c,d,e,f,g,h,k){Object.defineProperty(this,\"id\",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.sourceFile=this.name=\"\";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;\nthis.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;\nTHREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=\nthis.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CubeTexture=function(a,b,c,d,e,f,g,h,k){b=void 0!==b?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.images=a};\nTHREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.clone=function(a){void 0===a&&(a=new THREE.CubeTexture);THREE.Texture.prototype.clone.call(this,a);a.images=this.images;return a};THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,k,l,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);\nTHREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,k,l,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,p);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;\nTHREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.VideoTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var l=this,p=function(){requestAnimationFrame(p);a.readyState===a.HAVE_ENOUGH_DATA&&(l.needsUpdate=!0)};p()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;\nTHREE.Group=function(){THREE.Object3D.call(this);this.type=\"Group\"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);THREE.Group.prototype.constructor=THREE.Group;THREE.PointCloud=function(a,b){THREE.Object3D.call(this);this.type=\"PointCloud\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.PointCloudMaterial({color:16777215*Math.random()})};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);THREE.PointCloud.prototype.constructor=THREE.PointCloud;\nTHREE.PointCloud.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(c,d){var e=this,f=e.geometry,g=c.params.PointCloud.threshold;a.getInverse(this.matrixWorld);b.copy(c.ray).applyMatrix4(a);if(null===f.boundingBox||!1!==b.isIntersectionBox(f.boundingBox)){var h=g/((this.scale.x+this.scale.y+this.scale.z)/3),k=new THREE.Vector3,g=function(a,f){var g=b.distanceToPoint(a);if(g<h){var k=b.closestPointToPoint(a);k.applyMatrix4(e.matrixWorld);var n=c.ray.origin.distanceTo(k);\nd.push({distance:n,distanceToRay:g,point:k.clone(),index:f,face:null,object:e})}};if(f instanceof THREE.BufferGeometry){var l=f.attributes,p=l.position.array;if(void 0!==l.index){var l=l.index.array,q=f.offsets;0===q.length&&(q=[{start:0,count:l.length,index:0}]);for(var n=0,t=q.length;n<t;++n)for(var r=q[n].start,s=q[n].index,f=r,r=r+q[n].count;f<r;f++){var u=s+l[f];k.fromArray(p,3*u);g(k,u)}}else for(l=p.length/3,f=0;f<l;f++)k.set(p[3*f],p[3*f+1],p[3*f+2]),g(k,f)}else for(k=this.geometry.vertices,\nf=0;f<k.length;f++)g(k[f],f)}}}();THREE.PointCloud.prototype.clone=function(a){void 0===a&&(a=new THREE.PointCloud(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.warn(\"THREE.ParticleSystem has been renamed to THREE.PointCloud.\");return new THREE.PointCloud(a,b)};\nTHREE.Line=function(a,b,c){THREE.Object3D.call(this);this.type=\"Line\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.mode=void 0!==c?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;\nTHREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==d.ray.isIntersectionSphere(c)){a.getInverse(this.matrixWorld);b.copy(d.ray).applyMatrix4(a);var h=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,p=new THREE.Vector3,q=this.mode===THREE.LineStrip?1:2;if(g instanceof\nTHREE.BufferGeometry){var n=g.attributes;if(void 0!==n.index){var t=n.index.array,n=n.position.array,r=g.offsets;0===r.length&&(r=[{start:0,count:t.length,index:0}]);for(var s=0;s<r.length;s++)for(var u=r[s].start,v=r[s].count,x=r[s].index,g=u;g<u+v-1;g+=q){var D=x+t[g+1];h.fromArray(n,3*(x+t[g]));k.fromArray(n,3*D);D=b.distanceSqToSegment(h,k,p,l);D>f||(D=b.origin.distanceTo(p),D<d.near||D>d.far||e.push({distance:D,point:l.clone().applyMatrix4(this.matrixWorld),index:g,offsetIndex:s,face:null,faceIndex:null,\nobject:this}))}}else for(n=n.position.array,g=0;g<n.length/3-1;g+=q)h.fromArray(n,3*g),k.fromArray(n,3*g+3),D=b.distanceSqToSegment(h,k,p,l),D>f||(D=b.origin.distanceTo(p),D<d.near||D>d.far||e.push({distance:D,point:l.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g instanceof THREE.Geometry)for(h=g.vertices,k=h.length,g=0;g<k-1;g+=q)D=b.distanceSqToSegment(h[g],h[g+1],p,l),D>f||(D=b.origin.distanceTo(p),D<d.near||D>d.far||e.push({distance:D,point:l.clone().applyMatrix4(this.matrixWorld),\nindex:g,face:null,faceIndex:null,object:this}))}}}();THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.mode));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type=\"Mesh\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};\nTHREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];THREE.warn(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0};\nTHREE.Mesh.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g,h){var k=this.geometry;null===k.boundingSphere&&k.computeBoundingSphere();c.copy(k.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==g.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(g.ray).applyMatrix4(a),null===k.boundingBox||!1!==b.isIntersectionBox(k.boundingBox)))if(k instanceof THREE.BufferGeometry){var l=\nthis.material;if(void 0!==l){var p=k.attributes,q,n,t=g.precision;if(void 0!==p.index){var r=p.index.array,s=p.position.array,u=k.offsets;0===u.length&&(u=[{start:0,count:r.length,index:0}]);for(var v=0,x=u.length;v<x;++v)for(var p=u[v].start,D=u[v].index,k=p,w=p+u[v].count;k<w;k+=3){p=D+r[k];q=D+r[k+1];n=D+r[k+2];d.fromArray(s,3*p);e.fromArray(s,3*q);f.fromArray(s,3*n);var y=l.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,l.side!==THREE.DoubleSide);if(null!==y){y.applyMatrix4(this.matrixWorld);\nvar A=g.ray.origin.distanceTo(y);A<t||A<g.near||A>g.far||h.push({distance:A,point:y,face:new THREE.Face3(p,q,n,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this})}}}else for(s=p.position.array,r=k=0,w=s.length;k<w;k+=3,r+=9)p=k,q=k+1,n=k+2,d.fromArray(s,r),e.fromArray(s,r+3),f.fromArray(s,r+6),y=l.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,l.side!==THREE.DoubleSide),null!==y&&(y.applyMatrix4(this.matrixWorld),A=g.ray.origin.distanceTo(y),A<t||A<g.near||A>\ng.far||h.push({distance:A,point:y,face:new THREE.Face3(p,q,n,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this}))}}else if(k instanceof THREE.Geometry)for(r=this.material instanceof THREE.MeshFaceMaterial,s=!0===r?this.material.materials:null,t=g.precision,u=k.vertices,v=0,x=k.faces.length;v<x;v++)if(D=k.faces[v],l=!0===r?s[D.materialIndex]:this.material,void 0!==l){p=u[D.a];q=u[D.b];n=u[D.c];if(!0===l.morphTargets){y=k.morphTargets;A=this.morphTargetInfluences;d.set(0,0,0);e.set(0,0,0);f.set(0,\n0,0);for(var w=0,E=y.length;w<E;w++){var G=A[w];if(0!==G){var F=y[w].vertices;d.x+=(F[D.a].x-p.x)*G;d.y+=(F[D.a].y-p.y)*G;d.z+=(F[D.a].z-p.z)*G;e.x+=(F[D.b].x-q.x)*G;e.y+=(F[D.b].y-q.y)*G;e.z+=(F[D.b].z-q.z)*G;f.x+=(F[D.c].x-n.x)*G;f.y+=(F[D.c].y-n.y)*G;f.z+=(F[D.c].z-n.z)*G}}d.add(p);e.add(q);f.add(n);p=d;q=e;n=f}y=l.side===THREE.BackSide?b.intersectTriangle(n,q,p,!0):b.intersectTriangle(p,q,n,l.side!==THREE.DoubleSide);null!==y&&(y.applyMatrix4(this.matrixWorld),A=g.ray.origin.distanceTo(y),A<t||\nA<g.near||A>g.far||h.push({distance:A,point:y,face:D,faceIndex:v,object:this}))}}}();THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.type=\"Bone\";this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;\nTHREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),\nthis.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(THREE.warn(\"THREE.Skeleton bonInverses is the wrong length.\"),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};\nTHREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}};\nTHREE.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};\nTHREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();\nTHREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type=\"SkinnedMesh\";this.bindMode=\"attached\";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e,f,g,h=0,k=this.geometry.bones.length;h<k;++h)d=this.geometry.bones[h],e=d.pos,f=d.rotq,g=d.scl,b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.set(e[0],e[1],e[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),void 0!==g?b.scale.set(g[0],g[1],g[2]):b.scale.set(1,\n1,1);h=0;for(k=this.geometry.bones.length;h<k;++h)d=this.geometry.bones[h],-1!==d.parent?a[d.parent].add(a[h]):this.add(a[h])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};\nTHREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};\nTHREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):THREE.warn(\"THREE.SkinnedMesh unreckognized bindMode: \"+this.bindMode)};\nTHREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.type=\"MorphAnimMesh\";this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);\nTHREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};\nTHREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)_?(\\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};\nTHREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):THREE.warn(\"THREE.MorphAnimMesh: animation[\"+a+\"] undefined in .playAnimation()\")};\nTHREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&\n(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};\nTHREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,f=d.length;e<f;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)};\nTHREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object};\nTHREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}();\nTHREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(1<this.objects.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);this.objects[0].object.visible=!0;for(var d=1,e=this.objects.length;d<e;d++)if(c>=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}();\nTHREE.LOD.prototype.clone=function(a){void 0===a&&(a=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,a);for(var b=0,c=this.objects.length;b<c;b++){var d=this.objects[b].object.clone();d.visible=0===b;a.addLevel(d,this.objects[b].distance)}return a};\nTHREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),c=new Float32Array([0,0,1,0,1,1,0,1]),d=new THREE.BufferGeometry;d.addAttribute(\"index\",new THREE.BufferAttribute(a,1));d.addAttribute(\"position\",new THREE.BufferAttribute(b,3));d.addAttribute(\"uv\",new THREE.BufferAttribute(c,2));return function(a){THREE.Object3D.call(this);this.type=\"Sprite\";this.geometry=d;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();\nTHREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceToPoint(a);d>this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};\nTHREE.Particle=THREE.Sprite;THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;\nTHREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};\nTHREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)};THREE.Scene=function(){THREE.Object3D.call(this);this.type=\"Scene\";this.overrideMaterial=this.fog=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.Fog=function(a,b,c){this.name=\"\";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};\nTHREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name=\"\";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.common=\"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n}\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\\n\\tfloat distance = dot( planeNormal, point-pointOnPlane );\\n\\treturn point - distance * planeNormal;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\\n}\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\tif ( decayExponent > 0.0 ) {\\n\\t  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n#ifdef GAMMA_INPUT\\n\\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n#else\\n\\treturn a;\\n#endif\\n}\\nvec3 linearToOutput( in vec3 a ) {\\n#ifdef GAMMA_OUTPUT\\n\\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n#else\\n\\treturn a;\\n#endif\\n}\\n\";\nTHREE.ShaderChunk.alphatest_fragment=\"#ifdef ALPHATEST\\n\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";THREE.ShaderChunk.lights_lambert_vertex=\"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\ntransformedNormal = normalize( transformedNormal );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\\n\\n\\tfloat dotProduct = dot( transformedNormal, dirVector );\\n\\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\\t\\t#endif\\n\\n\\t#endif\\n\\n\\t#ifdef WRAP_AROUND\\n\\n\\t\\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\\t\\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n\\n\\t\\t#endif\\n\\n\\t#endif\\n\\n\\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n\\n\\t#endif\\n\\n}\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\\t\\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\t\\tlVector = normalize( lVector );\\n\\t\\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\\t\\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t#endif\\n\\n\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\\t\\t\\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n\\n\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t#endif\\n\\n\\t\\tvLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\\t\\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\\t\\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\\n\\n\\t\\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\\t\\t\\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\\t\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\\t\\t\\tlVector = normalize( lVector );\\n\\n\\t\\t\\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\t\\t\\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\\t\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\t\\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\\t\\t\\t\\t#endif\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\\t\\t\\t\\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n\\n\\t\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\t\\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n\\n\\t\\t\\t\\t#endif\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t\\tvLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\\n\\n\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t}\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\\n\\n\\t\\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\t\\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\n\\n\\t\\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.map_particle_pars_fragment=\"#ifdef USE_MAP\\n\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n\\n#endif\\n\";THREE.ShaderChunk.default_vertex=\"#ifdef USE_SKINNING\\n\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#elif defined( USE_MORPHTARGETS )\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n\\n#else\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\nTHREE.ShaderChunk.map_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\\tvarying vec2 vUv;\\n\\n#endif\\n\\n#ifdef USE_MAP\\n\\n\\tuniform sampler2D map;\\n\\n#endif\";THREE.ShaderChunk.skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\\t#ifdef USE_MORPHNORMALS\\n\\n\\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n\\n\\t#else\\n\\n\\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n\\tuniform float logDepthBufFC;\\n\\n#endif\";THREE.ShaderChunk.lightmap_pars_vertex=\"#ifdef USE_LIGHTMAP\\n\\n\\tvarying vec2 vUv2;\\n\\n#endif\";THREE.ShaderChunk.lights_phong_fragment=\"#ifndef FLAT_SHADED\\n\\n\\tvec3 normal = normalize( vNormal );\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\\t#endif\\n\\n#else\\n\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\nvec3 viewPosition = normalize( vViewPosition );\\n\\n#ifdef USE_NORMALMAP\\n\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\\t\\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\t\\tlVector = normalize( lVector );\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, lVector );\\n\\n\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n\\t\\t\\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\\t\\t\\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\\t\\t#endif\\n\\n\\t\\ttotalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\\n\\n\\t\\t\\t\\t// specular\\n\\n\\t\\tvec3 pointHalfVector = normalize( lVector + viewPosition );\\n\\t\\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n\\t\\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n\\t\\ttotalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\\t\\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\\t\\tlVector = normalize( lVector );\\n\\n\\t\\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\n\\n\\t\\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\\t\\t\\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\\t\\t\\t// diffuse\\n\\n\\t\\t\\tfloat dotProduct = dot( normal, lVector );\\n\\n\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\\n\\t\\t\\t\\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\\t\\t\\t\\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n\\n\\t\\t\\t#else\\n\\n\\t\\t\\t\\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t\\ttotalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\\n\\n\\t\\t\\t// specular\\n\\n\\t\\t\\tvec3 spotHalfVector = normalize( lVector + viewPosition );\\n\\t\\t\\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\n\\t\\t\\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n\\n\\t\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\t\\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\\n\\t\\t\\ttotalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\\n\\n\\t\\t}\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, dirVector );\\n\\n\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n\\t\\t\\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\\t\\t\\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\\t\\t#endif\\n\\n\\t\\ttotalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n\\t\\t// specular\\n\\n\\t\\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\\n\\t\\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n\\t\\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n\\t\\t/*\\n\\t\\t// fresnel term from skin shader\\n\\t\\tconst float F0 = 0.128;\\n\\n\\t\\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\\n\\t\\tfloat exponential = pow( base, 5.0 );\\n\\n\\t\\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\\n\\t\\t*/\\n\\n\\t\\t/*\\n\\t\\t// fresnel term from fresnel shader\\n\\t\\tconst float mFresnelBias = 0.08;\\n\\t\\tconst float mFresnelScale = 0.3;\\n\\t\\tconst float mFresnelPower = 5.0;\\n\\n\\t\\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\\n\\t\\t*/\\n\\n\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\t// \\t\\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\\n\\n\\t\\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n\\t\\ttotalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, lVector );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\\t\\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\\t\\ttotalDiffuseLight += hemiColor;\\n\\n\\t\\t// specular (sky light)\\n\\n\\t\\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\n\\t\\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\n\\t\\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\\n\\n\\t\\t// specular (ground light)\\n\\n\\t\\tvec3 lVectorGround = -lVector;\\n\\n\\t\\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\n\\t\\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\n\\t\\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\\n\\n\\t\\tfloat dotProductGround = dot( normal, lVectorGround );\\n\\n\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\\n\\t\\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\\n\\t\\ttotalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n\\n\\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\\n\\n#else\\n\\n\\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.fog_pars_fragment=\"#ifdef USE_FOG\\n\\n\\tuniform vec3 fogColor;\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tuniform float fogDensity;\\n\\n\\t#else\\n\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n\\n#endif\";THREE.ShaderChunk.morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\n\\tvec3 morphedNormal = vec3( 0.0 );\\n\\n\\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n\\tmorphedNormal += normal;\\n\\n#endif\";\nTHREE.ShaderChunk.envmap_pars_fragment=\"#ifdef USE_ENVMAP\\n\\n\\tuniform float reflectivity;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tuniform float refractionRatio;\\n\\n\\t#else\\n\\n\\t\\tvarying vec3 vReflect;\\n\\n\\t#endif\\n\\n#endif\\n\";THREE.ShaderChunk.logdepthbuf_fragment=\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\nTHREE.ShaderChunk.normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\n\\t// Per-Pixel Tangent Space Normal Mapping\\n\\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\n\\t}\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_pars_vertex=\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";THREE.ShaderChunk.lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\n\\tvarying vec2 vUv2;\\n\\tuniform sampler2D lightMap;\\n\\n#endif\";THREE.ShaderChunk.shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\n\\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\\t\\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\\t}\\n\\n#endif\";\nTHREE.ShaderChunk.lights_phong_vertex=\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\";THREE.ShaderChunk.map_fragment=\"#ifdef USE_MAP\\n\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\n\\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\\tdiffuseColor *= texelColor;\\n\\n#endif\";THREE.ShaderChunk.lightmap_vertex=\"#ifdef USE_LIGHTMAP\\n\\n\\tvUv2 = uv2;\\n\\n#endif\";THREE.ShaderChunk.map_particle_fragment=\"#ifdef USE_MAP\\n\\n\\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\nTHREE.ShaderChunk.color_pars_fragment=\"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\\n\";THREE.ShaderChunk.color_vertex=\"#ifdef USE_COLOR\\n\\n\\tvColor.xyz = inputToLinear( color.xyz );\\n\\n#endif\";THREE.ShaderChunk.skinning_vertex=\"#ifdef USE_SKINNING\\n\\n\\t#ifdef USE_MORPHTARGETS\\n\\n\\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\\n\\n\\t#else\\n\\n\\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\\n\\n\\t#endif\\n\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_vertex=\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\\tvarying vec3 vReflect;\\n\\n\\tuniform float refractionRatio;\\n\\n#endif\\n\";THREE.ShaderChunk.linear_to_gamma_fragment=\"\\n\\toutgoingLight = linearToOutput( outgoingLight );\\n\";THREE.ShaderChunk.color_pars_vertex=\"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\";THREE.ShaderChunk.lights_lambert_pars_vertex=\"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\\tuniform vec3 wrapRGB;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.map_pars_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";THREE.ShaderChunk.envmap_fragment=\"#ifdef USE_ENVMAP\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\\t\\t// Transforming Normal Vectors with the Inverse Transformation\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t\\t#endif\\n\\n\\t#else\\n\\n\\t\\tvec3 reflectVec = vReflect;\\n\\n\\t#endif\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\t#else\\n\\t\\tfloat flipNormal = 1.0;\\n\\t#endif\\n\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#endif\\n\\n\\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\n\\tuniform sampler2D specularMap;\\n\\n#endif\";THREE.ShaderChunk.logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\\t#endif\\n\\n#endif\";THREE.ShaderChunk.morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\n\\t#else\\n\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\n\\t#endif\\n\\n#endif\";\nTHREE.ShaderChunk.specularmap_fragment=\"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\\tspecularStrength = 1.0;\\n\\n#endif\";THREE.ShaderChunk.fog_fragment=\"#ifdef USE_FOG\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\\t#else\\n\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\\t#endif\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tfloat fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n\\t\\tfogFactor = whiteCompliment( fogFactor );\\n\\n\\t#else\\n\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\\t#endif\\n\\t\\n\\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\nTHREE.ShaderChunk.bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\n\\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\\tvec2 dHdxy_fwd() {\\n\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\\t\\treturn vec2( dBx, dBy );\\n\\n\\t}\\n\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\t\\t// normalized\\n\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\\t}\\n\\n#endif\\n\";\nTHREE.ShaderChunk.defaultnormal_vertex=\"#ifdef USE_SKINNING\\n\\n\\tvec3 objectNormal = skinnedNormal.xyz;\\n\\n#elif defined( USE_MORPHNORMALS )\\n\\n\\tvec3 objectNormal = morphedNormal;\\n\\n#else\\n\\n\\tvec3 objectNormal = normal;\\n\\n#endif\\n\\n#ifdef FLIP_SIDED\\n\\n\\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";THREE.ShaderChunk.lights_phong_pars_fragment=\"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\\tuniform vec3 wrapRGB;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\\tvarying vec3 vNormal;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.skinbase_vertex=\"#ifdef USE_SKINNING\\n\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";THREE.ShaderChunk.map_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\nTHREE.ShaderChunk.lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\n\\toutgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\\n\\n#endif\";THREE.ShaderChunk.shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\n\\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";THREE.ShaderChunk.color_fragment=\"#ifdef USE_COLOR\\n\\n\\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";THREE.ShaderChunk.morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\n\\tvec3 morphed = vec3( 0.0 );\\n\\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\\t#endif\\n\\n\\tmorphed += position;\\n\\n#endif\";\nTHREE.ShaderChunk.envmap_vertex=\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\\t#else\\n\\n\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmap_fragment=\"#ifdef USE_SHADOWMAP\\n\\n\\t#ifdef SHADOWMAP_DEBUG\\n\\n\\t\\tvec3 frustumColors[3];\\n\\t\\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\\t\\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\\t\\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\\t#endif\\n\\n\\t#ifdef SHADOWMAP_CASCADE\\n\\n\\t\\tint inFrustumCount = 0;\\n\\n\\t#endif\\n\\n\\tfloat fDepth;\\n\\tvec3 shadowColor = vec3( 1.0 );\\n\\n\\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\\t\\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\\t\\t\\t\\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\\t\\t\\t\\t// if ( all( something, something ) ) using this instead\\n\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\n\\t\\t\\t\\t// don't shadow pixels outside of light frustum\\n\\t\\t\\t\\t// use just first frustum (for cascades)\\n\\t\\t\\t\\t// don't shadow pixels behind far plane of light frustum\\n\\n\\t\\t#ifdef SHADOWMAP_CASCADE\\n\\n\\t\\t\\tinFrustumCount += int( inFrustum );\\n\\t\\t\\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\\t\\t#endif\\n\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\n\\t\\tif ( frustumTest ) {\\n\\n\\t\\t\\tshadowCoord.z += shadowBias[ i ];\\n\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\\t\\t\\t\\t\\t\\t// Percentage-close filtering\\n\\t\\t\\t\\t\\t\\t// (9 pixel kernel)\\n\\t\\t\\t\\t\\t\\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\\t\\t\\t\\tfloat shadow = 0.0;\\n\\n\\t\\t/*\\n\\t\\t\\t\\t\\t\\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\\t\\t\\t\\t\\t\\t// must enroll loop manually\\n\\n\\t\\t\\t\\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\\t\\t\\t\\t\\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\\t\\t\\t\\t\\t\\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\\t\\t\\t\\t\\t\\t\\t\\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\\t\\t\\t\\t\\t\\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\\t\\t\\t\\t\\t\\tif ( fDepth < shadowCoord.z )\\n\\t\\t\\t\\t\\t\\t\\tshadow += 1.0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tshadow /= 9.0;\\n\\n\\t\\t*/\\n\\n\\t\\t\\t\\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\\t\\t\\t\\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\\t\\t\\t\\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\\t\\t\\t\\tfloat dx0 = -1.25 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy0 = -1.25 * yPixelOffset;\\n\\t\\t\\t\\tfloat dx1 = 1.25 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\\t\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\\t\\t\\t\\t\\t\\t// Percentage-close filtering\\n\\t\\t\\t\\t\\t\\t// (9 pixel kernel)\\n\\t\\t\\t\\t\\t\\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\\t\\t\\t\\tfloat shadow = 0.0;\\n\\n\\t\\t\\t\\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\\t\\t\\t\\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\\t\\t\\t\\tfloat dx0 = -1.0 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy0 = -1.0 * yPixelOffset;\\n\\t\\t\\t\\tfloat dx1 = 1.0 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\\t\\t\\t\\tmat3 shadowKernel;\\n\\t\\t\\t\\tmat3 depthKernel;\\n\\n\\t\\t\\t\\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\\t\\t\\t\\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\\t\\t\\t\\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\\t\\t\\t\\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\\t\\t\\t\\tvec3 shadowZ = vec3( shadowCoord.z );\\n\\t\\t\\t\\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[0] *= vec3(0.25);\\n\\n\\t\\t\\t\\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[1] *= vec3(0.25);\\n\\n\\t\\t\\t\\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[2] *= vec3(0.25);\\n\\n\\t\\t\\t\\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\\t\\t\\t\\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\\t\\t\\t\\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\\t\\t\\t\\tvec4 shadowValues;\\n\\t\\t\\t\\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\\t\\t\\t\\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\\t\\t\\t\\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\\t\\t\\t#else\\n\\n\\t\\t\\t\\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\\t\\t\\t\\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z )\\n\\n\\t\\t// spot with multiple shadows is darker\\n\\n\\t\\t\\t\\t\\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\\t\\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\\t\\t// \\t\\t\\t\\t\\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t}\\n\\n\\n\\t\\t#ifdef SHADOWMAP_DEBUG\\n\\n\\t\\t\\t#ifdef SHADOWMAP_CASCADE\\n\\n\\t\\t\\t\\tif ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\\n\\n\\t\\t\\t#else\\n\\n\\t\\t\\t\\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n\\t// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\\n\\tshadowColor = inputToLinear( shadowColor );\\n\\n\\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\\t#ifdef USE_SKINNING\\n\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\\t#elif defined( USE_MORPHTARGETS )\\n\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\\n\\n\\t#else\\n\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n\\n\\t#endif\\n\\n#endif\\n\";THREE.ShaderChunk.shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\n\\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\\t\\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\\t\\tfloat depth = dot( rgba_depth, bit_shift );\\n\\t\\treturn depth;\\n\\n\\t}\\n\\n#endif\";\nTHREE.ShaderChunk.skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\n\\t#ifdef BONE_TEXTURE\\n\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#else\\n\\n\\t\\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.logdepthbuf_pars_fragment=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\tuniform float logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\t#extension GL_EXT_frag_depth : enable\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n#endif\";THREE.ShaderChunk.alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";THREE.ShaderChunk.alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\n\\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\nTHREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];b[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e}}return b}};\nTHREE.UniformsLib={common:{diffuse:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:\"t\",value:null},specularMap:{type:\"t\",value:null},alphaMap:{type:\"t\",value:null},envMap:{type:\"t\",value:null},flipEnvMap:{type:\"f\",value:-1},reflectivity:{type:\"f\",value:1},refractionRatio:{type:\"f\",value:.98},morphTargetInfluences:{type:\"f\",value:0}},bump:{bumpMap:{type:\"t\",value:null},bumpScale:{type:\"f\",\nvalue:1}},normalmap:{normalMap:{type:\"t\",value:null},normalScale:{type:\"v2\",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:\"fv\",value:[]},directionalLightDirection:{type:\"fv\",value:[]},directionalLightColor:{type:\"fv\",value:[]},hemisphereLightDirection:{type:\"fv\",value:[]},hemisphereLightSkyColor:{type:\"fv\",value:[]},hemisphereLightGroundColor:{type:\"fv\",\nvalue:[]},pointLightColor:{type:\"fv\",value:[]},pointLightPosition:{type:\"fv\",value:[]},pointLightDistance:{type:\"fv1\",value:[]},pointLightDecay:{type:\"fv1\",value:[]},spotLightColor:{type:\"fv\",value:[]},spotLightPosition:{type:\"fv\",value:[]},spotLightDirection:{type:\"fv\",value:[]},spotLightDistance:{type:\"fv1\",value:[]},spotLightAngleCos:{type:\"fv1\",value:[]},spotLightExponent:{type:\"fv1\",value:[]},spotLightDecay:{type:\"fv1\",value:[]}},particle:{psColor:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",\nvalue:1},size:{type:\"f\",value:1},scale:{type:\"f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:\"tv\",value:[]},shadowMapSize:{type:\"v2v\",value:[]},shadowBias:{type:\"fv1\",value:[]},shadowDarkness:{type:\"fv1\",value:[]},shadowMatrix:{type:\"m4v\",value:[]}}};\nTHREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",\nTHREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,\"\\t#ifdef USE_ENVMAP\",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,\"\\t#endif\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,\n\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",\nTHREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,\"\\toutgoingLight = diffuseColor.rgb;\",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},\nlambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:\"c\",value:new THREE.Color(0)},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,\nTHREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,\nTHREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,\nTHREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,\nTHREE.ShaderChunk.specularmap_fragment,\"\\t#ifdef DOUBLE_SIDED\\n\\t\\tif ( gl_FrontFacing )\\n\\t\\t\\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\\n\\t\\telse\\n\\t\\t\\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\\n\\t#else\\n\\t\\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\\n\\t#endif\",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},\nphong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:\"c\",value:new THREE.Color(0)},specular:{type:\"c\",value:new THREE.Color(1118481)},shininess:{type:\"f\",value:30},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\",THREE.ShaderChunk.common,\nTHREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,\nTHREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,\"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"\\tvViewPosition = -mvPosition.xyz;\",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,\nTHREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:[\"uniform float size;\\nuniform float scale;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\tgl_Position = projectionMatrix * mvPosition;\",\nTHREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 psColor;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( psColor, opacity );\",\nTHREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,\"\\toutgoingLight = diffuseColor.rgb;\",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:\"f\",value:1},dashSize:{type:\"f\",value:1},totalSize:{type:\"f\",value:2}}]),\nvertexShader:[\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\",THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,\"\\toutgoingLight = diffuseColor.rgb;\",THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},\ndepth:{uniforms:{mNear:{type:\"f\",value:1},mFar:{type:\"f\",value:2E3},opacity:{type:\"f\",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"void main() {\",THREE.ShaderChunk.logdepthbuf_fragment,\"\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\n\\tgl_FragColor = vec4( vec3( color ), opacity );\\n}\"].join(\"\\n\")},normal:{uniforms:{opacity:{type:\"f\",value:1}},vertexShader:[\"varying vec3 vNormal;\",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\n\"void main() {\\n\\tvNormal = normalize( normalMatrix * normal );\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\\nvarying vec3 vNormal;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,\"}\"].join(\"\\n\")},cube:{uniforms:{tCube:{type:\"t\",value:null},\ntFlip:{type:\"f\",value:-1}},vertexShader:[\"varying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"void main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",THREE.ShaderChunk.logdepthbuf_fragment,\"}\"].join(\"\\n\")},equirect:{uniforms:{tEquirect:{type:\"t\",value:null},tFlip:{type:\"f\",value:-1}},vertexShader:[\"varying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\nTHREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\nvec3 direction = normalize( vWorldPosition );\\nvec2 sampleUV;\\nsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\nsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\ngl_FragColor = texture2D( tEquirect, sampleUV );\",THREE.ShaderChunk.logdepthbuf_fragment,\n\"}\"].join(\"\\n\")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"vec4 pack_depth( const in float depth ) {\\n\\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\\tres -= res.xxyz * bit_mask;\\n\\treturn res;\\n}\\nvoid main() {\",\nTHREE.ShaderChunk.logdepthbuf_fragment,\"\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\\n\\t#else\\n\\t\\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n\\t#endif\\n}\"].join(\"\\n\")}};\nTHREE.WebGLRenderer=function(a){function b(a){var b=a.geometry;a=a.material;var c=b.vertices.length;if(a.attributes){void 0===b.__webglCustomAttributesList&&(b.__webglCustomAttributesList=[]);for(var d in a.attributes){var e=a.attributes[d];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var f=1;\"v2\"===e.type?f=2:\"v3\"===e.type?f=3:\"v4\"===e.type?f=4:\"c\"===e.type&&(f=3);e.size=f;e.array=new Float32Array(c*f);e.buffer=m.createBuffer();e.buffer.belongsToAttribute=d;e.needsUpdate=\n!0}b.__webglCustomAttributesList.push(e)}}}function c(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function d(a,b,c,d){c=c.attributes;var e=b.attributes;b=b.attributesKeys;for(var f=0,g=b.length;f<g;f++){var h=b[f],k=e[h];if(0<=k){var n=c[h];void 0!==n?(h=n.itemSize,m.bindBuffer(m.ARRAY_BUFFER,n.buffer),W.enableAttribute(k),m.vertexAttribPointer(k,h,m.FLOAT,!1,0,d*h*4)):void 0!==a.defaultAttributeValues&&(2===a.defaultAttributeValues[h].length?\nm.vertexAttrib2fv(k,a.defaultAttributeValues[h]):3===a.defaultAttributeValues[h].length&&m.vertexAttrib3fv(k,a.defaultAttributeValues[h]))}}W.disableUnusedAttributes()}function e(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function f(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function g(a,\nb){return b[0]-a[0]}function h(a){if(!1!==a.visible){if(!(a instanceof THREE.Scene||a instanceof THREE.Group)){void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,a.addEventListener(\"removed\",wb));var c=a.geometry;if(void 0!==c&&void 0===c.__webglInit)if(c.__webglInit=!0,c.addEventListener(\"dispose\",jb),c instanceof THREE.BufferGeometry)B.info.memory.geometries++;else if(a instanceof THREE.Mesh)q(a,c);else if(a instanceof THREE.Line){if(void 0===\nc.__webglVertexBuffer){c.__webglVertexBuffer=m.createBuffer();c.__webglColorBuffer=m.createBuffer();c.__webglLineDistanceBuffer=m.createBuffer();B.info.memory.geometries++;var d=c.vertices.length;c.__vertexArray=new Float32Array(3*d);c.__colorArray=new Float32Array(3*d);c.__lineDistanceArray=new Float32Array(1*d);c.__webglLineCount=d;b(a);c.verticesNeedUpdate=!0;c.colorsNeedUpdate=!0;c.lineDistancesNeedUpdate=!0}}else a instanceof THREE.PointCloud&&void 0===c.__webglVertexBuffer&&(c.__webglVertexBuffer=\nm.createBuffer(),c.__webglColorBuffer=m.createBuffer(),B.info.memory.geometries++,d=c.vertices.length,c.__vertexArray=new Float32Array(3*d),c.__colorArray=new Float32Array(3*d),c.__webglParticleCount=d,b(a),c.verticesNeedUpdate=!0,c.colorsNeedUpdate=!0);if(void 0===a.__webglActive)if(a.__webglActive=!0,a instanceof THREE.Mesh)if(c instanceof THREE.BufferGeometry)n(ba,c,a);else{if(c instanceof THREE.Geometry)for(var c=Ua[c.id],d=0,e=c.length;d<e;d++)n(ba,c[d],a)}else a instanceof THREE.Line||a instanceof\nTHREE.PointCloud?n(ba,c,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&qa.push({id:null,object:a,opaque:null,transparent:null,z:0});if(a instanceof THREE.Light)ca.push(a);else if(a instanceof THREE.Sprite)Xa.push(a);else if(a instanceof THREE.LensFlare)Ya.push(a);else if((c=ba[a.id])&&(!1===a.frustumCulled||!0===cb.intersectsObject(a)))for(d=0,e=c.length;d<e;d++){var f=c[d],g=f,k=g.object,l=g.buffer,p=k.geometry,k=k.material;k instanceof THREE.MeshFaceMaterial?(k=k.materials[p instanceof\nTHREE.BufferGeometry?0:l.materialIndex],g.material=k,k.transparent?Qa.push(g):Ka.push(g)):k&&(g.material=k,k.transparent?Qa.push(g):Ka.push(g));f.render=!0;!0===B.sortObjects&&(wa.setFromMatrixPosition(a.matrixWorld),wa.applyProjection(db),f.z=wa.z)}}d=0;for(e=a.children.length;d<e;d++)h(a.children[d])}}function k(a,b,c,d,e){for(var f,g=0,h=a.length;g<h;g++){f=a[g];var k=f.object,m=f.buffer;w(k,b);if(e)f=e;else{f=f.material;if(!f)continue;u(f)}B.setMaterialFaces(f);m instanceof THREE.BufferGeometry?\nB.renderBufferDirect(b,c,d,f,m,k):B.renderBuffer(b,c,d,f,m,k)}}function l(a,b,c,d,e,f){for(var g,h=0,k=a.length;h<k;h++){g=a[h];var m=g.object;if(m.visible){if(f)g=f;else{g=g[b];if(!g)continue;u(g)}B.renderImmediateObject(c,d,e,g,m)}}}function p(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function q(a,b){var d=a.material,e=!1;if(void 0===Ua[b.id]||!0===b.groupsNeedUpdate){delete ba[a.id];for(var f=Ua,g=b.id,d=d instanceof THREE.MeshFaceMaterial,\nh=da.get(\"OES_element_index_uint\")?4294967296:65535,k,e={},l=b.morphTargets.length,p=b.morphNormals.length,q,s={},t=[],r=0,w=b.faces.length;r<w;r++){k=b.faces[r];var u=d?k.materialIndex:0;u in e||(e[u]={hash:u,counter:0});k=e[u].hash+\"_\"+e[u].counter;k in s||(q={id:Qb++,faces3:[],materialIndex:u,vertices:0,numMorphTargets:l,numMorphNormals:p},s[k]=q,t.push(q));s[k].vertices+3>h&&(e[u].counter+=1,k=e[u].hash+\"_\"+e[u].counter,k in s||(q={id:Qb++,faces3:[],materialIndex:u,vertices:0,numMorphTargets:l,\nnumMorphNormals:p},s[k]=q,t.push(q)));s[k].faces3.push(r);s[k].vertices+=3}f[g]=t;b.groupsNeedUpdate=!1}f=Ua[b.id];g=0;for(d=f.length;g<d;g++){h=f[g];if(void 0===h.__webglVertexBuffer){e=h;e.__webglVertexBuffer=m.createBuffer();e.__webglNormalBuffer=m.createBuffer();e.__webglTangentBuffer=m.createBuffer();e.__webglColorBuffer=m.createBuffer();e.__webglUVBuffer=m.createBuffer();e.__webglUV2Buffer=m.createBuffer();e.__webglSkinIndicesBuffer=m.createBuffer();e.__webglSkinWeightsBuffer=m.createBuffer();\ne.__webglFaceBuffer=m.createBuffer();e.__webglLineBuffer=m.createBuffer();if(p=e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],l=0;l<p;l++)e.__webglMorphTargetsBuffers.push(m.createBuffer());if(p=e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],l=0;l<p;l++)e.__webglMorphNormalsBuffers.push(m.createBuffer());B.info.memory.geometries++;e=h;r=a;w=r.geometry;p=e.faces3;l=3*p.length;s=1*p.length;t=3*p.length;p=c(r,e);e.__vertexArray=new Float32Array(3*l);e.__normalArray=new Float32Array(3*l);\ne.__colorArray=new Float32Array(3*l);e.__uvArray=new Float32Array(2*l);1<w.faceVertexUvs.length&&(e.__uv2Array=new Float32Array(2*l));w.hasTangents&&(e.__tangentArray=new Float32Array(4*l));r.geometry.skinWeights.length&&r.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*l),e.__skinWeightArray=new Float32Array(4*l));r=null!==da.get(\"OES_element_index_uint\")&&21845<s?Uint32Array:Uint16Array;e.__typeArray=r;e.__faceArray=new r(3*s);e.__lineArray=new r(2*t);if(w=e.numMorphTargets)for(e.__morphTargetsArrays=\n[],r=0;r<w;r++)e.__morphTargetsArrays.push(new Float32Array(3*l));if(w=e.numMorphNormals)for(e.__morphNormalsArrays=[],r=0;r<w;r++)e.__morphNormalsArrays.push(new Float32Array(3*l));e.__webglFaceCount=3*s;e.__webglLineCount=2*t;if(p.attributes)for(s in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),s=void 0,p.attributes){var t=p.attributes[s],r={},v;for(v in t)r[v]=t[v];if(!r.__webglInitialized||r.createUniqueBuffers)r.__webglInitialized=!0,w=1,\"v2\"===r.type?w=2:\"v3\"===\nr.type?w=3:\"v4\"===r.type?w=4:\"c\"===r.type&&(w=3),r.size=w,r.array=new Float32Array(l*w),r.buffer=m.createBuffer(),r.buffer.belongsToAttribute=s,t.needsUpdate=!0,r.__original=t;e.__webglCustomAttributesList.push(r)}e.__inittedArrays=!0;b.verticesNeedUpdate=!0;b.morphTargetsNeedUpdate=!0;b.elementsNeedUpdate=!0;b.uvsNeedUpdate=!0;b.normalsNeedUpdate=!0;b.tangentsNeedUpdate=!0;e=b.colorsNeedUpdate=!0}else e=!1;(e||void 0===a.__webglActive)&&n(ba,h,a)}a.__webglActive=!0}function n(a,b,c){var d=c.id;a[d]=\na[d]||[];a[d].push({id:d,buffer:b,object:c,material:null,z:0})}function t(a){var b=a.geometry;if(b instanceof THREE.BufferGeometry)for(var d=b.attributes,e=b.attributesKeys,f=0,g=e.length;f<g;f++){var h=e[f],k=d[h],n=\"index\"===h?m.ELEMENT_ARRAY_BUFFER:m.ARRAY_BUFFER;void 0===k.buffer?(k.buffer=m.createBuffer(),m.bindBuffer(n,k.buffer),m.bufferData(n,k.array,k instanceof THREE.DynamicBufferAttribute?m.DYNAMIC_DRAW:m.STATIC_DRAW),k.needsUpdate=!1):!0===k.needsUpdate&&(m.bindBuffer(n,k.buffer),void 0===\nk.updateRange||-1===k.updateRange.count?m.bufferSubData(n,0,k.array):0===k.updateRange.count?console.error(\"THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually.\"):(m.bufferSubData(n,k.updateRange.offset*k.array.BYTES_PER_ELEMENT,k.array.subarray(k.updateRange.offset,k.updateRange.offset+k.updateRange.count)),k.updateRange.count=0),k.needsUpdate=!1)}else if(a instanceof THREE.Mesh){!0===\nb.groupsNeedUpdate&&q(a,b);for(var l=Ua[b.id],f=0,p=l.length;f<p;f++){var t=l[f],w=c(a,t),u=w.attributes&&r(w);if(b.verticesNeedUpdate||b.morphTargetsNeedUpdate||b.elementsNeedUpdate||b.uvsNeedUpdate||b.normalsNeedUpdate||b.colorsNeedUpdate||b.tangentsNeedUpdate||u){var v=t,x=a,D=m.DYNAMIC_DRAW,A=!b.dynamic,E=w;if(v.__inittedArrays){var G=!1===E instanceof THREE.MeshPhongMaterial&&E.shading===THREE.FlatShading,y=void 0,z=void 0,F=void 0,B=void 0,I=void 0,H=void 0,M=void 0,R=void 0,P=void 0,U=void 0,\nO=void 0,J=void 0,L=void 0,N=void 0,Ka=void 0,V=void 0,W=void 0,Qa=void 0,Ya=void 0,Xa=void 0,da=void 0,ba=void 0,ja=void 0,Pa=void 0,ka=void 0,Q=void 0,ha=void 0,ia=void 0,ob=void 0,Y=void 0,ub=void 0,pa=void 0,ab=void 0,oa=void 0,ca=void 0,qa=void 0,Ca=void 0,ta=void 0,na=void 0,wa=void 0,La=0,Ma=0,kb=0,yb=0,zb=0,Ra=0,Aa=0,eb=0,Ha=0,la=0,ra=0,K=0,za=void 0,Sa=v.__vertexArray,Ab=v.__uvArray,lb=v.__uv2Array,Na=v.__normalArray,sa=v.__tangentArray,Da=v.__colorArray,Ea=v.__skinIndexArray,Fa=v.__skinWeightArray,\nGb=v.__morphTargetsArrays,Bb=v.__morphNormalsArrays,mb=v.__webglCustomAttributesList,C=void 0,Va=v.__faceArray,Ta=v.__lineArray,ea=x.geometry,fb=ea.elementsNeedUpdate,vb=ea.uvsNeedUpdate,Mb=ea.normalsNeedUpdate,Ob=ea.tangentsNeedUpdate,ib=ea.colorsNeedUpdate,sb=ea.morphTargetsNeedUpdate,Cb=ea.vertices,$=v.faces3,xa=ea.faces,Hb=ea.faceVertexUvs[0],Oa=ea.faceVertexUvs[1],$a=ea.skinIndices,Ga=ea.skinWeights,nb=ea.morphTargets,bb=ea.morphNormals;if(ea.verticesNeedUpdate){y=0;for(z=$.length;y<z;y++)B=\nxa[$[y]],J=Cb[B.a],L=Cb[B.b],N=Cb[B.c],Sa[Ma]=J.x,Sa[Ma+1]=J.y,Sa[Ma+2]=J.z,Sa[Ma+3]=L.x,Sa[Ma+4]=L.y,Sa[Ma+5]=L.z,Sa[Ma+6]=N.x,Sa[Ma+7]=N.y,Sa[Ma+8]=N.z,Ma+=9;m.bindBuffer(m.ARRAY_BUFFER,v.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Sa,D)}if(sb)for(ca=0,qa=nb.length;ca<qa;ca++){y=ra=0;for(z=$.length;y<z;y++)na=$[y],B=xa[na],J=nb[ca].vertices[B.a],L=nb[ca].vertices[B.b],N=nb[ca].vertices[B.c],Ca=Gb[ca],Ca[ra]=J.x,Ca[ra+1]=J.y,Ca[ra+2]=J.z,Ca[ra+3]=L.x,Ca[ra+4]=L.y,Ca[ra+5]=L.z,Ca[ra+6]=N.x,Ca[ra+\n7]=N.y,Ca[ra+8]=N.z,E.morphNormals&&(G?Xa=Ya=Qa=bb[ca].faceNormals[na]:(wa=bb[ca].vertexNormals[na],Qa=wa.a,Ya=wa.b,Xa=wa.c),ta=Bb[ca],ta[ra]=Qa.x,ta[ra+1]=Qa.y,ta[ra+2]=Qa.z,ta[ra+3]=Ya.x,ta[ra+4]=Ya.y,ta[ra+5]=Ya.z,ta[ra+6]=Xa.x,ta[ra+7]=Xa.y,ta[ra+8]=Xa.z),ra+=9;m.bindBuffer(m.ARRAY_BUFFER,v.__webglMorphTargetsBuffers[ca]);m.bufferData(m.ARRAY_BUFFER,Gb[ca],D);E.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglMorphNormalsBuffers[ca]),m.bufferData(m.ARRAY_BUFFER,Bb[ca],D))}if(Ga.length){y=0;\nfor(z=$.length;y<z;y++)B=xa[$[y]],Pa=Ga[B.a],ka=Ga[B.b],Q=Ga[B.c],Fa[la]=Pa.x,Fa[la+1]=Pa.y,Fa[la+2]=Pa.z,Fa[la+3]=Pa.w,Fa[la+4]=ka.x,Fa[la+5]=ka.y,Fa[la+6]=ka.z,Fa[la+7]=ka.w,Fa[la+8]=Q.x,Fa[la+9]=Q.y,Fa[la+10]=Q.z,Fa[la+11]=Q.w,ha=$a[B.a],ia=$a[B.b],ob=$a[B.c],Ea[la]=ha.x,Ea[la+1]=ha.y,Ea[la+2]=ha.z,Ea[la+3]=ha.w,Ea[la+4]=ia.x,Ea[la+5]=ia.y,Ea[la+6]=ia.z,Ea[la+7]=ia.w,Ea[la+8]=ob.x,Ea[la+9]=ob.y,Ea[la+10]=ob.z,Ea[la+11]=ob.w,la+=12;0<la&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglSkinIndicesBuffer),\nm.bufferData(m.ARRAY_BUFFER,Ea,D),m.bindBuffer(m.ARRAY_BUFFER,v.__webglSkinWeightsBuffer),m.bufferData(m.ARRAY_BUFFER,Fa,D))}if(ib){y=0;for(z=$.length;y<z;y++)B=xa[$[y]],M=B.vertexColors,R=B.color,3===M.length&&E.vertexColors===THREE.VertexColors?(da=M[0],ba=M[1],ja=M[2]):ja=ba=da=R,Da[Ha]=da.r,Da[Ha+1]=da.g,Da[Ha+2]=da.b,Da[Ha+3]=ba.r,Da[Ha+4]=ba.g,Da[Ha+5]=ba.b,Da[Ha+6]=ja.r,Da[Ha+7]=ja.g,Da[Ha+8]=ja.b,Ha+=9;0<Ha&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,Da,\nD))}if(Ob&&ea.hasTangents){y=0;for(z=$.length;y<z;y++)B=xa[$[y]],P=B.vertexTangents,Ka=P[0],V=P[1],W=P[2],sa[Aa]=Ka.x,sa[Aa+1]=Ka.y,sa[Aa+2]=Ka.z,sa[Aa+3]=Ka.w,sa[Aa+4]=V.x,sa[Aa+5]=V.y,sa[Aa+6]=V.z,sa[Aa+7]=V.w,sa[Aa+8]=W.x,sa[Aa+9]=W.y,sa[Aa+10]=W.z,sa[Aa+11]=W.w,Aa+=12;m.bindBuffer(m.ARRAY_BUFFER,v.__webglTangentBuffer);m.bufferData(m.ARRAY_BUFFER,sa,D)}if(Mb){y=0;for(z=$.length;y<z;y++)if(B=xa[$[y]],I=B.vertexNormals,H=B.normal,3===I.length&&!1===G)for(Y=0;3>Y;Y++)pa=I[Y],Na[Ra]=pa.x,Na[Ra+1]=\npa.y,Na[Ra+2]=pa.z,Ra+=3;else for(Y=0;3>Y;Y++)Na[Ra]=H.x,Na[Ra+1]=H.y,Na[Ra+2]=H.z,Ra+=3;m.bindBuffer(m.ARRAY_BUFFER,v.__webglNormalBuffer);m.bufferData(m.ARRAY_BUFFER,Na,D)}if(vb&&Hb){y=0;for(z=$.length;y<z;y++)if(F=$[y],U=Hb[F],void 0!==U)for(Y=0;3>Y;Y++)ab=U[Y],Ab[kb]=ab.x,Ab[kb+1]=ab.y,kb+=2;0<kb&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglUVBuffer),m.bufferData(m.ARRAY_BUFFER,Ab,D))}if(vb&&Oa){y=0;for(z=$.length;y<z;y++)if(F=$[y],O=Oa[F],void 0!==O)for(Y=0;3>Y;Y++)oa=O[Y],lb[yb]=oa.x,lb[yb+1]=oa.y,\nyb+=2;0<yb&&(m.bindBuffer(m.ARRAY_BUFFER,v.__webglUV2Buffer),m.bufferData(m.ARRAY_BUFFER,lb,D))}if(fb){y=0;for(z=$.length;y<z;y++)Va[zb]=La,Va[zb+1]=La+1,Va[zb+2]=La+2,zb+=3,Ta[eb]=La,Ta[eb+1]=La+1,Ta[eb+2]=La,Ta[eb+3]=La+2,Ta[eb+4]=La+1,Ta[eb+5]=La+2,eb+=6,La+=3;m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,v.__webglFaceBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,Va,D);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,v.__webglLineBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,Ta,D)}if(mb)for(Y=0,ub=mb.length;Y<ub;Y++)if(C=\nmb[Y],C.__original.needsUpdate){K=0;if(1===C.size)if(void 0===C.boundTo||\"vertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)B=xa[$[y]],C.array[K]=C.value[B.a],C.array[K+1]=C.value[B.b],C.array[K+2]=C.value[B.c],K+=3;else{if(\"faces\"===C.boundTo)for(y=0,z=$.length;y<z;y++)za=C.value[$[y]],C.array[K]=za,C.array[K+1]=za,C.array[K+2]=za,K+=3}else if(2===C.size)if(void 0===C.boundTo||\"vertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)B=xa[$[y]],J=C.value[B.a],L=C.value[B.b],N=C.value[B.c],C.array[K]=J.x,\nC.array[K+1]=J.y,C.array[K+2]=L.x,C.array[K+3]=L.y,C.array[K+4]=N.x,C.array[K+5]=N.y,K+=6;else{if(\"faces\"===C.boundTo)for(y=0,z=$.length;y<z;y++)N=L=J=za=C.value[$[y]],C.array[K]=J.x,C.array[K+1]=J.y,C.array[K+2]=L.x,C.array[K+3]=L.y,C.array[K+4]=N.x,C.array[K+5]=N.y,K+=6}else if(3===C.size){var T;T=\"c\"===C.type?[\"r\",\"g\",\"b\"]:[\"x\",\"y\",\"z\"];if(void 0===C.boundTo||\"vertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)B=xa[$[y]],J=C.value[B.a],L=C.value[B.b],N=C.value[B.c],C.array[K]=J[T[0]],C.array[K+1]=\nJ[T[1]],C.array[K+2]=J[T[2]],C.array[K+3]=L[T[0]],C.array[K+4]=L[T[1]],C.array[K+5]=L[T[2]],C.array[K+6]=N[T[0]],C.array[K+7]=N[T[1]],C.array[K+8]=N[T[2]],K+=9;else if(\"faces\"===C.boundTo)for(y=0,z=$.length;y<z;y++)N=L=J=za=C.value[$[y]],C.array[K]=J[T[0]],C.array[K+1]=J[T[1]],C.array[K+2]=J[T[2]],C.array[K+3]=L[T[0]],C.array[K+4]=L[T[1]],C.array[K+5]=L[T[2]],C.array[K+6]=N[T[0]],C.array[K+7]=N[T[1]],C.array[K+8]=N[T[2]],K+=9;else if(\"faceVertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)za=C.value[$[y]],\nJ=za[0],L=za[1],N=za[2],C.array[K]=J[T[0]],C.array[K+1]=J[T[1]],C.array[K+2]=J[T[2]],C.array[K+3]=L[T[0]],C.array[K+4]=L[T[1]],C.array[K+5]=L[T[2]],C.array[K+6]=N[T[0]],C.array[K+7]=N[T[1]],C.array[K+8]=N[T[2]],K+=9}else if(4===C.size)if(void 0===C.boundTo||\"vertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)B=xa[$[y]],J=C.value[B.a],L=C.value[B.b],N=C.value[B.c],C.array[K]=J.x,C.array[K+1]=J.y,C.array[K+2]=J.z,C.array[K+3]=J.w,C.array[K+4]=L.x,C.array[K+5]=L.y,C.array[K+6]=L.z,C.array[K+7]=L.w,C.array[K+\n8]=N.x,C.array[K+9]=N.y,C.array[K+10]=N.z,C.array[K+11]=N.w,K+=12;else if(\"faces\"===C.boundTo)for(y=0,z=$.length;y<z;y++)N=L=J=za=C.value[$[y]],C.array[K]=J.x,C.array[K+1]=J.y,C.array[K+2]=J.z,C.array[K+3]=J.w,C.array[K+4]=L.x,C.array[K+5]=L.y,C.array[K+6]=L.z,C.array[K+7]=L.w,C.array[K+8]=N.x,C.array[K+9]=N.y,C.array[K+10]=N.z,C.array[K+11]=N.w,K+=12;else if(\"faceVertices\"===C.boundTo)for(y=0,z=$.length;y<z;y++)za=C.value[$[y]],J=za[0],L=za[1],N=za[2],C.array[K]=J.x,C.array[K+1]=J.y,C.array[K+2]=\nJ.z,C.array[K+3]=J.w,C.array[K+4]=L.x,C.array[K+5]=L.y,C.array[K+6]=L.z,C.array[K+7]=L.w,C.array[K+8]=N.x,C.array[K+9]=N.y,C.array[K+10]=N.z,C.array[K+11]=N.w,K+=12;m.bindBuffer(m.ARRAY_BUFFER,C.buffer);m.bufferData(m.ARRAY_BUFFER,C.array,D)}A&&(delete v.__inittedArrays,delete v.__colorArray,delete v.__normalArray,delete v.__tangentArray,delete v.__uvArray,delete v.__uv2Array,delete v.__faceArray,delete v.__vertexArray,delete v.__lineArray,delete v.__skinIndexArray,delete v.__skinWeightArray)}}}b.verticesNeedUpdate=\n!1;b.morphTargetsNeedUpdate=!1;b.elementsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.tangentsNeedUpdate=!1;w.attributes&&s(w)}else if(a instanceof THREE.Line){w=c(a,b);u=w.attributes&&r(w);if(b.verticesNeedUpdate||b.colorsNeedUpdate||b.lineDistancesNeedUpdate||u){var Db=m.DYNAMIC_DRAW,S,aa,Z,Ba,X,Eb,Rb=b.vertices,Ib=b.colors,gb=b.lineDistances,ya=Rb.length,pb=Ib.length,qb=gb.length,Wa=b.__vertexArray,tb=b.__colorArray,hb=b.__lineDistanceArray,$b=b.colorsNeedUpdate,\nFb=b.lineDistancesNeedUpdate,Sb=b.__webglCustomAttributesList,Jb,cb,ua,Kb,Ia,fa;if(b.verticesNeedUpdate){for(S=0;S<ya;S++)Ba=Rb[S],X=3*S,Wa[X]=Ba.x,Wa[X+1]=Ba.y,Wa[X+2]=Ba.z;m.bindBuffer(m.ARRAY_BUFFER,b.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Wa,Db)}if($b){for(aa=0;aa<pb;aa++)Eb=Ib[aa],X=3*aa,tb[X]=Eb.r,tb[X+1]=Eb.g,tb[X+2]=Eb.b;m.bindBuffer(m.ARRAY_BUFFER,b.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,tb,Db)}if(Fb){for(Z=0;Z<qb;Z++)hb[Z]=gb[Z];m.bindBuffer(m.ARRAY_BUFFER,b.__webglLineDistanceBuffer);\nm.bufferData(m.ARRAY_BUFFER,hb,Db)}if(Sb)for(Jb=0,cb=Sb.length;Jb<cb;Jb++)if(fa=Sb[Jb],fa.needsUpdate&&(void 0===fa.boundTo||\"vertices\"===fa.boundTo)){X=0;Kb=fa.value.length;if(1===fa.size)for(ua=0;ua<Kb;ua++)fa.array[ua]=fa.value[ua];else if(2===fa.size)for(ua=0;ua<Kb;ua++)Ia=fa.value[ua],fa.array[X]=Ia.x,fa.array[X+1]=Ia.y,X+=2;else if(3===fa.size)if(\"c\"===fa.type)for(ua=0;ua<Kb;ua++)Ia=fa.value[ua],fa.array[X]=Ia.r,fa.array[X+1]=Ia.g,fa.array[X+2]=Ia.b,X+=3;else for(ua=0;ua<Kb;ua++)Ia=fa.value[ua],\nfa.array[X]=Ia.x,fa.array[X+1]=Ia.y,fa.array[X+2]=Ia.z,X+=3;else if(4===fa.size)for(ua=0;ua<Kb;ua++)Ia=fa.value[ua],fa.array[X]=Ia.x,fa.array[X+1]=Ia.y,fa.array[X+2]=Ia.z,fa.array[X+3]=Ia.w,X+=4;m.bindBuffer(m.ARRAY_BUFFER,fa.buffer);m.bufferData(m.ARRAY_BUFFER,fa.array,Db);fa.needsUpdate=!1}}b.verticesNeedUpdate=!1;b.colorsNeedUpdate=!1;b.lineDistancesNeedUpdate=!1;w.attributes&&s(w)}else if(a instanceof THREE.PointCloud){w=c(a,b);u=w.attributes&&r(w);if(b.verticesNeedUpdate||b.colorsNeedUpdate||\nu){var db=m.DYNAMIC_DRAW,Tb,Ub,ac,ma,bc,Nb=b.vertices,Vb=Nb.length,Pb=b.colors,rb=Pb.length,cc=b.__vertexArray,dc=b.__colorArray,wb=b.colorsNeedUpdate,gc=b.__webglCustomAttributesList,ec,jb,va,Lb,Ja,ga;if(b.verticesNeedUpdate){for(Tb=0;Tb<Vb;Tb++)ac=Nb[Tb],ma=3*Tb,cc[ma]=ac.x,cc[ma+1]=ac.y,cc[ma+2]=ac.z;m.bindBuffer(m.ARRAY_BUFFER,b.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,cc,db)}if(wb){for(Ub=0;Ub<rb;Ub++)bc=Pb[Ub],ma=3*Ub,dc[ma]=bc.r,dc[ma+1]=bc.g,dc[ma+2]=bc.b;m.bindBuffer(m.ARRAY_BUFFER,\nb.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,dc,db)}if(gc)for(ec=0,jb=gc.length;ec<jb;ec++){ga=gc[ec];if(ga.needsUpdate&&(void 0===ga.boundTo||\"vertices\"===ga.boundTo))if(Lb=ga.value.length,ma=0,1===ga.size)for(va=0;va<Lb;va++)ga.array[va]=ga.value[va];else if(2===ga.size)for(va=0;va<Lb;va++)Ja=ga.value[va],ga.array[ma]=Ja.x,ga.array[ma+1]=Ja.y,ma+=2;else if(3===ga.size)if(\"c\"===ga.type)for(va=0;va<Lb;va++)Ja=ga.value[va],ga.array[ma]=Ja.r,ga.array[ma+1]=Ja.g,ga.array[ma+2]=Ja.b,ma+=3;else for(va=\n0;va<Lb;va++)Ja=ga.value[va],ga.array[ma]=Ja.x,ga.array[ma+1]=Ja.y,ga.array[ma+2]=Ja.z,ma+=3;else if(4===ga.size)for(va=0;va<Lb;va++)Ja=ga.value[va],ga.array[ma]=Ja.x,ga.array[ma+1]=Ja.y,ga.array[ma+2]=Ja.z,ga.array[ma+3]=Ja.w,ma+=4;m.bindBuffer(m.ARRAY_BUFFER,ga.buffer);m.bufferData(m.ARRAY_BUFFER,ga.array,db);ga.needsUpdate=!1}}b.verticesNeedUpdate=!1;b.colorsNeedUpdate=!1;w.attributes&&s(w)}}function r(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function s(a){for(var b in a.attributes)a.attributes[b].needsUpdate=\n!1}function u(a){!0===a.transparent?W.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha):W.setBlending(THREE.NoBlending);W.setDepthTest(a.depthTest);W.setDepthWrite(a.depthWrite);W.setColorWrite(a.colorWrite);W.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}function v(a,b,c,d,e){var f,g,h,k;Mb=0;if(d.needsUpdate){d.program&&hc(d);d.addEventListener(\"dispose\",ic);var n=pc[d.type];if(n){var l=THREE.ShaderLib[n];\nd.__webglShader={uniforms:THREE.UniformsUtils.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}}else d.__webglShader={uniforms:d.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader};for(var p=0,q=0,r=0,s=0,t=0,w=b.length;t<w;t++){var v=b[t];v.onlyShadow||!1===v.visible||(v instanceof THREE.DirectionalLight&&p++,v instanceof THREE.PointLight&&q++,v instanceof THREE.SpotLight&&r++,v instanceof THREE.HemisphereLight&&s++)}f=p;g=q;h=r;k=s;for(var u,z=0,G=\n0,F=b.length;G<F;G++){var J=b[G];J.castShadow&&(J instanceof THREE.SpotLight&&z++,J instanceof THREE.DirectionalLight&&!J.shadowCascade&&z++)}u=z;var H;if(Nb&&e&&e.skeleton&&e.skeleton.useVertexTexture)H=1024;else{var N=m.getParameter(m.MAX_VERTEX_UNIFORM_VECTORS),M=Math.floor((N-20)/4);void 0!==e&&e instanceof THREE.SkinnedMesh&&(M=Math.min(e.skeleton.bones.length,M),M<e.skeleton.bones.length&&THREE.warn(\"WebGLRenderer: too many bones - \"+e.skeleton.bones.length+\", this GPU supports just \"+M+\" (try OpenGL instead of ANGLE)\"));\nH=M}var P={precision:L,supportsVertexTextures:Vb,map:!!d.map,envMap:!!d.envMap,envMapMode:d.envMap&&d.envMap.mapping,lightMap:!!d.lightMap,bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,combine:d.combine,vertexColors:d.vertexColors,fog:c,useFog:d.fog,fogExp:c instanceof THREE.FogExp2,flatShading:d.shading===THREE.FlatShading,sizeAttenuation:d.sizeAttenuation,logarithmicDepthBuffer:ja,skinning:d.skinning,maxBones:H,useVertexTexture:Nb&&e&&e.skeleton&&\ne.skeleton.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:B.maxMorphTargets,maxMorphNormals:B.maxMorphNormals,maxDirLights:f,maxPointLights:g,maxSpotLights:h,maxHemiLights:k,maxShadows:u,shadowMapEnabled:B.shadowMapEnabled&&e.receiveShadow&&0<u,shadowMapType:B.shadowMapType,shadowMapDebug:B.shadowMapDebug,shadowMapCascade:B.shadowMapCascade,alphaTest:d.alphaTest,metal:d.metal,wrapAround:d.wrapAround,doubleSided:d.side===THREE.DoubleSide,flipSided:d.side===\nTHREE.BackSide},R=[];n?R.push(n):(R.push(d.fragmentShader),R.push(d.vertexShader));if(void 0!==d.defines)for(var O in d.defines)R.push(O),R.push(d.defines[O]);for(O in P)R.push(O),R.push(P[O]);for(var Ka=R.join(),V,W=0,Qa=Pa.length;W<Qa;W++){var Ya=Pa[W];if(Ya.code===Ka){V=Ya;V.usedTimes++;break}}void 0===V&&(V=new THREE.WebGLProgram(B,Ka,d,P),Pa.push(V),B.info.memory.programs=Pa.length);d.program=V;var Xa=V.attributes;if(d.morphTargets){d.numSupportedMorphTargets=0;for(var ca,da=\"morphTarget\",ba=\n0;ba<B.maxMorphTargets;ba++)ca=da+ba,0<=Xa[ca]&&d.numSupportedMorphTargets++}if(d.morphNormals)for(d.numSupportedMorphNormals=0,da=\"morphNormal\",ba=0;ba<B.maxMorphNormals;ba++)ca=da+ba,0<=Xa[ca]&&d.numSupportedMorphNormals++;d.uniformsList=[];for(var ha in d.__webglShader.uniforms){var ta=d.program.uniforms[ha];ta&&d.uniformsList.push([d.__webglShader.uniforms[ha],ta])}d.needsUpdate=!1}d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(B.maxMorphTargets));\nvar ab=!1,oa=!1,qa=!1,Ua=d.program,ka=Ua.uniforms,Q=d.__webglShader.uniforms;Ua.id!==ob&&(m.useProgram(Ua.program),ob=Ua.id,qa=oa=ab=!0);d.id!==ub&&(-1===ub&&(qa=!0),ub=d.id,oa=!0);if(ab||a!==vb)m.uniformMatrix4fv(ka.projectionMatrix,!1,a.projectionMatrix.elements),ja&&m.uniform1f(ka.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==vb&&(vb=a),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==ka.cameraPosition&&(wa.setFromMatrixPosition(a.matrixWorld),m.uniform3f(ka.cameraPosition,\nwa.x,wa.y,wa.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshBasicMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==ka.viewMatrix&&m.uniformMatrix4fv(ka.viewMatrix,!1,a.matrixWorldInverse.elements);if(d.skinning)if(e.bindMatrix&&null!==ka.bindMatrix&&m.uniformMatrix4fv(ka.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&null!==ka.bindMatrixInverse&&m.uniformMatrix4fv(ka.bindMatrixInverse,!1,e.bindMatrixInverse.elements),\nNb&&e.skeleton&&e.skeleton.useVertexTexture){if(null!==ka.boneTexture){var db=D();m.uniform1i(ka.boneTexture,db);B.setTexture(e.skeleton.boneTexture,db)}null!==ka.boneTextureWidth&&m.uniform1i(ka.boneTextureWidth,e.skeleton.boneTextureWidth);null!==ka.boneTextureHeight&&m.uniform1i(ka.boneTextureHeight,e.skeleton.boneTextureHeight)}else e.skeleton&&e.skeleton.boneMatrices&&null!==ka.boneGlobalMatrices&&m.uniformMatrix4fv(ka.boneGlobalMatrices,!1,e.skeleton.boneMatrices);if(oa){c&&d.fog&&(Q.fogColor.value=\nc.color,c instanceof THREE.Fog?(Q.fogNear.value=c.near,Q.fogFar.value=c.far):c instanceof THREE.FogExp2&&(Q.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Ob){var qa=!0,ia,Za,Y,bb=0,cb=0,ib=0,xb,pb,qb,Ca,jb,na=jc,rb=na.directional.colors,La=na.directional.positions,Ma=na.point.colors,kb=na.point.positions,yb=na.point.distances,zb=na.point.decays,Ra=na.spot.colors,Aa=na.spot.positions,eb=na.spot.distances,Ha=na.spot.directions,\nla=na.spot.anglesCos,ra=na.spot.exponents,K=na.spot.decays,za=na.hemi.skyColors,Sa=na.hemi.groundColors,Ab=na.hemi.positions,lb=0,Na=0,sa=0,Da=0,Ea=0,Fa=0,Gb=0,Bb=0,mb=0,C=0,Va=0,Ta=0;ia=0;for(Za=b.length;ia<Za;ia++)Y=b[ia],Y.onlyShadow||(xb=Y.color,Ca=Y.intensity,jb=Y.distance,Y instanceof THREE.AmbientLight?Y.visible&&(bb+=xb.r,cb+=xb.g,ib+=xb.b):Y instanceof THREE.DirectionalLight?(Ea+=1,Y.visible&&(pa.setFromMatrixPosition(Y.matrixWorld),wa.setFromMatrixPosition(Y.target.matrixWorld),pa.sub(wa),\npa.normalize(),mb=3*lb,La[mb]=pa.x,La[mb+1]=pa.y,La[mb+2]=pa.z,y(rb,mb,xb,Ca),lb+=1)):Y instanceof THREE.PointLight?(Fa+=1,Y.visible&&(C=3*Na,y(Ma,C,xb,Ca),wa.setFromMatrixPosition(Y.matrixWorld),kb[C]=wa.x,kb[C+1]=wa.y,kb[C+2]=wa.z,yb[Na]=jb,zb[Na]=0===Y.distance?0:Y.decay,Na+=1)):Y instanceof THREE.SpotLight?(Gb+=1,Y.visible&&(Va=3*sa,y(Ra,Va,xb,Ca),pa.setFromMatrixPosition(Y.matrixWorld),Aa[Va]=pa.x,Aa[Va+1]=pa.y,Aa[Va+2]=pa.z,eb[sa]=jb,wa.setFromMatrixPosition(Y.target.matrixWorld),pa.sub(wa),\npa.normalize(),Ha[Va]=pa.x,Ha[Va+1]=pa.y,Ha[Va+2]=pa.z,la[sa]=Math.cos(Y.angle),ra[sa]=Y.exponent,K[sa]=0===Y.distance?0:Y.decay,sa+=1)):Y instanceof THREE.HemisphereLight&&(Bb+=1,Y.visible&&(pa.setFromMatrixPosition(Y.matrixWorld),pa.normalize(),Ta=3*Da,Ab[Ta]=pa.x,Ab[Ta+1]=pa.y,Ab[Ta+2]=pa.z,pb=Y.color,qb=Y.groundColor,y(za,Ta,pb,Ca),y(Sa,Ta,qb,Ca),Da+=1)));ia=3*lb;for(Za=Math.max(rb.length,3*Ea);ia<Za;ia++)rb[ia]=0;ia=3*Na;for(Za=Math.max(Ma.length,3*Fa);ia<Za;ia++)Ma[ia]=0;ia=3*sa;for(Za=Math.max(Ra.length,\n3*Gb);ia<Za;ia++)Ra[ia]=0;ia=3*Da;for(Za=Math.max(za.length,3*Bb);ia<Za;ia++)za[ia]=0;ia=3*Da;for(Za=Math.max(Sa.length,3*Bb);ia<Za;ia++)Sa[ia]=0;na.directional.length=lb;na.point.length=Na;na.spot.length=sa;na.hemi.length=Da;na.ambient[0]=bb;na.ambient[1]=cb;na.ambient[2]=ib;Ob=!1}if(qa){var ea=jc;Q.ambientLightColor.value=ea.ambient;Q.directionalLightColor.value=ea.directional.colors;Q.directionalLightDirection.value=ea.directional.positions;Q.pointLightColor.value=ea.point.colors;Q.pointLightPosition.value=\nea.point.positions;Q.pointLightDistance.value=ea.point.distances;Q.pointLightDecay.value=ea.point.decays;Q.spotLightColor.value=ea.spot.colors;Q.spotLightPosition.value=ea.spot.positions;Q.spotLightDistance.value=ea.spot.distances;Q.spotLightDirection.value=ea.spot.directions;Q.spotLightAngleCos.value=ea.spot.anglesCos;Q.spotLightExponent.value=ea.spot.exponents;Q.spotLightDecay.value=ea.spot.decays;Q.hemisphereLightSkyColor.value=ea.hemi.skyColors;Q.hemisphereLightGroundColor.value=ea.hemi.groundColors;\nQ.hemisphereLightDirection.value=ea.hemi.positions;x(Q,!0)}else x(Q,!1)}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){Q.opacity.value=d.opacity;Q.diffuse.value=d.color;Q.map.value=d.map;Q.lightMap.value=d.lightMap;Q.specularMap.value=d.specularMap;Q.alphaMap.value=d.alphaMap;d.bumpMap&&(Q.bumpMap.value=d.bumpMap,Q.bumpScale.value=d.bumpScale);d.normalMap&&(Q.normalMap.value=d.normalMap,Q.normalScale.value.copy(d.normalScale));\nvar fb;d.map?fb=d.map:d.specularMap?fb=d.specularMap:d.normalMap?fb=d.normalMap:d.bumpMap?fb=d.bumpMap:d.alphaMap&&(fb=d.alphaMap);if(void 0!==fb){var wb=fb.offset,Qb=fb.repeat;Q.offsetRepeat.value.set(wb.x,wb.y,Qb.x,Qb.y)}Q.envMap.value=d.envMap;Q.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;Q.reflectivity.value=d.reflectivity;Q.refractionRatio.value=d.refractionRatio}if(d instanceof THREE.LineBasicMaterial)Q.diffuse.value=d.color,Q.opacity.value=d.opacity;else if(d instanceof\nTHREE.LineDashedMaterial)Q.diffuse.value=d.color,Q.opacity.value=d.opacity,Q.dashSize.value=d.dashSize,Q.totalSize.value=d.dashSize+d.gapSize,Q.scale.value=d.scale;else if(d instanceof THREE.PointCloudMaterial){if(Q.psColor.value=d.color,Q.opacity.value=d.opacity,Q.size.value=d.size,Q.scale.value=U.height/2,Q.map.value=d.map,null!==d.map){var Wb=d.map.offset,Xb=d.map.repeat;Q.offsetRepeat.value.set(Wb.x,Wb.y,Xb.x,Xb.y)}}else d instanceof THREE.MeshPhongMaterial?(Q.shininess.value=d.shininess,Q.emissive.value=\nd.emissive,Q.specular.value=d.specular,d.wrapAround&&Q.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(Q.emissive.value=d.emissive,d.wrapAround&&Q.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(Q.mNear.value=a.near,Q.mFar.value=a.far,Q.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(Q.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&Q.shadowMatrix)for(var sb=0,Cb=0,$=b.length;Cb<$;Cb++){var xa=b[Cb];xa.castShadow&&(xa instanceof\nTHREE.SpotLight||xa instanceof THREE.DirectionalLight&&!xa.shadowCascade)&&(Q.shadowMap.value[sb]=xa.shadowMap,Q.shadowMapSize.value[sb]=xa.shadowMapSize,Q.shadowMatrix.value[sb]=xa.shadowMatrix,Q.shadowDarkness.value[sb]=xa.shadowDarkness,Q.shadowBias.value[sb]=xa.shadowBias,sb++)}for(var Hb=d.uniformsList,Oa,$a,Ga,nb=0,fc=Hb.length;nb<fc;nb++){var T=Hb[nb][0];if(!1!==T.needsUpdate){var Db=T.type,S=T.value,aa=Hb[nb][1];switch(Db){case \"1i\":m.uniform1i(aa,S);break;case \"1f\":m.uniform1f(aa,S);break;\ncase \"2f\":m.uniform2f(aa,S[0],S[1]);break;case \"3f\":m.uniform3f(aa,S[0],S[1],S[2]);break;case \"4f\":m.uniform4f(aa,S[0],S[1],S[2],S[3]);break;case \"1iv\":m.uniform1iv(aa,S);break;case \"3iv\":m.uniform3iv(aa,S);break;case \"1fv\":m.uniform1fv(aa,S);break;case \"2fv\":m.uniform2fv(aa,S);break;case \"3fv\":m.uniform3fv(aa,S);break;case \"4fv\":m.uniform4fv(aa,S);break;case \"Matrix3fv\":m.uniformMatrix3fv(aa,!1,S);break;case \"Matrix4fv\":m.uniformMatrix4fv(aa,!1,S);break;case \"i\":m.uniform1i(aa,S);break;case \"f\":m.uniform1f(aa,\nS);break;case \"v2\":m.uniform2f(aa,S.x,S.y);break;case \"v3\":m.uniform3f(aa,S.x,S.y,S.z);break;case \"v4\":m.uniform4f(aa,S.x,S.y,S.z,S.w);break;case \"c\":m.uniform3f(aa,S.r,S.g,S.b);break;case \"iv1\":m.uniform1iv(aa,S);break;case \"iv\":m.uniform3iv(aa,S);break;case \"fv1\":m.uniform1fv(aa,S);break;case \"fv\":m.uniform3fv(aa,S);break;case \"v2v\":void 0===T._array&&(T._array=new Float32Array(2*S.length));for(var Z=0,Ba=S.length;Z<Ba;Z++)Ga=2*Z,T._array[Ga]=S[Z].x,T._array[Ga+1]=S[Z].y;m.uniform2fv(aa,T._array);\nbreak;case \"v3v\":void 0===T._array&&(T._array=new Float32Array(3*S.length));Z=0;for(Ba=S.length;Z<Ba;Z++)Ga=3*Z,T._array[Ga]=S[Z].x,T._array[Ga+1]=S[Z].y,T._array[Ga+2]=S[Z].z;m.uniform3fv(aa,T._array);break;case \"v4v\":void 0===T._array&&(T._array=new Float32Array(4*S.length));Z=0;for(Ba=S.length;Z<Ba;Z++)Ga=4*Z,T._array[Ga]=S[Z].x,T._array[Ga+1]=S[Z].y,T._array[Ga+2]=S[Z].z,T._array[Ga+3]=S[Z].w;m.uniform4fv(aa,T._array);break;case \"m3\":m.uniformMatrix3fv(aa,!1,S.elements);break;case \"m3v\":void 0===\nT._array&&(T._array=new Float32Array(9*S.length));Z=0;for(Ba=S.length;Z<Ba;Z++)S[Z].flattenToArrayOffset(T._array,9*Z);m.uniformMatrix3fv(aa,!1,T._array);break;case \"m4\":m.uniformMatrix4fv(aa,!1,S.elements);break;case \"m4v\":void 0===T._array&&(T._array=new Float32Array(16*S.length));Z=0;for(Ba=S.length;Z<Ba;Z++)S[Z].flattenToArrayOffset(T._array,16*Z);m.uniformMatrix4fv(aa,!1,T._array);break;case \"t\":Oa=S;$a=D();m.uniform1i(aa,$a);if(!Oa)continue;if(Oa instanceof THREE.CubeTexture||Oa.image instanceof\nArray&&6===Oa.image.length){var X=Oa,Eb=$a;if(6===X.image.length)if(X.needsUpdate){X.image.__webglTextureCube||(X.addEventListener(\"dispose\",Pb),X.image.__webglTextureCube=m.createTexture(),B.info.memory.textures++);m.activeTexture(m.TEXTURE0+Eb);m.bindTexture(m.TEXTURE_CUBE_MAP,X.image.__webglTextureCube);m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,X.flipY);for(var Rb=X instanceof THREE.CompressedTexture,Ib=X.image[0]instanceof THREE.DataTexture,gb=[],ya=0;6>ya;ya++)gb[ya]=!B.autoScaleCubemaps||Rb||Ib?Ib?\nX.image[ya].image:X.image[ya]:E(X.image[ya],qc);var Yb=gb[0],Zb=THREE.Math.isPowerOfTwo(Yb.width)&&THREE.Math.isPowerOfTwo(Yb.height),Wa=I(X.format),tb=I(X.type);A(m.TEXTURE_CUBE_MAP,X,Zb);for(ya=0;6>ya;ya++)if(Rb)for(var hb,$b=gb[ya].mipmaps,Fb=0,Sb=$b.length;Fb<Sb;Fb++)hb=$b[Fb],X.format!==THREE.RGBAFormat&&X.format!==THREE.RGBFormat?-1<kc().indexOf(Wa)?m.compressedTexImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+ya,Fb,Wa,hb.width,hb.height,0,hb.data):THREE.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\"):\nm.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+ya,Fb,Wa,hb.width,hb.height,0,Wa,tb,hb.data);else Ib?m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+ya,0,Wa,gb[ya].width,gb[ya].height,0,Wa,tb,gb[ya].data):m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+ya,0,Wa,Wa,tb,gb[ya]);X.generateMipmaps&&Zb&&m.generateMipmap(m.TEXTURE_CUBE_MAP);X.needsUpdate=!1;if(X.onUpdate)X.onUpdate()}else m.activeTexture(m.TEXTURE0+Eb),m.bindTexture(m.TEXTURE_CUBE_MAP,X.image.__webglTextureCube)}else if(Oa instanceof THREE.WebGLRenderTargetCube){var Jb=\nOa;m.activeTexture(m.TEXTURE0+$a);m.bindTexture(m.TEXTURE_CUBE_MAP,Jb.__webglTexture)}else B.setTexture(Oa,$a);break;case \"tv\":void 0===T._array&&(T._array=[]);Z=0;for(Ba=T.value.length;Z<Ba;Z++)T._array[Z]=D();m.uniform1iv(aa,T._array);Z=0;for(Ba=T.value.length;Z<Ba;Z++)Oa=T.value[Z],$a=T._array[Z],Oa&&B.setTexture(Oa,$a);break;default:THREE.warn(\"THREE.WebGLRenderer: Unknown uniform type: \"+Db)}}}}m.uniformMatrix4fv(ka.modelViewMatrix,!1,e._modelViewMatrix.elements);ka.normalMatrix&&m.uniformMatrix3fv(ka.normalMatrix,\n!1,e._normalMatrix.elements);null!==ka.modelMatrix&&m.uniformMatrix4fv(ka.modelMatrix,!1,e.matrixWorld.elements);return Ua}function x(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.pointLightDecay.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=\nb;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.spotLightDecay.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function D(){var a=Mb;a>=Wb&&THREE.warn(\"WebGLRenderer: trying to use \"+a+\" texture units while this GPU supports only \"+Wb);Mb+=1;return a}function w(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}\nfunction y(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function A(a,b,c){c?(m.texParameteri(a,m.TEXTURE_WRAP_S,I(b.wrapS)),m.texParameteri(a,m.TEXTURE_WRAP_T,I(b.wrapT)),m.texParameteri(a,m.TEXTURE_MAG_FILTER,I(b.magFilter)),m.texParameteri(a,m.TEXTURE_MIN_FILTER,I(b.minFilter))):(m.texParameteri(a,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(a,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),b.wrapS===THREE.ClampToEdgeWrapping&&b.wrapT===THREE.ClampToEdgeWrapping||THREE.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( \"+\nb.sourceFile+\" )\"),m.texParameteri(a,m.TEXTURE_MAG_FILTER,z(b.magFilter)),m.texParameteri(a,m.TEXTURE_MIN_FILTER,z(b.minFilter)),b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&THREE.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( \"+b.sourceFile+\" )\"));(c=da.get(\"EXT_texture_filter_anisotropic\"))&&b.type!==THREE.FloatType&&b.type!==THREE.HalfFloatType&&(1<b.anisotropy||b.__currentAnisotropy)&&\n(m.texParameterf(a,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,B.getMaxAnisotropy())),b.__currentAnisotropy=b.anisotropy)}function E(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement(\"canvas\");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext(\"2d\").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);THREE.warn(\"THREE.WebGLRenderer: image is too big (\"+a.width+\"x\"+a.height+\"). Resized to \"+d.width+\"x\"+d.height,a);return d}return a}\nfunction G(a,b){m.bindRenderbuffer(m.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_COMPONENT16,b.width,b.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_STENCIL,b.width,b.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,a)):m.renderbufferStorage(m.RENDERBUFFER,m.RGBA4,b.width,b.height)}function F(a){a instanceof\nTHREE.WebGLRenderTargetCube?(m.bindTexture(m.TEXTURE_CUBE_MAP,a.__webglTexture),m.generateMipmap(m.TEXTURE_CUBE_MAP),m.bindTexture(m.TEXTURE_CUBE_MAP,null)):(m.bindTexture(m.TEXTURE_2D,a.__webglTexture),m.generateMipmap(m.TEXTURE_2D),m.bindTexture(m.TEXTURE_2D,null))}function z(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?m.NEAREST:m.LINEAR}function I(a){var b;if(a===THREE.RepeatWrapping)return m.REPEAT;if(a===THREE.ClampToEdgeWrapping)return m.CLAMP_TO_EDGE;\nif(a===THREE.MirroredRepeatWrapping)return m.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return m.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return m.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return m.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return m.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return m.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return m.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return m.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return m.UNSIGNED_SHORT_4_4_4_4;\nif(a===THREE.UnsignedShort5551Type)return m.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return m.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return m.BYTE;if(a===THREE.ShortType)return m.SHORT;if(a===THREE.UnsignedShortType)return m.UNSIGNED_SHORT;if(a===THREE.IntType)return m.INT;if(a===THREE.UnsignedIntType)return m.UNSIGNED_INT;if(a===THREE.FloatType)return m.FLOAT;b=da.get(\"OES_texture_half_float\");if(null!==b&&a===THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return m.ALPHA;\nif(a===THREE.RGBFormat)return m.RGB;if(a===THREE.RGBAFormat)return m.RGBA;if(a===THREE.LuminanceFormat)return m.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return m.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return m.FUNC_ADD;if(a===THREE.SubtractEquation)return m.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return m.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return m.ZERO;if(a===THREE.OneFactor)return m.ONE;if(a===THREE.SrcColorFactor)return m.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return m.ONE_MINUS_SRC_COLOR;\nif(a===THREE.SrcAlphaFactor)return m.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return m.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return m.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return m.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return m.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return m.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return m.SRC_ALPHA_SATURATE;b=da.get(\"WEBGL_compressed_texture_s3tc\");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;\nif(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=da.get(\"WEBGL_compressed_texture_pvrtc\");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\nif(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=da.get(\"EXT_blend_minmax\");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}console.log(\"THREE.WebGLRenderer\",THREE.REVISION);a=a||{};var U=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),M=void 0!==a.context?a.context:null,H=1,L=void 0!==a.precision?a.precision:\"highp\",P=void 0!==a.alpha?a.alpha:!1,N=void 0!==a.depth?a.depth:!0,R=void 0!==a.stencil?\na.stencil:!0,V=void 0!==a.antialias?a.antialias:!1,J=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,oa=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ja=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:!1,ha=new THREE.Color(0),O=0,ca=[],ba={},qa=[],Ka=[],Qa=[],Xa=[],Ya=[];this.domElement=U;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.gammaFactor=2;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=\n!1;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var B=this,Pa=[],ob=null,ab=null,ub=-1,ta=\"\",vb=null,Mb=0,ib=0,bb=0,pb=U.width,qb=U.height,Xb=0,fc=0,cb=new THREE.Frustum,db=new THREE.Matrix4,wa=new THREE.Vector3,pa=new THREE.Vector3,Ob=!0,jc={ambient:[0,\n0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},m;try{var Yb={alpha:P,depth:N,stencil:R,antialias:V,premultipliedAlpha:J,preserveDrawingBuffer:oa};m=M||U.getContext(\"webgl\",Yb)||U.getContext(\"experimental-webgl\",Yb);if(null===m){if(null!==U.getContext(\"webgl\"))throw\"Error creating WebGL context with your selected attributes.\";\nthrow\"Error creating WebGL context.\";}U.addEventListener(\"webglcontextlost\",function(a){a.preventDefault();Zb();lc();ba={}},!1)}catch(rc){THREE.error(\"THREE.WebGLRenderer: \"+rc)}var W=new THREE.WebGLState(m,I);void 0===m.getShaderPrecisionFormat&&(m.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var da=new THREE.WebGLExtensions(m);da.get(\"OES_texture_float\");da.get(\"OES_texture_float_linear\");da.get(\"OES_texture_half_float\");da.get(\"OES_texture_half_float_linear\");\nda.get(\"OES_standard_derivatives\");ja&&da.get(\"EXT_frag_depth\");var rb=function(a,b,c,d){!0===J&&(a*=d,b*=d,c*=d);m.clearColor(a,b,c,d)},lc=function(){m.clearColor(0,0,0,1);m.clearDepth(1);m.clearStencil(0);m.enable(m.DEPTH_TEST);m.depthFunc(m.LEQUAL);m.frontFace(m.CCW);m.cullFace(m.BACK);m.enable(m.CULL_FACE);m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA);m.viewport(ib,bb,pb,qb);rb(ha.r,ha.g,ha.b,O)},Zb=function(){vb=ob=null;ta=\"\";ub=-1;Ob=!0;W.reset()};\nlc();this.context=m;this.state=W;var Wb=m.getParameter(m.MAX_TEXTURE_IMAGE_UNITS),sc=m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS),tc=m.getParameter(m.MAX_TEXTURE_SIZE),qc=m.getParameter(m.MAX_CUBE_MAP_TEXTURE_SIZE),Vb=0<sc,Nb=Vb&&da.get(\"OES_texture_float\"),uc=m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.HIGH_FLOAT),vc=m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.MEDIUM_FLOAT),wc=m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.HIGH_FLOAT),xc=m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.MEDIUM_FLOAT),\nkc=function(){var a;return function(){if(void 0!==a)return a;a=[];if(da.get(\"WEBGL_compressed_texture_pvrtc\")||da.get(\"WEBGL_compressed_texture_s3tc\"))for(var b=m.getParameter(m.COMPRESSED_TEXTURE_FORMATS),c=0;c<b.length;c++)a.push(b[c]);return a}}(),yc=0<uc.precision&&0<wc.precision,mc=0<vc.precision&&0<xc.precision;\"highp\"!==L||yc||(mc?(L=\"mediump\",THREE.warn(\"THREE.WebGLRenderer: highp not supported, using mediump.\")):(L=\"lowp\",THREE.warn(\"THREE.WebGLRenderer: highp and mediump not supported, using lowp.\")));\n\"mediump\"!==L||mc||(L=\"lowp\",THREE.warn(\"THREE.WebGLRenderer: mediump not supported, using lowp.\"));var zc=new THREE.ShadowMapPlugin(this,ca,ba,qa),Ac=new THREE.SpritePlugin(this,Xa),Bc=new THREE.LensFlarePlugin(this,Ya);this.getContext=function(){return m};this.forceContextLoss=function(){da.get(\"WEBGL_lose_context\").loseContext()};this.supportsVertexTextures=function(){return Vb};this.supportsFloatTextures=function(){return da.get(\"OES_texture_float\")};this.supportsHalfFloatTextures=function(){return da.get(\"OES_texture_half_float\")};\nthis.supportsStandardDerivatives=function(){return da.get(\"OES_standard_derivatives\")};this.supportsCompressedTextureS3TC=function(){return da.get(\"WEBGL_compressed_texture_s3tc\")};this.supportsCompressedTexturePVRTC=function(){return da.get(\"WEBGL_compressed_texture_pvrtc\")};this.supportsBlendMinMax=function(){return da.get(\"EXT_blend_minmax\")};this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=da.get(\"EXT_texture_filter_anisotropic\");return a=null!==b?m.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):\n0}}();this.getPrecision=function(){return L};this.getPixelRatio=function(){return H};this.setPixelRatio=function(a){H=a};this.setSize=function(a,b,c){U.width=a*H;U.height=b*H;!1!==c&&(U.style.width=a+\"px\",U.style.height=b+\"px\");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){ib=a*H;bb=b*H;pb=c*H;qb=d*H;m.viewport(ib,bb,pb,qb)};this.setScissor=function(a,b,c,d){m.scissor(a*H,b*H,c*H,d*H)};this.enableScissorTest=function(a){a?m.enable(m.SCISSOR_TEST):m.disable(m.SCISSOR_TEST)};this.getClearColor=\nfunction(){return ha};this.setClearColor=function(a,b){ha.set(a);O=void 0!==b?b:1;rb(ha.r,ha.g,ha.b,O)};this.getClearAlpha=function(){return O};this.setClearAlpha=function(a){O=a;rb(ha.r,ha.g,ha.b,O)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=m.COLOR_BUFFER_BIT;if(void 0===b||b)d|=m.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=m.STENCIL_BUFFER_BIT;m.clear(d)};this.clearColor=function(){m.clear(m.COLOR_BUFFER_BIT)};this.clearDepth=function(){m.clear(m.DEPTH_BUFFER_BIT)};this.clearStencil=function(){m.clear(m.STENCIL_BUFFER_BIT)};\nthis.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=Zb;var wb=function(a){a.target.traverse(function(a){a.removeEventListener(\"remove\",wb);if(a instanceof THREE.Mesh||a instanceof THREE.PointCloud||a instanceof THREE.Line)delete ba[a.id];else if(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)for(var b=qa,c=b.length-1;0<=c;c--)b[c].object===a&&b.splice(c,1);delete a.__webglInit;delete a._modelViewMatrix;delete a._normalMatrix;delete a.__webglActive})},\njb=function(a){a=a.target;a.removeEventListener(\"dispose\",jb);delete a.__webglInit;if(a instanceof THREE.BufferGeometry){for(var b in a.attributes){var c=a.attributes[b];void 0!==c.buffer&&(m.deleteBuffer(c.buffer),delete c.buffer)}B.info.memory.geometries--}else if(b=Ua[a.id],void 0!==b){for(var c=0,d=b.length;c<d;c++){var e=b[c];if(void 0!==e.numMorphTargets){for(var f=0,g=e.numMorphTargets;f<g;f++)m.deleteBuffer(e.__webglMorphTargetsBuffers[f]);delete e.__webglMorphTargetsBuffers}if(void 0!==e.numMorphNormals){f=\n0;for(g=e.numMorphNormals;f<g;f++)m.deleteBuffer(e.__webglMorphNormalsBuffers[f]);delete e.__webglMorphNormalsBuffers}nc(e)}delete Ua[a.id]}else nc(a);ta=\"\"},Pb=function(a){a=a.target;a.removeEventListener(\"dispose\",Pb);a.image&&a.image.__webglTextureCube?(m.deleteTexture(a.image.__webglTextureCube),delete a.image.__webglTextureCube):void 0!==a.__webglInit&&(m.deleteTexture(a.__webglTexture),delete a.__webglTexture,delete a.__webglInit);B.info.memory.textures--},oc=function(a){a=a.target;a.removeEventListener(\"dispose\",\noc);if(a&&void 0!==a.__webglTexture){m.deleteTexture(a.__webglTexture);delete a.__webglTexture;if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)m.deleteFramebuffer(a.__webglFramebuffer[b]),m.deleteRenderbuffer(a.__webglRenderbuffer[b]);else m.deleteFramebuffer(a.__webglFramebuffer),m.deleteRenderbuffer(a.__webglRenderbuffer);delete a.__webglFramebuffer;delete a.__webglRenderbuffer}B.info.memory.textures--},ic=function(a){a=a.target;a.removeEventListener(\"dispose\",ic);hc(a)},nc=function(a){for(var b=\n\"__webglVertexBuffer __webglNormalBuffer __webglTangentBuffer __webglColorBuffer __webglUVBuffer __webglUV2Buffer __webglSkinIndicesBuffer __webglSkinWeightsBuffer __webglFaceBuffer __webglLineBuffer __webglLineDistanceBuffer\".split(\" \"),c=0,d=b.length;c<d;c++){var e=b[c];void 0!==a[e]&&(m.deleteBuffer(a[e]),delete a[e])}if(void 0!==a.__webglCustomAttributesList){for(e in a.__webglCustomAttributesList)m.deleteBuffer(a.__webglCustomAttributesList[e].buffer);delete a.__webglCustomAttributesList}B.info.memory.geometries--},\nhc=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;a=0;for(c=Pa.length;a<c;a++)if(d=Pa[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=Pa.length;a<c;a++)d=Pa[a],d.program!==b&&e.push(d);Pa=e;m.deleteProgram(b);B.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){W.initAttributes();a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=m.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=\nm.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=m.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=m.createBuffer());a.hasPositions&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglVertexBuffer),m.bufferData(m.ARRAY_BUFFER,a.positionArray,m.DYNAMIC_DRAW),W.enableAttribute(b.attributes.position),m.vertexAttribPointer(b.attributes.position,3,m.FLOAT,!1,0,0));if(a.hasNormals){m.bindBuffer(m.ARRAY_BUFFER,a.__webglNormalBuffer);if(!1===c instanceof THREE.MeshPhongMaterial&&\nc.shading===THREE.FlatShading){var d,e,f,g,h,k,n,l,p,q,r,s=3*a.count;for(r=0;r<s;r+=9)q=a.normalArray,d=q[r],e=q[r+1],f=q[r+2],g=q[r+3],k=q[r+4],l=q[r+5],h=q[r+6],n=q[r+7],p=q[r+8],d=(d+g+h)/3,e=(e+k+n)/3,f=(f+l+p)/3,q[r]=d,q[r+1]=e,q[r+2]=f,q[r+3]=d,q[r+4]=e,q[r+5]=f,q[r+6]=d,q[r+7]=e,q[r+8]=f}m.bufferData(m.ARRAY_BUFFER,a.normalArray,m.DYNAMIC_DRAW);W.enableAttribute(b.attributes.normal);m.vertexAttribPointer(b.attributes.normal,3,m.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglUvBuffer),\nm.bufferData(m.ARRAY_BUFFER,a.uvArray,m.DYNAMIC_DRAW),W.enableAttribute(b.attributes.uv),m.vertexAttribPointer(b.attributes.uv,2,m.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,a.colorArray,m.DYNAMIC_DRAW),W.enableAttribute(b.attributes.color),m.vertexAttribPointer(b.attributes.color,3,m.FLOAT,!1,0,0));W.disableUnusedAttributes();m.drawArrays(m.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,\nb,c,e,f,g){if(!1!==e.visible)if(t(g),a=v(a,b,c,e,g),b=!1,c=\"direct_\"+f.id+\"_\"+a.id+\"_\"+(e.wireframe?1:0),c!==ta&&(ta=c,b=!0),b&&W.initAttributes(),g instanceof THREE.Mesh){g=!0===e.wireframe?m.LINES:m.TRIANGLES;var h=f.attributes.index;if(h){var k,n;h.array instanceof Uint32Array&&da.get(\"OES_element_index_uint\")?(k=m.UNSIGNED_INT,n=4):(k=m.UNSIGNED_SHORT,n=2);c=f.offsets;if(0===c.length)b&&(d(e,a,f,0),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer)),m.drawElements(g,h.array.length,k,0),B.info.render.calls++,\nB.info.render.vertices+=h.array.length,B.info.render.faces+=h.array.length/3;else{b=!0;for(var l=0,p=c.length;l<p;l++){var q=c[l].index;b&&(d(e,a,f,q),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer));m.drawElements(g,c[l].count,k,c[l].start*n);B.info.render.calls++;B.info.render.vertices+=c[l].count;B.info.render.faces+=c[l].count/3}}}else b&&d(e,a,f,0),e=f.attributes.position,m.drawArrays(g,0,e.array.length/e.itemSize),B.info.render.calls++,B.info.render.vertices+=e.array.length/e.itemSize,B.info.render.faces+=\ne.array.length/(3*e.itemSize)}else if(g instanceof THREE.PointCloud)if(g=m.POINTS,h=f.attributes.index)if(h.array instanceof Uint32Array&&da.get(\"OES_element_index_uint\")?(k=m.UNSIGNED_INT,n=4):(k=m.UNSIGNED_SHORT,n=2),c=f.offsets,0===c.length)b&&(d(e,a,f,0),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer)),m.drawElements(g,h.array.length,k,0),B.info.render.calls++,B.info.render.points+=h.array.length;else for(1<c.length&&(b=!0),l=0,p=c.length;l<p;l++)q=c[l].index,b&&(d(e,a,f,q),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,\nh.buffer)),m.drawElements(g,c[l].count,k,c[l].start*n),B.info.render.calls++,B.info.render.points+=c[l].count;else if(b&&d(e,a,f,0),e=f.attributes.position,c=f.offsets,0===c.length)m.drawArrays(g,0,e.array.length/3),B.info.render.calls++,B.info.render.points+=e.array.length/3;else for(l=0,p=c.length;l<p;l++)m.drawArrays(g,c[l].index,c[l].count),B.info.render.calls++,B.info.render.points+=c[l].count;else if(g instanceof THREE.Line)if(g=g.mode===THREE.LineStrip?m.LINE_STRIP:m.LINES,W.setLineWidth(e.linewidth*\nH),h=f.attributes.index)if(h.array instanceof Uint32Array?(k=m.UNSIGNED_INT,n=4):(k=m.UNSIGNED_SHORT,n=2),c=f.offsets,0===c.length)b&&(d(e,a,f,0),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer)),m.drawElements(g,h.array.length,k,0),B.info.render.calls++,B.info.render.vertices+=h.array.length;else for(1<c.length&&(b=!0),l=0,p=c.length;l<p;l++)q=c[l].index,b&&(d(e,a,f,q),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,h.buffer)),m.drawElements(g,c[l].count,k,c[l].start*n),B.info.render.calls++,B.info.render.vertices+=\nc[l].count;else if(b&&d(e,a,f,0),e=f.attributes.position,c=f.offsets,0===c.length)m.drawArrays(g,0,e.array.length/3),B.info.render.calls++,B.info.render.vertices+=e.array.length/3;else for(l=0,p=c.length;l<p;l++)m.drawArrays(g,c[l].index,c[l].count),B.info.render.calls++,B.info.render.vertices+=c[l].count};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){t(f);c=v(a,b,c,d,f);b=c.attributes;a=!1;c=e.id+\"_\"+c.id+\"_\"+(d.wireframe?1:0);c!==ta&&(ta=c,a=!0);a&&W.initAttributes();if(!d.morphTargets&&\n0<=b.position)a&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),W.enableAttribute(b.position),m.vertexAttribPointer(b.position,3,m.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),W.enableAttribute(c.position),m.vertexAttribPointer(c.position,3,m.FLOAT,!1,0,0)):0<=c.position&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),W.enableAttribute(c.position),m.vertexAttribPointer(c.position,\n3,m.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length)for(var h=0,k=f.morphTargetForcedOrder,n=f.morphTargetInfluences,l;h<d.numSupportedMorphTargets&&h<k.length;)l=c[\"morphTarget\"+h],0<=l&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k[h]]),W.enableAttribute(l),m.vertexAttribPointer(l,3,m.FLOAT,!1,0,0)),l=c[\"morphNormal\"+h],0<=l&&d.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[k[h]]),W.enableAttribute(l),m.vertexAttribPointer(l,3,m.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[h]=\nn[k[h]],h++;else{k=[];n=f.morphTargetInfluences;h=f.geometry.morphTargets;n.length>h.length&&(console.warn(\"THREE.WebGLRenderer: Influences array is bigger than morphTargets array.\"),n.length=h.length);h=0;for(l=n.length;h<l;h++)k.push([n[h],h]);k.length>d.numSupportedMorphTargets?(k.sort(g),k.length=d.numSupportedMorphTargets):k.length>d.numSupportedMorphNormals?k.sort(g):0===k.length&&k.push([0,0]);for(var h=0,p=d.numSupportedMorphTargets;h<p;h++)if(k[h]){var q=k[h][1];l=c[\"morphTarget\"+h];0<=l&&\n(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[q]),W.enableAttribute(l),m.vertexAttribPointer(l,3,m.FLOAT,!1,0,0));l=c[\"morphNormal\"+h];0<=l&&d.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[q]),W.enableAttribute(l),m.vertexAttribPointer(l,3,m.FLOAT,!1,0,0));f.__webglMorphTargetInfluences[h]=n[q]}else f.__webglMorphTargetInfluences[h]=0}null!==d.program.uniforms.morphTargetInfluences&&m.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(c=\n0,n=e.__webglCustomAttributesList.length;c<n;c++)k=e.__webglCustomAttributesList[c],0<=b[k.buffer.belongsToAttribute]&&(m.bindBuffer(m.ARRAY_BUFFER,k.buffer),W.enableAttribute(b[k.buffer.belongsToAttribute]),m.vertexAttribPointer(b[k.buffer.belongsToAttribute],k.size,m.FLOAT,!1,0,0));0<=b.color&&(0<f.geometry.colors.length||0<f.geometry.faces.length?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglColorBuffer),W.enableAttribute(b.color),m.vertexAttribPointer(b.color,3,m.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&\nm.vertexAttrib3fv(b.color,d.defaultAttributeValues.color));0<=b.normal&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglNormalBuffer),W.enableAttribute(b.normal),m.vertexAttribPointer(b.normal,3,m.FLOAT,!1,0,0));0<=b.tangent&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglTangentBuffer),W.enableAttribute(b.tangent),m.vertexAttribPointer(b.tangent,4,m.FLOAT,!1,0,0));0<=b.uv&&(f.geometry.faceVertexUvs[0]?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUVBuffer),W.enableAttribute(b.uv),m.vertexAttribPointer(b.uv,2,m.FLOAT,!1,0,\n0)):void 0!==d.defaultAttributeValues&&m.vertexAttrib2fv(b.uv,d.defaultAttributeValues.uv));0<=b.uv2&&(f.geometry.faceVertexUvs[1]?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUV2Buffer),W.enableAttribute(b.uv2),m.vertexAttribPointer(b.uv2,2,m.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&m.vertexAttrib2fv(b.uv2,d.defaultAttributeValues.uv2));d.skinning&&0<=b.skinIndex&&0<=b.skinWeight&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),W.enableAttribute(b.skinIndex),m.vertexAttribPointer(b.skinIndex,\n4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),W.enableAttribute(b.skinWeight),m.vertexAttribPointer(b.skinWeight,4,m.FLOAT,!1,0,0));0<=b.lineDistance&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglLineDistanceBuffer),W.enableAttribute(b.lineDistance),m.vertexAttribPointer(b.lineDistance,1,m.FLOAT,!1,0,0))}W.disableUnusedAttributes();f instanceof THREE.Mesh?(f=e.__typeArray===Uint32Array?m.UNSIGNED_INT:m.UNSIGNED_SHORT,d.wireframe?(W.setLineWidth(d.wireframeLinewidth*H),a&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,\ne.__webglLineBuffer),m.drawElements(m.LINES,e.__webglLineCount,f,0)):(a&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),m.drawElements(m.TRIANGLES,e.__webglFaceCount,f,0)),B.info.render.calls++,B.info.render.vertices+=e.__webglFaceCount,B.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.mode===THREE.LineStrip?m.LINE_STRIP:m.LINES,W.setLineWidth(d.linewidth*H),m.drawArrays(f,0,e.__webglLineCount),B.info.render.calls++):f instanceof THREE.PointCloud&&(m.drawArrays(m.POINTS,\n0,e.__webglParticleCount),B.info.render.calls++,B.info.render.points+=e.__webglParticleCount)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)THREE.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");else{var g=a.fog;ta=\"\";ub=-1;vb=null;Ob=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();a.traverse(function(a){a instanceof THREE.SkinnedMesh&&a.skeleton.update()});b.matrixWorldInverse.getInverse(b.matrixWorld);db.multiplyMatrices(b.projectionMatrix,\nb.matrixWorldInverse);cb.setFromMatrix(db);ca.length=0;Ka.length=0;Qa.length=0;Xa.length=0;Ya.length=0;h(a);!0===B.sortObjects&&(Ka.sort(e),Qa.sort(f));zc.render(a,b);B.info.render.calls=0;B.info.render.vertices=0;B.info.render.faces=0;B.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);d=0;for(var n=qa.length;d<n;d++){var m=qa[d],q=m.object;q.visible&&(w(q,b),p(m))}a.overrideMaterial?(d=a.overrideMaterial,u(d),\nk(Ka,b,ca,g,d),k(Qa,b,ca,g,d),l(qa,\"\",b,ca,g,d)):(W.setBlending(THREE.NoBlending),k(Ka,b,ca,g,null),l(qa,\"opaque\",b,ca,g,null),k(Qa,b,ca,g,null),l(qa,\"transparent\",b,ca,g,null));Ac.render(a,b);Bc.render(a,b,Xb,fc);c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&F(c);W.setDepthTest(!0);W.setDepthWrite(!0);W.setColorWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=v(a,b,c,d,e);ta=\"\";B.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,\nm,cb):e.render(function(a){B.renderBufferImmediate(a,f,d)})};var Ua={},Qb=0,pc={MeshDepthMaterial:\"depth\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointCloudMaterial:\"particle_basic\"};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?m.disable(m.CULL_FACE):(b===THREE.FrontFaceDirectionCW?m.frontFace(m.CW):m.frontFace(m.CCW),a===THREE.CullFaceBack?m.cullFace(m.BACK):a===\nTHREE.CullFaceFront?m.cullFace(m.FRONT):m.cullFace(m.FRONT_AND_BACK),m.enable(m.CULL_FACE))};this.setMaterialFaces=function(a){W.setDoubleSided(a.side===THREE.DoubleSide);W.setFlipSided(a.side===THREE.BackSide)};this.uploadTexture=function(a){void 0===a.__webglInit&&(a.__webglInit=!0,a.addEventListener(\"dispose\",Pb),a.__webglTexture=m.createTexture(),B.info.memory.textures++);m.bindTexture(m.TEXTURE_2D,a.__webglTexture);m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,a.flipY);m.pixelStorei(m.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\na.premultiplyAlpha);m.pixelStorei(m.UNPACK_ALIGNMENT,a.unpackAlignment);a.image=E(a.image,tc);var b=a.image,c=THREE.Math.isPowerOfTwo(b.width)&&THREE.Math.isPowerOfTwo(b.height),d=I(a.format),e=I(a.type);A(m.TEXTURE_2D,a,c);var f=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<f.length&&c){for(var g=0,h=f.length;g<h;g++)b=f[g],m.texImage2D(m.TEXTURE_2D,g,d,b.width,b.height,0,d,e,b.data);a.generateMipmaps=!1}else m.texImage2D(m.TEXTURE_2D,0,d,b.width,b.height,0,d,e,b.data);else if(a instanceof THREE.CompressedTexture)for(g=\n0,h=f.length;g<h;g++)b=f[g],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?-1<kc().indexOf(d)?m.compressedTexImage2D(m.TEXTURE_2D,g,d,b.width,b.height,0,b.data):THREE.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):m.texImage2D(m.TEXTURE_2D,g,d,b.width,b.height,0,d,e,b.data);else if(0<f.length&&c){g=0;for(h=f.length;g<h;g++)b=f[g],m.texImage2D(m.TEXTURE_2D,g,d,d,e,b);a.generateMipmaps=!1}else m.texImage2D(m.TEXTURE_2D,0,d,d,e,a.image);\na.generateMipmaps&&c&&m.generateMipmap(m.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()};this.setTexture=function(a,b){m.activeTexture(m.TEXTURE0+b);a.needsUpdate?B.uploadTexture(a):m.bindTexture(m.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&void 0===a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener(\"dispose\",oc);a.__webglTexture=m.createTexture();\nB.info.memory.textures++;var c=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),d=I(a.format),e=I(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];m.bindTexture(m.TEXTURE_CUBE_MAP,a.__webglTexture);A(m.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=m.createFramebuffer();a.__webglRenderbuffer[f]=m.createRenderbuffer();m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=m.TEXTURE_CUBE_MAP_POSITIVE_X+f;m.bindFramebuffer(m.FRAMEBUFFER,\na.__webglFramebuffer[f]);m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,h,g.__webglTexture,0);G(a.__webglRenderbuffer[f],a)}c&&m.generateMipmap(m.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=m.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:m.createRenderbuffer(),m.bindTexture(m.TEXTURE_2D,a.__webglTexture),A(m.TEXTURE_2D,a,c),m.texImage2D(m.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=m.TEXTURE_2D,m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer),\nm.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,a.__webglRenderbuffer):G(a.__webglRenderbuffer,a),c&&m.generateMipmap(m.TEXTURE_2D);b?m.bindTexture(m.TEXTURE_CUBE_MAP,null):m.bindTexture(m.TEXTURE_2D,null);m.bindRenderbuffer(m.RENDERBUFFER,\nnull);m.bindFramebuffer(m.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=pb,a=qb,d=ib,e=bb);b!==ab&&(m.bindFramebuffer(m.FRAMEBUFFER,b),m.viewport(d,e,c,a),ab=b);Xb=c;fc=a};this.readRenderTargetPixels=function(a,b,c,d,e,f){if(!(a instanceof THREE.WebGLRenderTarget))console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");else if(a.__webglFramebuffer)if(a.format!==THREE.RGBAFormat)console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.\");\nelse{var g=!1;a.__webglFramebuffer!==ab&&(m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer),g=!0);m.checkFramebufferStatus(m.FRAMEBUFFER)===m.FRAMEBUFFER_COMPLETE?m.readPixels(b,c,d,e,m.RGBA,m.UNSIGNED_BYTE,f):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\");g&&m.bindFramebuffer(m.FRAMEBUFFER,ab)}};this.initMaterial=function(){THREE.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")};this.addPrePlugin=function(){THREE.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")};\nthis.addPostPlugin=function(){THREE.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")};this.updateShadowMap=function(){THREE.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")}};\nTHREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:\nTHREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=void 0!==c.shareDepthFrom?c.shareDepthFrom:null};\nTHREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;\na.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;\nTHREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case \"EXT_texture_filter_anisotropic\":d=a.getExtension(\"EXT_texture_filter_anisotropic\")||a.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||a.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case \"WEBGL_compressed_texture_s3tc\":d=a.getExtension(\"WEBGL_compressed_texture_s3tc\")||a.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\nbreak;case \"WEBGL_compressed_texture_pvrtc\":d=a.getExtension(\"WEBGL_compressed_texture_pvrtc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;default:d=a.getExtension(c)}null===d&&THREE.warn(\"THREE.WebGLRenderer: \"+c+\" extension not supported.\");return b[c]=d}};\nTHREE.WebGLProgram=function(){var a=0;return function(b,c,d,e){var f=b.context,g=d.defines,h=d.__webglShader.uniforms,k=d.attributes,l=d.__webglShader.vertexShader,p=d.__webglShader.fragmentShader,q=d.index0AttributeName;void 0===q&&!0===e.morphTargets&&(q=\"position\");var n=\"SHADOWMAP_TYPE_BASIC\";e.shadowMapType===THREE.PCFShadowMap?n=\"SHADOWMAP_TYPE_PCF\":e.shadowMapType===THREE.PCFSoftShadowMap&&(n=\"SHADOWMAP_TYPE_PCF_SOFT\");var t=\"ENVMAP_TYPE_CUBE\",r=\"ENVMAP_MODE_REFLECTION\",s=\"ENVMAP_BLENDING_MULTIPLY\";\nif(e.envMap){switch(d.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:t=\"ENVMAP_TYPE_CUBE\";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:t=\"ENVMAP_TYPE_EQUIREC\";break;case THREE.SphericalReflectionMapping:t=\"ENVMAP_TYPE_SPHERE\"}switch(d.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:r=\"ENVMAP_MODE_REFRACTION\"}switch(d.combine){case THREE.MultiplyOperation:s=\"ENVMAP_BLENDING_MULTIPLY\";\nbreak;case THREE.MixOperation:s=\"ENVMAP_BLENDING_MIX\";break;case THREE.AddOperation:s=\"ENVMAP_BLENDING_ADD\"}}var u=0<b.gammaFactor?b.gammaFactor:1,v,x;v=[];for(var D in g)x=g[D],!1!==x&&(x=\"#define \"+D+\" \"+x,v.push(x));v=v.join(\"\\n\");g=f.createProgram();d instanceof THREE.RawShaderMaterial?b=d=\"\":(d=[\"precision \"+e.precision+\" float;\",\"precision \"+e.precision+\" int;\",v,e.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",b.gammaInput?\"#define GAMMA_INPUT\":\"\",b.gammaOutput?\"#define GAMMA_OUTPUT\":\n\"\",\"#define GAMMA_FACTOR \"+u,\"#define MAX_DIR_LIGHTS \"+e.maxDirLights,\"#define MAX_POINT_LIGHTS \"+e.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+e.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+e.maxHemiLights,\"#define MAX_SHADOWS \"+e.maxShadows,\"#define MAX_BONES \"+e.maxBones,e.map?\"#define USE_MAP\":\"\",e.envMap?\"#define USE_ENVMAP\":\"\",e.envMap?\"#define \"+r:\"\",e.lightMap?\"#define USE_LIGHTMAP\":\"\",e.bumpMap?\"#define USE_BUMPMAP\":\"\",e.normalMap?\"#define USE_NORMALMAP\":\"\",e.specularMap?\"#define USE_SPECULARMAP\":\n\"\",e.alphaMap?\"#define USE_ALPHAMAP\":\"\",e.vertexColors?\"#define USE_COLOR\":\"\",e.flatShading?\"#define FLAT_SHADED\":\"\",e.skinning?\"#define USE_SKINNING\":\"\",e.useVertexTexture?\"#define BONE_TEXTURE\":\"\",e.morphTargets?\"#define USE_MORPHTARGETS\":\"\",e.morphNormals?\"#define USE_MORPHNORMALS\":\"\",e.wrapAround?\"#define WRAP_AROUND\":\"\",e.doubleSided?\"#define DOUBLE_SIDED\":\"\",e.flipSided?\"#define FLIP_SIDED\":\"\",e.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",e.shadowMapEnabled?\"#define \"+n:\"\",e.shadowMapDebug?\n\"#define SHADOWMAP_DEBUG\":\"\",e.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",e.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",e.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",\"uniform mat4 modelMatrix;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\nattribute vec2 uv2;\\n#ifdef USE_COLOR\\n\\tattribute vec3 color;\\n#endif\\n#ifdef USE_MORPHTARGETS\\n\\tattribute vec3 morphTarget0;\\n\\tattribute vec3 morphTarget1;\\n\\tattribute vec3 morphTarget2;\\n\\tattribute vec3 morphTarget3;\\n\\t#ifdef USE_MORPHNORMALS\\n\\t\\tattribute vec3 morphNormal0;\\n\\t\\tattribute vec3 morphNormal1;\\n\\t\\tattribute vec3 morphNormal2;\\n\\t\\tattribute vec3 morphNormal3;\\n\\t#else\\n\\t\\tattribute vec3 morphTarget4;\\n\\t\\tattribute vec3 morphTarget5;\\n\\t\\tattribute vec3 morphTarget6;\\n\\t\\tattribute vec3 morphTarget7;\\n\\t#endif\\n#endif\\n#ifdef USE_SKINNING\\n\\tattribute vec4 skinIndex;\\n\\tattribute vec4 skinWeight;\\n#endif\\n\"].join(\"\\n\"),\nb=[\"precision \"+e.precision+\" float;\",\"precision \"+e.precision+\" int;\",e.bumpMap||e.normalMap||e.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",v,\"#define MAX_DIR_LIGHTS \"+e.maxDirLights,\"#define MAX_POINT_LIGHTS \"+e.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+e.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+e.maxHemiLights,\"#define MAX_SHADOWS \"+e.maxShadows,e.alphaTest?\"#define ALPHATEST \"+e.alphaTest:\"\",b.gammaInput?\"#define GAMMA_INPUT\":\"\",b.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",\"#define GAMMA_FACTOR \"+\nu,e.useFog&&e.fog?\"#define USE_FOG\":\"\",e.useFog&&e.fogExp?\"#define FOG_EXP2\":\"\",e.map?\"#define USE_MAP\":\"\",e.envMap?\"#define USE_ENVMAP\":\"\",e.envMap?\"#define \"+t:\"\",e.envMap?\"#define \"+r:\"\",e.envMap?\"#define \"+s:\"\",e.lightMap?\"#define USE_LIGHTMAP\":\"\",e.bumpMap?\"#define USE_BUMPMAP\":\"\",e.normalMap?\"#define USE_NORMALMAP\":\"\",e.specularMap?\"#define USE_SPECULARMAP\":\"\",e.alphaMap?\"#define USE_ALPHAMAP\":\"\",e.vertexColors?\"#define USE_COLOR\":\"\",e.flatShading?\"#define FLAT_SHADED\":\"\",e.metal?\"#define METAL\":\n\"\",e.wrapAround?\"#define WRAP_AROUND\":\"\",e.doubleSided?\"#define DOUBLE_SIDED\":\"\",e.flipSided?\"#define FLIP_SIDED\":\"\",e.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",e.shadowMapEnabled?\"#define \"+n:\"\",e.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",e.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",e.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",\"uniform mat4 viewMatrix;\\nuniform vec3 cameraPosition;\\n\"].join(\"\\n\"));l=new THREE.WebGLShader(f,f.VERTEX_SHADER,d+l);p=new THREE.WebGLShader(f,f.FRAGMENT_SHADER,\nb+p);f.attachShader(g,l);f.attachShader(g,p);void 0!==q&&f.bindAttribLocation(g,0,q);f.linkProgram(g);q=f.getProgramInfoLog(g);!1===f.getProgramParameter(g,f.LINK_STATUS)&&THREE.error(\"THREE.WebGLProgram: shader error: \"+f.getError(),\"gl.VALIDATE_STATUS\",f.getProgramParameter(g,f.VALIDATE_STATUS),\"gl.getPRogramInfoLog\",q);\"\"!==q&&THREE.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\"+q);f.deleteShader(l);f.deleteShader(p);q=\"viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse\".split(\" \");\ne.useVertexTexture?(q.push(\"boneTexture\"),q.push(\"boneTextureWidth\"),q.push(\"boneTextureHeight\")):q.push(\"boneGlobalMatrices\");e.logarithmicDepthBuffer&&q.push(\"logDepthBufFC\");for(var w in h)q.push(w);h=q;w={};q=0;for(b=h.length;q<b;q++)n=h[q],w[n]=f.getUniformLocation(g,n);this.uniforms=w;q=\"position normal uv uv2 tangent color skinIndex skinWeight lineDistance\".split(\" \");for(h=0;h<e.maxMorphTargets;h++)q.push(\"morphTarget\"+h);for(h=0;h<e.maxMorphNormals;h++)q.push(\"morphNormal\"+h);for(var y in k)q.push(y);\ne=q;k={};y=0;for(h=e.length;y<h;y++)w=e[y],k[w]=f.getAttribLocation(g,w);this.attributes=k;this.attributesKeys=Object.keys(this.attributes);this.id=a++;this.code=c;this.usedTimes=1;this.program=g;this.vertexShader=l;this.fragmentShader=p;return this}}();\nTHREE.WebGLShader=function(){var a=function(a){a=a.split(\"\\n\");for(var c=0;c<a.length;c++)a[c]=c+1+\": \"+a[c];return a.join(\"\\n\")};return function(b,c,d){c=b.createShader(c);b.shaderSource(c,d);b.compileShader(c);!1===b.getShaderParameter(c,b.COMPILE_STATUS)&&THREE.error(\"THREE.WebGLShader: Shader couldn't compile.\");\"\"!==b.getShaderInfoLog(c)&&THREE.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",b.getShaderInfoLog(c),a(d));return c}}();\nTHREE.WebGLState=function(a,b){var c=new Uint8Array(16),d=new Uint8Array(16),e=null,f=null,g=null,h=null,k=null,l=null,p=null,q=null,n=null,t=null,r=null,s=null,u=null,v=null,x=null,D=null;this.initAttributes=function(){for(var a=0,b=c.length;a<b;a++)c[a]=0};this.enableAttribute=function(b){c[b]=1;0===d[b]&&(a.enableVertexAttribArray(b),d[b]=1)};this.disableUnusedAttributes=function(){for(var b=0,e=d.length;b<e;b++)d[b]!==c[b]&&(a.disableVertexAttribArray(b),d[b]=0)};this.setBlending=function(c,d,\nn,q,r,s,t){c!==e&&(c===THREE.NoBlending?a.disable(a.BLEND):c===THREE.AdditiveBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):c===THREE.SubtractiveBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):c===THREE.MultiplyBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):c===THREE.CustomBlending?a.enable(a.BLEND):(a.enable(a.BLEND),a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),\na.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),e=c);if(c===THREE.CustomBlending){r=r||d;s=s||n;t=t||q;if(d!==f||r!==k)a.blendEquationSeparate(b(d),b(r)),f=d,k=r;if(n!==g||q!==h||s!==l||t!==p)a.blendFuncSeparate(b(n),b(q),b(s),b(t)),g=n,h=q,l=s,p=t}else p=l=k=h=g=f=null};this.setDepthTest=function(b){q!==b&&(b?a.enable(a.DEPTH_TEST):a.disable(a.DEPTH_TEST),q=b)};this.setDepthWrite=function(b){n!==b&&(a.depthMask(b),n=b)};this.setColorWrite=function(b){t!==b&&(a.colorMask(b,\nb,b,b),t=b)};this.setDoubleSided=function(b){r!==b&&(b?a.disable(a.CULL_FACE):a.enable(a.CULL_FACE),r=b)};this.setFlipSided=function(b){s!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),s=b)};this.setLineWidth=function(b){b!==u&&(a.lineWidth(b),u=b)};this.setPolygonOffset=function(b,c,d){v!==b&&(b?a.enable(a.POLYGON_OFFSET_FILL):a.disable(a.POLYGON_OFFSET_FILL),v=b);!b||x===c&&D===d||(a.polygonOffset(c,d),x=c,D=d)};this.reset=function(){for(var a=0;a<d.length;a++)d[a]=0;s=r=t=n=q=e=null}};\nTHREE.LensFlarePlugin=function(a,b){var c,d,e,f,g,h,k,l,p,q,n=a.context,t,r,s,u,v,x;this.render=function(D,w,y,A){if(0!==b.length){D=new THREE.Vector3;var E=A/y,G=.5*y,F=.5*A,z=16/A,I=new THREE.Vector2(z*E,z),U=new THREE.Vector3(1,1,0),M=new THREE.Vector2(1,1);if(void 0===s){var z=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),H=new Uint16Array([0,1,2,0,2,3]);t=n.createBuffer();r=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,t);n.bufferData(n.ARRAY_BUFFER,z,n.STATIC_DRAW);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,\nr);n.bufferData(n.ELEMENT_ARRAY_BUFFER,H,n.STATIC_DRAW);v=n.createTexture();x=n.createTexture();n.bindTexture(n.TEXTURE_2D,v);n.texImage2D(n.TEXTURE_2D,0,n.RGB,16,16,0,n.RGB,n.UNSIGNED_BYTE,null);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST);n.bindTexture(n.TEXTURE_2D,x);n.texImage2D(n.TEXTURE_2D,0,\nn.RGBA,16,16,0,n.RGBA,n.UNSIGNED_BYTE,null);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST);var z=(u=0<n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility =        visibility.r / 9.0;\\nvVisibility *= 1.0 - visibility.g / 9.0;\\nvVisibility *=       visibility.b / 9.0;\\nvVisibility *= 1.0 - visibility.a / 9.0;\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"}:{vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"precision mediump float;\\nuniform lowp int renderType;\\nuniform sampler2D map;\\nuniform sampler2D occlusionMap;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\\nvisibility = ( 1.0 - visibility / 4.0 );\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * visibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},\nH=n.createProgram(),L=n.createShader(n.FRAGMENT_SHADER),P=n.createShader(n.VERTEX_SHADER),N=\"precision \"+a.getPrecision()+\" float;\\n\";n.shaderSource(L,N+z.fragmentShader);n.shaderSource(P,N+z.vertexShader);n.compileShader(L);n.compileShader(P);n.attachShader(H,L);n.attachShader(H,P);n.linkProgram(H);s=H;p=n.getAttribLocation(s,\"position\");q=n.getAttribLocation(s,\"uv\");c=n.getUniformLocation(s,\"renderType\");d=n.getUniformLocation(s,\"map\");e=n.getUniformLocation(s,\"occlusionMap\");f=n.getUniformLocation(s,\n\"opacity\");g=n.getUniformLocation(s,\"color\");h=n.getUniformLocation(s,\"scale\");k=n.getUniformLocation(s,\"rotation\");l=n.getUniformLocation(s,\"screenPosition\")}n.useProgram(s);n.enableVertexAttribArray(p);n.enableVertexAttribArray(q);n.uniform1i(e,0);n.uniform1i(d,1);n.bindBuffer(n.ARRAY_BUFFER,t);n.vertexAttribPointer(p,2,n.FLOAT,!1,16,0);n.vertexAttribPointer(q,2,n.FLOAT,!1,16,8);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r);n.disable(n.CULL_FACE);n.depthMask(!1);H=0;for(L=b.length;H<L;H++)if(z=16/A,I.set(z*\nE,z),P=b[H],D.set(P.matrixWorld.elements[12],P.matrixWorld.elements[13],P.matrixWorld.elements[14]),D.applyMatrix4(w.matrixWorldInverse),D.applyProjection(w.projectionMatrix),U.copy(D),M.x=U.x*G+G,M.y=U.y*F+F,u||0<M.x&&M.x<y&&0<M.y&&M.y<A){n.activeTexture(n.TEXTURE1);n.bindTexture(n.TEXTURE_2D,v);n.copyTexImage2D(n.TEXTURE_2D,0,n.RGB,M.x-8,M.y-8,16,16,0);n.uniform1i(c,0);n.uniform2f(h,I.x,I.y);n.uniform3f(l,U.x,U.y,U.z);n.disable(n.BLEND);n.enable(n.DEPTH_TEST);n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,\n0);n.activeTexture(n.TEXTURE0);n.bindTexture(n.TEXTURE_2D,x);n.copyTexImage2D(n.TEXTURE_2D,0,n.RGBA,M.x-8,M.y-8,16,16,0);n.uniform1i(c,1);n.disable(n.DEPTH_TEST);n.activeTexture(n.TEXTURE1);n.bindTexture(n.TEXTURE_2D,v);n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0);P.positionScreen.copy(U);P.customUpdateCallback?P.customUpdateCallback(P):P.updateLensFlares();n.uniform1i(c,2);n.enable(n.BLEND);for(var N=0,R=P.lensFlares.length;N<R;N++){var V=P.lensFlares[N];.001<V.opacity&&.001<V.scale&&(U.x=V.x,\nU.y=V.y,U.z=V.z,z=V.size*V.scale/A,I.x=z*E,I.y=z,n.uniform3f(l,U.x,U.y,U.z),n.uniform2f(h,I.x,I.y),n.uniform1f(k,V.rotation),n.uniform1f(f,V.opacity),n.uniform3f(g,V.color.r,V.color.g,V.color.b),a.state.setBlending(V.blending,V.blendEquation,V.blendSrc,V.blendDst),a.setTexture(V.texture,1),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0))}}n.enable(n.CULL_FACE);n.enable(n.DEPTH_TEST);n.depthMask(!0);a.resetGLState()}}};\nTHREE.ShadowMapPlugin=function(a,b,c,d){function e(a,b,d){if(b.visible){var f=c[b.id];if(f&&b.castShadow&&(!1===b.frustumCulled||!0===p.intersectsObject(b)))for(var g=0,h=f.length;g<h;g++){var k=f[g];b._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,b.matrixWorld);s.push(k)}g=0;for(h=b.children.length;g<h;g++)e(a,b.children[g],d)}}var f=a.context,g,h,k,l,p=new THREE.Frustum,q=new THREE.Matrix4,n=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,s=[],u=THREE.ShaderLib.depthRGBA,v=THREE.UniformsUtils.clone(u.uniforms);\ng=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader});h=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:!0});k=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,skinning:!0});l=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:!0,skinning:!0});g._shadowPass=!0;h._shadowPass=!0;k._shadowPass=\n!0;l._shadowPass=!0;this.render=function(c,v){if(!1!==a.shadowMapEnabled){var u,y,A,E,G,F,z,I,U=[];E=0;f.clearColor(1,1,1,1);f.disable(f.BLEND);f.enable(f.CULL_FACE);f.frontFace(f.CCW);a.shadowMapCullFace===THREE.CullFaceFront?f.cullFace(f.FRONT):f.cullFace(f.BACK);a.state.setDepthTest(!0);u=0;for(y=b.length;u<y;u++)if(A=b[u],A.castShadow)if(A instanceof THREE.DirectionalLight&&A.shadowCascade)for(G=0;G<A.shadowCascadeCount;G++){var M;if(A.shadowCascadeArray[G])M=A.shadowCascadeArray[G];else{z=A;\nvar H=G;M=new THREE.DirectionalLight;M.isVirtual=!0;M.onlyShadow=!0;M.castShadow=!0;M.shadowCameraNear=z.shadowCameraNear;M.shadowCameraFar=z.shadowCameraFar;M.shadowCameraLeft=z.shadowCameraLeft;M.shadowCameraRight=z.shadowCameraRight;M.shadowCameraBottom=z.shadowCameraBottom;M.shadowCameraTop=z.shadowCameraTop;M.shadowCameraVisible=z.shadowCameraVisible;M.shadowDarkness=z.shadowDarkness;M.shadowBias=z.shadowCascadeBias[H];M.shadowMapWidth=z.shadowCascadeWidth[H];M.shadowMapHeight=z.shadowCascadeHeight[H];\nM.pointsWorld=[];M.pointsFrustum=[];I=M.pointsWorld;F=M.pointsFrustum;for(var L=0;8>L;L++)I[L]=new THREE.Vector3,F[L]=new THREE.Vector3;I=z.shadowCascadeNearZ[H];z=z.shadowCascadeFarZ[H];F[0].set(-1,-1,I);F[1].set(1,-1,I);F[2].set(-1,1,I);F[3].set(1,1,I);F[4].set(-1,-1,z);F[5].set(1,-1,z);F[6].set(-1,1,z);F[7].set(1,1,z);M.originalCamera=v;F=new THREE.Gyroscope;F.position.copy(A.shadowCascadeOffset);F.add(M);F.add(M.target);v.add(F);A.shadowCascadeArray[G]=M}H=A;I=G;z=H.shadowCascadeArray[I];z.position.copy(H.position);\nz.target.position.copy(H.target.position);z.lookAt(z.target);z.shadowCameraVisible=H.shadowCameraVisible;z.shadowDarkness=H.shadowDarkness;z.shadowBias=H.shadowCascadeBias[I];F=H.shadowCascadeNearZ[I];H=H.shadowCascadeFarZ[I];z=z.pointsFrustum;z[0].z=F;z[1].z=F;z[2].z=F;z[3].z=F;z[4].z=H;z[5].z=H;z[6].z=H;z[7].z=H;U[E]=M;E++}else U[E]=A,E++;u=0;for(y=U.length;u<y;u++){A=U[u];A.shadowMap||(G=THREE.LinearFilter,a.shadowMapType===THREE.PCFSoftShadowMap&&(G=THREE.NearestFilter),A.shadowMap=new THREE.WebGLRenderTarget(A.shadowMapWidth,\nA.shadowMapHeight,{minFilter:G,magFilter:G,format:THREE.RGBAFormat}),A.shadowMapSize=new THREE.Vector2(A.shadowMapWidth,A.shadowMapHeight),A.shadowMatrix=new THREE.Matrix4);if(!A.shadowCamera){if(A instanceof THREE.SpotLight)A.shadowCamera=new THREE.PerspectiveCamera(A.shadowCameraFov,A.shadowMapWidth/A.shadowMapHeight,A.shadowCameraNear,A.shadowCameraFar);else if(A instanceof THREE.DirectionalLight)A.shadowCamera=new THREE.OrthographicCamera(A.shadowCameraLeft,A.shadowCameraRight,A.shadowCameraTop,\nA.shadowCameraBottom,A.shadowCameraNear,A.shadowCameraFar);else{THREE.error(\"THREE.ShadowMapPlugin: Unsupported light type for shadow\",A);continue}c.add(A.shadowCamera);!0===c.autoUpdate&&c.updateMatrixWorld()}A.shadowCameraVisible&&!A.cameraHelper&&(A.cameraHelper=new THREE.CameraHelper(A.shadowCamera),c.add(A.cameraHelper));if(A.isVirtual&&M.originalCamera==v){G=v;E=A.shadowCamera;F=A.pointsFrustum;z=A.pointsWorld;n.set(Infinity,Infinity,Infinity);t.set(-Infinity,-Infinity,-Infinity);for(H=0;8>\nH;H++)I=z[H],I.copy(F[H]),I.unproject(G),I.applyMatrix4(E.matrixWorldInverse),I.x<n.x&&(n.x=I.x),I.x>t.x&&(t.x=I.x),I.y<n.y&&(n.y=I.y),I.y>t.y&&(t.y=I.y),I.z<n.z&&(n.z=I.z),I.z>t.z&&(t.z=I.z);E.left=n.x;E.right=t.x;E.top=t.y;E.bottom=n.y;E.updateProjectionMatrix()}E=A.shadowMap;F=A.shadowMatrix;G=A.shadowCamera;G.position.setFromMatrixPosition(A.matrixWorld);r.setFromMatrixPosition(A.target.matrixWorld);G.lookAt(r);G.updateMatrixWorld();G.matrixWorldInverse.getInverse(G.matrixWorld);A.cameraHelper&&\n(A.cameraHelper.visible=A.shadowCameraVisible);A.shadowCameraVisible&&A.cameraHelper.update();F.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);F.multiply(G.projectionMatrix);F.multiply(G.matrixWorldInverse);q.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse);p.setFromMatrix(q);a.setRenderTarget(E);a.clear();s.length=0;e(c,c,G);A=0;for(E=s.length;A<E;A++)z=s[A],F=z.object,z=z.buffer,H=F.material instanceof THREE.MeshFaceMaterial?F.material.materials[0]:F.material,I=void 0!==F.geometry.morphTargets&&\n0<F.geometry.morphTargets.length&&H.morphTargets,L=F instanceof THREE.SkinnedMesh&&H.skinning,I=F.customDepthMaterial?F.customDepthMaterial:L?I?l:k:I?h:g,a.setMaterialFaces(H),z instanceof THREE.BufferGeometry?a.renderBufferDirect(G,b,null,I,z,F):a.renderBuffer(G,b,null,I,z,F);A=0;for(E=d.length;A<E;A++)z=d[A],F=z.object,F.visible&&F.castShadow&&(F._modelViewMatrix.multiplyMatrices(G.matrixWorldInverse,F.matrixWorld),a.renderImmediateObject(G,b,null,g,F))}u=a.getClearColor();y=a.getClearAlpha();f.clearColor(u.r,\nu.g,u.b,y);f.enable(f.BLEND);a.shadowMapCullFace===THREE.CullFaceFront&&f.cullFace(f.BACK);a.resetGLState()}}};\nTHREE.SpritePlugin=function(a,b){var c,d,e,f,g,h,k,l,p,q,n,t,r,s,u,v,x;function D(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var w=a.context,y,A,E,G,F=new THREE.Vector3,z=new THREE.Quaternion,I=new THREE.Vector3;this.render=function(U,M){if(0!==b.length){if(void 0===E){var H=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),L=new Uint16Array([0,1,2,0,2,3]);y=w.createBuffer();A=w.createBuffer();w.bindBuffer(w.ARRAY_BUFFER,y);w.bufferData(w.ARRAY_BUFFER,H,w.STATIC_DRAW);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,\nA);w.bufferData(w.ELEMENT_ARRAY_BUFFER,L,w.STATIC_DRAW);var H=w.createProgram(),L=w.createShader(w.VERTEX_SHADER),P=w.createShader(w.FRAGMENT_SHADER);w.shaderSource(L,[\"precision \"+a.getPrecision()+\" float;\",\"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position * scale;\\nvec2 rotatedPosition;\\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\nvec4 finalPosition;\\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition;\\nfinalPosition = projectionMatrix * finalPosition;\\ngl_Position = finalPosition;\\n}\"].join(\"\\n\"));\nw.shaderSource(P,[\"precision \"+a.getPrecision()+\" float;\",\"uniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\nif ( texture.a < alphaTest ) discard;\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\nif ( fogType > 0 ) {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat fogFactor = 0.0;\\nif ( fogType == 1 ) {\\nfogFactor = smoothstep( fogNear, fogFar, depth );\\n} else {\\nconst float LOG2 = 1.442695;\\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n}\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\\n}\"].join(\"\\n\"));\nw.compileShader(L);w.compileShader(P);w.attachShader(H,L);w.attachShader(H,P);w.linkProgram(H);E=H;v=w.getAttribLocation(E,\"position\");x=w.getAttribLocation(E,\"uv\");c=w.getUniformLocation(E,\"uvOffset\");d=w.getUniformLocation(E,\"uvScale\");e=w.getUniformLocation(E,\"rotation\");f=w.getUniformLocation(E,\"scale\");g=w.getUniformLocation(E,\"color\");h=w.getUniformLocation(E,\"map\");k=w.getUniformLocation(E,\"opacity\");l=w.getUniformLocation(E,\"modelViewMatrix\");p=w.getUniformLocation(E,\"projectionMatrix\");q=\nw.getUniformLocation(E,\"fogType\");n=w.getUniformLocation(E,\"fogDensity\");t=w.getUniformLocation(E,\"fogNear\");r=w.getUniformLocation(E,\"fogFar\");s=w.getUniformLocation(E,\"fogColor\");u=w.getUniformLocation(E,\"alphaTest\");H=document.createElement(\"canvas\");H.width=8;H.height=8;L=H.getContext(\"2d\");L.fillStyle=\"white\";L.fillRect(0,0,8,8);G=new THREE.Texture(H);G.needsUpdate=!0}w.useProgram(E);w.enableVertexAttribArray(v);w.enableVertexAttribArray(x);w.disable(w.CULL_FACE);w.enable(w.BLEND);w.bindBuffer(w.ARRAY_BUFFER,\ny);w.vertexAttribPointer(v,2,w.FLOAT,!1,16,0);w.vertexAttribPointer(x,2,w.FLOAT,!1,16,8);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,A);w.uniformMatrix4fv(p,!1,M.projectionMatrix.elements);w.activeTexture(w.TEXTURE0);w.uniform1i(h,0);L=H=0;(P=U.fog)?(w.uniform3f(s,P.color.r,P.color.g,P.color.b),P instanceof THREE.Fog?(w.uniform1f(t,P.near),w.uniform1f(r,P.far),w.uniform1i(q,1),L=H=1):P instanceof THREE.FogExp2&&(w.uniform1f(n,P.density),w.uniform1i(q,2),L=H=2)):(w.uniform1i(q,0),L=H=0);for(var P=0,N=b.length;P<\nN;P++){var R=b[P];R._modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,R.matrixWorld);R.z=-R._modelViewMatrix.elements[14]}b.sort(D);for(var V=[],P=0,N=b.length;P<N;P++){var R=b[P],J=R.material;w.uniform1f(u,J.alphaTest);w.uniformMatrix4fv(l,!1,R._modelViewMatrix.elements);R.matrixWorld.decompose(F,z,I);V[0]=I.x;V[1]=I.y;R=0;U.fog&&J.fog&&(R=L);H!==R&&(w.uniform1i(q,R),H=R);null!==J.map?(w.uniform2f(c,J.map.offset.x,J.map.offset.y),w.uniform2f(d,J.map.repeat.x,J.map.repeat.y)):(w.uniform2f(c,\n0,0),w.uniform2f(d,1,1));w.uniform1f(k,J.opacity);w.uniform3f(g,J.color.r,J.color.g,J.color.b);w.uniform1f(e,J.rotation);w.uniform2fv(f,V);a.state.setBlending(J.blending,J.blendEquation,J.blendSrc,J.blendDst);a.state.setDepthTest(J.depthTest);a.state.setDepthWrite(J.depthWrite);J.map&&J.map.image&&J.map.image.width?a.setTexture(J.map,0):a.setTexture(G,0);w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0)}w.enable(w.CULL_FACE);a.resetGLState()}}};\nTHREE.GeometryUtils={merge:function(a,b,c){THREE.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\");var d;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){THREE.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");return a.center()}};\nTHREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.Texture(void 0,b);e.load(a,function(a){f.image=a;f.needsUpdate=!0;c&&c(f)},void 0,function(a){d&&d(a)});f.sourceFile=a;return f},loadTextureCube:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.CubeTexture([],b);f.flipY=!1;var g=0;b=function(b){e.load(a[b],function(a){f.images[b]=a;g+=1;6===g&&(f.needsUpdate=!0,c&&\nc(f))},void 0,d)};for(var h=0,k=a.length;h<k;++h)b(h);return f},loadCompressedTexture:function(){THREE.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},loadCompressedTextureCube:function(){THREE.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement(\"canvas\");\nf.width=d;f.height=e;var g=f.getContext(\"2d\");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,k=g.createImageData(d,e),l=k.data,p=0;p<d;p++)for(var q=0;q<e;q++){var n=0>q-1?0:q-1,t=q+1>e-1?e-1:q+1,r=0>p-1?0:p-1,s=p+1>d-1?d-1:p+1,u=[],v=[0,0,h[4*(q*d+p)]/255*b];u.push([-1,0,h[4*(q*d+r)]/255*b]);u.push([-1,-1,h[4*(n*d+r)]/255*b]);u.push([0,-1,h[4*(n*d+p)]/255*b]);u.push([1,-1,h[4*(n*d+s)]/255*b]);u.push([1,0,h[4*(q*d+s)]/255*b]);u.push([1,1,h[4*(t*d+s)]/255*b]);u.push([0,1,h[4*(t*d+p)]/255*\nb]);u.push([-1,1,h[4*(t*d+r)]/255*b]);n=[];r=u.length;for(t=0;t<r;t++){var s=u[t],x=u[(t+1)%r],s=[s[0]-v[0],s[1]-v[1],s[2]-v[2]],x=[x[0]-v[0],x[1]-v[1],x[2]-v[2]];n.push(c([s[1]*x[2]-s[2]*x[1],s[2]*x[0]-s[0]*x[2],s[0]*x[1]-s[1]*x[0]]))}u=[0,0,0];for(t=0;t<n.length;t++)u[0]+=n[t][0],u[1]+=n[t][1],u[2]+=n[t][2];u[0]/=n.length;u[1]/=n.length;u[2]/=n.length;v=4*(q*d+p);l[v]=(u[0]+1)/2*255|0;l[v+1]=(u[1]+1)/2*255|0;l[v+2]=255*u[2]|0;l[v+3]=255}g.putImageData(k,0,0);return f},generateDataTexture:function(a,\nb,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};\nTHREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\nTHREE.FontUtils={faces:{},face:\"helvetiker\",weight:\"normal\",style:\"normal\",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(a){throw\"The font \"+this.face+\" with \"+this.weight+\" weight and \"+this.style+\" style is missing.\";}},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=\na},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=String(a).split(\"\"),f=e.length,g=[];for(a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,k,l,p,q,n,t,r,s,u,v=b.glyphs[a]||b.glyphs[\"?\"];if(v){if(v.o)for(b=v._cachedOutline||(v._cachedOutline=v.o.split(\" \")),l=b.length,a=0;a<l;)switch(k=b[a++],k){case \"m\":k=b[a++]*c+d;p=b[a++]*c;e.moveTo(k,p);\nbreak;case \"l\":k=b[a++]*c+d;p=b[a++]*c;e.lineTo(k,p);break;case \"q\":k=b[a++]*c+d;p=b[a++]*c;t=b[a++]*c+d;r=b[a++]*c;e.quadraticCurveTo(t,r,k,p);if(g=f[f.length-1])for(q=g.x,n=g.y,g=1,h=this.divisions;g<=h;g++){var x=g/h;THREE.Shape.Utils.b2(x,q,t,k);THREE.Shape.Utils.b2(x,n,r,p)}break;case \"b\":if(k=b[a++]*c+d,p=b[a++]*c,t=b[a++]*c+d,r=b[a++]*c,s=b[a++]*c+d,u=b[a++]*c,e.bezierCurveTo(t,r,s,u,k,p),g=f[f.length-1])for(q=g.x,n=g.y,g=1,h=this.divisions;g<=h;g++)x=g/h,THREE.Shape.Utils.b3(x,q,t,s,k),THREE.Shape.Utils.b3(x,\nn,r,u,p)}return{offset:v.ha*c,path:e}}}};\nTHREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:\"helvetiker\",e=void 0!==b.weight?b.weight:\"normal\",f=void 0!==b.style?b.style:\"normal\";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};\n(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],k,l,p;if(0<b(a))for(l=0;l<e;l++)g[l]=l;else for(l=0;l<e;l++)g[l]=e-1-l;var q=2*e;for(l=e-1;2<e;){if(0>=q--){THREE.warn(\"THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()\");break}k=l;e<=k&&(k=0);l=k+1;e<=l&&(l=0);p=l+1;e<=p&&(p=0);var n;a:{var t=n=void 0,r=void 0,s=void 0,\nu=void 0,v=void 0,x=void 0,D=void 0,w=void 0,t=a[g[k]].x,r=a[g[k]].y,s=a[g[l]].x,u=a[g[l]].y,v=a[g[p]].x,x=a[g[p]].y;if(1E-10>(s-t)*(x-r)-(u-r)*(v-t))n=!1;else{var y=void 0,A=void 0,E=void 0,G=void 0,F=void 0,z=void 0,I=void 0,U=void 0,M=void 0,H=void 0,M=U=I=w=D=void 0,y=v-s,A=x-u,E=t-v,G=r-x,F=s-t,z=u-r;for(n=0;n<e;n++)if(D=a[g[n]].x,w=a[g[n]].y,!(D===t&&w===r||D===s&&w===u||D===v&&w===x)&&(I=D-t,U=w-r,M=D-s,H=w-u,D-=v,w-=x,M=y*H-A*M,I=F*U-z*I,U=E*w-G*D,-1E-10<=M&&-1E-10<=U&&-1E-10<=I)){n=!1;break a}n=\n!0}}if(n){f.push([a[g[k]],a[g[l]],a[g[p]]]);h.push([g[k],g[l],g[p]]);k=l;for(p=l+1;p<e;k++,p++)g[k]=g[p];e--;q=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;\nTHREE.Audio=function(a){THREE.Object3D.call(this);this.type=\"Audio\";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain);this.autoplay=!1;this.startTime=0;this.isPlaying=!1};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;\nTHREE.Audio.prototype.load=function(a){var b=this,c=new XMLHttpRequest;c.open(\"GET\",a,!0);c.responseType=\"arraybuffer\";c.onload=function(a){b.context.decodeAudioData(this.response,function(a){b.source.buffer=a;b.autoplay&&b.play()})};c.send();return this};\nTHREE.Audio.prototype.play=function(){if(!0===this.isPlaying)THREE.warn(\"THREE.Audio: Audio is already playing.\");else{var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.connect(this.panner);a.start(0,this.startTime);this.isPlaying=!0;this.source=a}};THREE.Audio.prototype.pause=function(){this.source.stop();this.startTime=this.context.currentTime};THREE.Audio.prototype.stop=function(){this.source.stop();this.startTime=0};\nTHREE.Audio.prototype.onEnded=function(){this.isPlaying=!1};THREE.Audio.prototype.setLoop=function(a){this.source.loop=a};THREE.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};THREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a};\nTHREE.Audio.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type=\"AudioListener\";this.context=new (window.AudioContext||window.webkitAudioContext)};THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;\nTHREE.AudioListener.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g){THREE.Object3D.prototype.updateMatrixWorld.call(this,g);g=this.context.listener;var h=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.subVectors(a,f);g.setPosition(a.x,a.y,a.z);g.setOrientation(d.x,d.y,d.z,h.x,h.y,h.z);g.setVelocity(e.x,e.y,e.z);f.copy(a)}}();\nTHREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){THREE.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};\nTHREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};\nTHREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,k;g<=h;)if(d=Math.floor(g+(h-g)/2),k=c[d]-f,0>k)g=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};\nTHREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};\nTHREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};\nTHREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};\nTHREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};\nTHREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};\nTHREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,k,l,p,q=a[0]instanceof THREE.Vector3;p=q?new THREE.Vector3:new THREE.Vector2;k=0;for(l=a.length;k<l;k++)h=a[k],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),q&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),p.add(h);a={minX:e,minY:f,maxX:b,maxY:c};q&&(a.maxZ=d,a.minZ=g);return a};\nTHREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};\nTHREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};\nTHREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,k;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,k=g/c.maxX,k=b.getUtoTmapping(k,g),g=b.getPoint(k),k=b.getTangent(k),k.set(-k.y,k.x).multiplyScalar(h),f.x=g.x+k.x,f.y=g.y+k.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;\nTHREE.Gyroscope.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Quaternion,f=new THREE.Vector3;return function(g){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||g)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(d,e,f),this.matrix.decompose(a,b,c),this.matrixWorld.compose(d,b,f)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=\n!1,g=!0;for(var h=0,k=this.children.length;h<k;h++)this.children[h].updateMatrixWorld(g)}}();THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:\"moveTo\",LINE_TO:\"lineTo\",QUADRATIC_CURVE_TO:\"quadraticCurveTo\",BEZIER_CURVE_TO:\"bezierCurveTo\",CSPLINE_THRU:\"splineThru\",ARC:\"arc\",ELLIPSE:\"ellipse\"};\nTHREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};\nTHREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};\nTHREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};\nTHREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};\nTHREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};\nTHREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),k=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(k);k=k.getPoint(1);h.push(k.x);h.push(k.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};\nTHREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c};\nTHREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log(\"tata\"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,k,l,p,q,n,t,r,s;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];k=f[3];q=f[0];n=f[1];0<c.length?(g=c[c.length-1],t=g.x,\nr=g.y):(g=this.actions[d-1].args,t=g[g.length-2],r=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b2(s,t,q,h),s=THREE.Shape.Utils.b2(s,r,n,k),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];k=f[5];q=f[0];n=f[1];l=f[2];p=f[3];0<c.length?(g=c[c.length-1],t=g.x,r=g.y):(g=this.actions[d-1].args,t=g[g.length-2],r=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b3(s,t,q,l,h),s=THREE.Shape.Utils.b3(s,r,n,p,k),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.CSPLINE_THRU:g=\nthis.actions[d-1].args;s=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;s=s.concat(f[0]);s=new THREE.SplineCurve(s);for(f=1;f<=g;f++)c.push(s.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];k=f[1];n=f[2];l=f[3];g=f[4];q=!!f[5];t=g-l;r=2*a;for(f=1;f<=r;f++)s=f/r,q||(s=1-s),s=l+s*t,g=h+n*Math.cos(s),s=k+n*Math.sin(s),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.ELLIPSE:for(h=f[0],k=f[1],n=f[2],p=f[3],l=f[4],g=f[5],q=!!f[6],t=g-l,r=2*a,f=1;f<=r;f++)s=f/r,q||\n(s=1-s),s=l+s*t,g=h+n*Math.cos(s),s=k+p*Math.sin(s),c.push(new THREE.Vector2(g,s))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};\nTHREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,n=h.y-g.y;if(1E-10<Math.abs(n)){if(0>n&&(g=b[f],k=-k,h=b[e],n=-n),!(a.y<g.y||a.y>h.y))if(a.y==g.y){if(a.x==g.x)return!0}else{e=n*(a.x-g.x)-k*(a.y-g.y);if(0==e)return!0;0>e||(d=!d)}}else if(a.y==g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=\nh.x))return!0}return d}var e=function(a){var b,c,d,e,f=[],g=new THREE.Path;b=0;for(c=a.length;b<c;b++)d=a[b],e=d.args,d=d.action,d==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new THREE.Path),g[d].apply(g,e);0!=g.actions.length&&f.push(g);return f}(this.actions);if(0==e.length)return[];if(!0===b)return c(e);var f,g,h,k=[];if(1==e.length)return g=e[0],h=new THREE.Shape,h.actions=g.actions,h.curves=g.curves,k.push(h),k;var l=!THREE.Shape.Utils.isClockWise(e[0].getPoints()),l=a?!l:l;\nh=[];var p=[],q=[],n=0,t;p[n]=void 0;q[n]=[];var r,s;r=0;for(s=e.length;r<s;r++)g=e[r],t=g.getPoints(),f=THREE.Shape.Utils.isClockWise(t),(f=a?!f:f)?(!l&&p[n]&&n++,p[n]={s:new THREE.Shape,p:t},p[n].s.actions=g.actions,p[n].s.curves=g.curves,l&&n++,q[n]=[]):q[n].push({h:g,p:t[0]});if(!p[0])return c(e);if(1<p.length){r=!1;s=[];g=0;for(e=p.length;g<e;g++)h[g]=[];g=0;for(e=p.length;g<e;g++)for(f=q[g],l=0;l<f.length;l++){n=f[l];t=!0;for(var u=0;u<p.length;u++)d(n.p,p[u].p)&&(g!=u&&s.push({froms:g,tos:u,\nhole:l}),t?(t=!1,h[u].push(n)):r=!0);t&&h[g].push(n)}0<s.length&&(r||(q=h))}r=0;for(s=p.length;r<s;r++)for(h=p[r].s,k.push(h),g=q[r],e=0,f=g.length;e<f;e++)h.holes.push(g[e].h);return k};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};\nTHREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};\nTHREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};\nTHREE.Shape.Utils={triangulateShape:function(a,b){function c(a,b,c){return a.x!=b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-d.x,l=e.y-d.y,p=a.x-d.x,q=a.y-d.y,E=h*k-g*l,G=h*p-g*q;if(1E-10<Math.abs(E)){if(0<E){if(0>G||G>E)return[];k=l*p-k*q;if(0>k||k>E)return[]}else{if(0<G||G<E)return[];k=l*p-k*q;if(0<k||k<E)return[]}if(0==k)return!f||0!=G&&G!=E?[a]:[];if(k==E)return!f||0!=G&&G!=E?[b]:[];if(0==G)return[d];\nif(G==E)return[e];f=k/E;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!=G||l*p!=k*q)return[];h=0==g&&0==h;k=0==k&&0==l;if(h&&k)return a.x!=d.x||a.y!=d.y?[]:[a];if(h)return c(d,e,a)?[a]:[];if(k)return c(a,b,d)?[d]:[];0!=g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),d.x<e.x?(b=d,E=d.x,l=e,d=e.x):(b=e,E=e.x,l=d,d=d.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),d.y<e.y?(b=d,E=d.y,l=e,d=e.y):(b=e,E=e.y,l=d,d=d.y));return k<=E?a<E?[]:a==E?f?[]:[b]:a<=d?[b,h]:[b,l]:k>d?[]:k==d?f?[]:[g]:a<=d?[g,h]:\n[g,l]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return 1E-10<Math.abs(a)?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var f,g,h,k,l,p={};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=h.length;f<g;f++)l=h[f].x+\":\"+h[f].y,void 0!==p[l]&&THREE.warn(\"THREE.Shape: Duplicate point\",l),p[l]=f;f=function(a,b){function c(a,b){var d=h.length-1,f=a-1;0>f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],k[b]);\nif(!d)return!1;d=k.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(k[b],k[f],k[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,k;for(e=0;e<l.length;e++)for(f=b[l[e]],h=0;h<f.length;h++)if(k=h+1,k%=f.length,k=d(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var h=a.concat(),k,l=[],p,q,A,E,G,F=[],z,I,U,M=0;for(p=b.length;M<p;M++)l.push(M);z=0;for(var H=2*l.length;0<l.length;){H--;if(0>\nH){console.log(\"Infinite Loop! Holes left:\"+l.length+\", Probably Hole outside Shape!\");break}for(q=z;q<h.length;q++){A=h[q];p=-1;for(M=0;M<l.length;M++)if(E=l[M],G=A.x+\":\"+A.y+\":\"+E,void 0===F[G]){k=b[E];for(I=0;I<k.length;I++)if(E=k[I],c(q,I)&&!f(A,E)&&!g(A,E)){p=I;l.splice(M,1);z=h.slice(0,q+1);E=h.slice(q);I=k.slice(p);U=k.slice(0,p+1);h=z.concat(I).concat(U).concat(E);z=q;break}if(0<=p)break;F[G]=!0}if(0<=p)break}}return h}(a,b);var q=THREE.FontUtils.Triangulate(f,!1);f=0;for(g=q.length;f<g;f++)for(k=\nq[f],h=0;3>h;h++)l=k[h].x+\":\"+k[h].y,l=p[l],void 0!==l&&(k[h]=l);return q.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*\na*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};\nTHREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;\nTHREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return b};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=new THREE.Vector2;b.x=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);return b.normalize()};\nTHREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};\nTHREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;\nTHREE.SplineCurve.prototype.getPoint=function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=new THREE.Vector2;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);return c};THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};\nTHREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);a=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;b=new THREE.Vector2;b.x=this.aX+this.xRadius*Math.cos(a);b.y=this.aY+this.yRadius*Math.sin(a);return b};\nTHREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});\nTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);b.z=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return b});\nTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);b.y=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b.z=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return b});\nTHREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=new THREE.Vector3;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,f.z,b.z,a);return c});\nTHREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-0;var c=Math.floor(a);a-=c;var c=c+(0<c?0:(Math.floor(Math.abs(c)/b.length)+1)*b.length),d=b[(c-1)%b.length],e=b[c%b.length],f=b[(c+1)%b.length],b=b[(c+2)%b.length],c=new THREE.Vector3;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,f.z,b.z,a);return c});\nTHREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){THREE.warn(\"THREE.AnimationHandler.add() has been deprecated.\")},get:function(){THREE.warn(\"THREE.AnimationHandler.get() has been deprecated.\")},remove:function(){THREE.warn(\"THREE.AnimationHandler.remove() has been deprecated.\")},animations:[],init:function(a){if(!0===a.initialized)return a;for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(0>a.hierarchy[b].keys[c].time&&(a.hierarchy[b].keys[c].time=\n0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=(new THREE.Quaternion).fromArray(d)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){d={};for(c=0;c<a.hierarchy[b].keys.length;c++)for(var e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++){var f=a.hierarchy[b].keys[c].morphTargets[e];d[f]=-1}a.hierarchy[b].usedMorphTargets=d;for(c=0;c<a.hierarchy[b].keys.length;c++){var g=\n{};for(f in d){for(e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++)if(a.hierarchy[b].keys[c].morphTargets[e]===f){g[f]=a.hierarchy[b].keys[c].morphTargetsInfluences[e];break}e===a.hierarchy[b].keys[c].morphTargets.length&&(g[f]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=g}}for(c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}a.initialized=\n!0;return a},parse:function(a){var b=function(a,c){c.push(a);for(var d=0;d<a.children.length;d++)b(a.children[d],c)},c=[];if(a instanceof THREE.SkinnedMesh)for(var d=0;d<a.skeleton.bones.length;d++)c.push(a.skeleton.bones[d]);else b(a,c);return c},play:function(a){-1===this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){a=this.animations.indexOf(a);-1!==a&&this.animations.splice(a,1)},update:function(a){for(var b=0;b<this.animations.length;b++)this.animations[b].resetBlendWeights();\nfor(b=0;b<this.animations.length;b++)this.animations[b].update(a)}};THREE.Animation=function(a,b){this.root=a;this.data=THREE.AnimationHandler.init(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};\nTHREE.Animation.prototype={constructor:THREE.Animation,keyTypes:[\"pos\",\"rot\",\"scl\"],play:function(a,b){this.currentTime=void 0!==a?a:0;this.weight=void 0!==b?b:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)},reset:function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a];void 0===c.animationCache&&(c.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});\nvar d=this.data.name,e=c.animationCache.animations,f=e[d];void 0===f&&(f={prevKey:{pos:0,rot:0,scl:0},nextKey:{pos:0,rot:0,scl:0},originalMatrix:c.matrix},e[d]=f);for(c=0;3>c;c++){for(var d=this.keyTypes[c],e=this.data.hierarchy[a].keys[0],g=this.getNextKeyWith(d,a,1);g.time<this.currentTime&&g.index>e.index;)e=g,g=this.getNextKeyWith(d,a,g.index+1);f.prevKey[d]=e;f.nextKey[d]=g}}},resetBlendWeights:function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a].animationCache;void 0!==\nc&&(c=c.blending,c.positionWeight=0,c.quaternionWeight=0,c.scaleWeight=0)}},update:function(){var a=[],b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Quaternion,e=function(a,b){var c=[],d=[],e,q,n,t,r,s;e=(a.length-1)*b;q=Math.floor(e);e-=q;c[0]=0===q?q:q-1;c[1]=q;c[2]=q>a.length-2?q:q+1;c[3]=q>a.length-3?q:q+2;q=a[c[0]];t=a[c[1]];r=a[c[2]];s=a[c[3]];c=e*e;n=e*c;d[0]=f(q[0],t[0],r[0],s[0],e,c,n);d[1]=f(q[1],t[1],r[1],s[1],e,c,n);d[2]=f(q[2],t[2],r[2],s[2],e,c,n);return d},f=function(a,b,c,d,\ne,f,n){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*n+(-3*(b-c)-2*a-d)*f+a*e+b};return function(f){if(!1!==this.isPlaying&&(this.currentTime+=f*this.timeScale,0!==this.weight)){f=this.data.length;if(this.currentTime>f||0>this.currentTime)this.loop?(this.currentTime%=f,0>this.currentTime&&(this.currentTime+=f),this.reset()):this.stop();f=0;for(var h=this.hierarchy.length;f<h;f++)for(var k=this.hierarchy[f],l=k.animationCache.animations[this.data.name],p=k.animationCache.blending,q=0;3>q;q++){var n=this.keyTypes[q],\nt=l.prevKey[n],r=l.nextKey[n];if(0<this.timeScale&&r.time<=this.currentTime||0>this.timeScale&&t.time>=this.currentTime){t=this.data.hierarchy[f].keys[0];for(r=this.getNextKeyWith(n,f,1);r.time<this.currentTime&&r.index>t.index;)t=r,r=this.getNextKeyWith(n,f,r.index+1);l.prevKey[n]=t;l.nextKey[n]=r}var s=(this.currentTime-t.time)/(r.time-t.time),u=t[n],v=r[n];0>s&&(s=0);1<s&&(s=1);if(\"pos\"===n)if(this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=u[0]+(v[0]-u[0])*s,c.y=u[1]+(v[1]-u[1])*s,\nc.z=u[2]+(v[2]-u[2])*s,t=this.weight/(this.weight+p.positionWeight),k.position.lerp(c,t),p.positionWeight+=this.weight;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)a[0]=this.getPrevKeyWith(\"pos\",f,t.index-1).pos,a[1]=u,a[2]=v,a[3]=this.getNextKeyWith(\"pos\",f,r.index+1).pos,s=.33*s+.33,r=e(a,s),t=this.weight/(this.weight+p.positionWeight),p.positionWeight+=this.weight,n=k.position,n.x+=(r[0]-n.x)*t,n.y+=(r[1]-\nn.y)*t,n.z+=(r[2]-n.z)*t,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(s=e(a,1.01*s),b.set(s[0],s[1],s[2]),b.sub(n),b.y=0,b.normalize(),s=Math.atan2(b.x,b.z),k.rotation.set(0,s,0))}else\"rot\"===n?(THREE.Quaternion.slerp(u,v,d,s),0===p.quaternionWeight?(k.quaternion.copy(d),p.quaternionWeight=this.weight):(t=this.weight/(this.weight+p.quaternionWeight),THREE.Quaternion.slerp(k.quaternion,d,k.quaternion,t),p.quaternionWeight+=this.weight)):\"scl\"===n&&(c.x=u[0]+(v[0]-u[0])*s,c.y=\nu[1]+(v[1]-u[1])*s,c.z=u[2]+(v[2]-u[2])*s,t=this.weight/(this.weight+p.scaleWeight),k.scale.lerp(c,t),p.scaleWeight+=this.weight)}return!0}}}(),getNextKeyWith:function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]},getPrevKeyWith:function(a,b,c){var d=\nthis.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]}};\nTHREE.KeyFrameAnimation=function(a){this.root=a.node;this.data=THREE.AnimationHandler.init(a);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();\nd.matrixWorldNeedsUpdate=!0}}};\nTHREE.KeyFrameAnimation.prototype={constructor:THREE.KeyFrameAnimation,play:function(a){this.currentTime=void 0!==a?a:0;if(!1===this.isPlaying){this.isPlaying=!0;var b=this.hierarchy.length,c,d;for(a=0;a<b;a++)c=this.hierarchy[a],d=this.data.hierarchy[a],void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c.matrix),c=this.data.hierarchy[a].keys,c.length&&(d.animationCache.prevKey=c[0],d.animationCache.nextKey=\nc[1],this.startTime=Math.min(c[0].time,this.startTime),this.endTime=Math.max(c[c.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)},stop:function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;d.copy(b.matrix);b.matrix=d;delete c.animationCache}}},update:function(a){if(!1!==\nthis.isPlaying){this.currentTime+=a*this.timeScale;a=this.data.length;!0===this.loop&&this.currentTime>a&&(this.currentTime%=a);this.currentTime=Math.min(this.currentTime,a);a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a],d=this.data.hierarchy[a],e=d.keys,d=d.animationCache;if(e.length){var f=d.prevKey,g=d.nextKey;if(g.time<=this.currentTime){for(;g.time<this.currentTime&&g.index>f.index;)f=g,g=e[f.index+1];d.prevKey=f;d.nextKey=g}g.time>=this.currentTime?f.interpolate(g,this.currentTime):\nf.interpolate(g,g.time);this.data.hierarchy[a].node.updateMatrix();c.matrixWorldNeedsUpdate=!0}}}},getNextKeyWith:function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]},getPrevKeyWith:function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]}};\nTHREE.MorphAnimation=function(a){this.mesh=a;this.frames=a.morphTargetInfluences.length;this.currentTime=0;this.duration=1E3;this.loop=!0;this.currentFrame=this.lastFrame=0;this.isPlaying=!1};\nTHREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(a){if(!1!==this.isPlaying){this.currentTime+=a;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);a=this.duration/this.frames;var b=Math.floor(this.currentTime/a),c=this.mesh.morphTargetInfluences;b!=this.currentFrame&&(c[this.lastFrame]=0,c[this.currentFrame]=\n1,c[b]=0,this.lastFrame=this.currentFrame,this.currentFrame=b);c[b]=this.currentTime%a/a;c[this.lastFrame]=1-c[b]}}};\nTHREE.BoxGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,s){var u,v=h.widthSegments,x=h.heightSegments,D=e/2,w=f/2,y=h.vertices.length;if(\"x\"===a&&\"y\"===b||\"y\"===a&&\"x\"===b)u=\"z\";else if(\"x\"===a&&\"z\"===b||\"z\"===a&&\"x\"===b)u=\"y\",x=h.depthSegments;else if(\"z\"===a&&\"y\"===b||\"y\"===a&&\"z\"===b)u=\"x\",v=h.depthSegments;var A=v+1,E=x+1,G=e/v,F=f/x,z=new THREE.Vector3;z[u]=0<g?1:-1;for(e=0;e<E;e++)for(f=0;f<A;f++){var I=new THREE.Vector3;I[a]=(f*G-D)*c;I[b]=(e*F-w)*d;I[u]=g;h.vertices.push(I)}for(e=\n0;e<x;e++)for(f=0;f<v;f++)w=f+A*e,a=f+A*(e+1),b=f+1+A*(e+1),c=f+1+A*e,d=new THREE.Vector2(f/v,1-e/x),g=new THREE.Vector2(f/v,1-(e+1)/x),u=new THREE.Vector2((f+1)/v,1-(e+1)/x),D=new THREE.Vector2((f+1)/v,1-e/x),w=new THREE.Face3(w+y,a+y,c+y),w.normal.copy(z),w.vertexNormals.push(z.clone(),z.clone(),z.clone()),w.materialIndex=s,h.faces.push(w),h.faceVertexUvs[0].push([d,g,D]),w=new THREE.Face3(a+y,b+y,c+y),w.normal.copy(z),w.vertexNormals.push(z.clone(),z.clone(),z.clone()),w.materialIndex=s,h.faces.push(w),\nh.faceVertexUvs[0].push([g.clone(),u,D.clone()])}THREE.Geometry.call(this);this.type=\"BoxGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=f||1;var h=this;d=a/2;e=b/2;f=c/2;g(\"z\",\"y\",-1,-1,c,b,d,0);g(\"z\",\"y\",1,-1,c,b,-d,1);g(\"x\",\"z\",1,1,a,c,e,2);g(\"x\",\"z\",1,-1,a,c,-e,3);g(\"x\",\"y\",1,-1,a,b,f,4);g(\"x\",\"y\",-1,-1,a,b,-f,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;\nTHREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"CircleGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e,f=[];e=new THREE.Vector3;var g=new THREE.Vector2(.5,.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3,k=c+e/b*d;h.x=a*Math.cos(k);h.y=a*Math.sin(k);this.vertices.push(h);f.push(new THREE.Vector2((h.x/a+1)/2,(h.y/a+1)/2))}c=new THREE.Vector3(0,\n0,1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([f[e].clone(),f[e+1].clone(),g.clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;\nTHREE.CubeGeometry=function(a,b,c,d,e,f){THREE.warn(\"THREE.CubeGeometry has been renamed to THREE.BoxGeometry.\");return new THREE.BoxGeometry(a,b,c,d,e,f)};\nTHREE.CylinderGeometry=function(a,b,c,d,e,f,g,h){THREE.Geometry.call(this);this.type=\"CylinderGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;d=d||8;e=e||1;f=void 0!==f?f:!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var k=c/2,l,p,q=[],n=[];for(p=0;p<=e;p++){var t=[],r=[],s=p/e,u=s*(b-a)+a;for(l=0;l<=d;l++){var v=l/d,x=new THREE.Vector3;x.x=u*Math.sin(v*h+\ng);x.y=-s*c+k;x.z=u*Math.cos(v*h+g);this.vertices.push(x);t.push(this.vertices.length-1);r.push(new THREE.Vector2(v,1-s))}q.push(t);n.push(r)}c=(b-a)/c;for(l=0;l<d;l++)for(0!==a?(g=this.vertices[q[0][l]].clone(),h=this.vertices[q[0][l+1]].clone()):(g=this.vertices[q[1][l]].clone(),h=this.vertices[q[1][l+1]].clone()),g.setY(Math.sqrt(g.x*g.x+g.z*g.z)*c).normalize(),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*c).normalize(),p=0;p<e;p++){var t=q[p][l],r=q[p+1][l],s=q[p+1][l+1],u=q[p][l+1],v=g.clone(),x=g.clone(),\nD=h.clone(),w=h.clone(),y=n[p][l].clone(),A=n[p+1][l].clone(),E=n[p+1][l+1].clone(),G=n[p][l+1].clone();this.faces.push(new THREE.Face3(t,r,u,[v,x,w]));this.faceVertexUvs[0].push([y,A,G]);this.faces.push(new THREE.Face3(r,s,u,[x.clone(),D,w.clone()]));this.faceVertexUvs[0].push([A.clone(),E,G.clone()])}if(!1===f&&0<a)for(this.vertices.push(new THREE.Vector3(0,k,0)),l=0;l<d;l++)t=q[0][l],r=q[0][l+1],s=this.vertices.length-1,v=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),D=new THREE.Vector3(0,\n1,0),y=n[0][l].clone(),A=n[0][l+1].clone(),E=new THREE.Vector2(A.x,0),this.faces.push(new THREE.Face3(t,r,s,[v,x,D])),this.faceVertexUvs[0].push([y,A,E]);if(!1===f&&0<b)for(this.vertices.push(new THREE.Vector3(0,-k,0)),l=0;l<d;l++)t=q[e][l+1],r=q[e][l],s=this.vertices.length-1,v=new THREE.Vector3(0,-1,0),x=new THREE.Vector3(0,-1,0),D=new THREE.Vector3(0,-1,0),y=n[e][l+1].clone(),A=n[e][l].clone(),E=new THREE.Vector2(A.x,1),this.faces.push(new THREE.Face3(t,r,s,[v,x,D])),this.faceVertexUvs[0].push([y,\nA,E]);this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.ExtrudeGeometry=function(a,b){\"undefined\"!==typeof a&&(THREE.Geometry.call(this),this.type=\"ExtrudeGeometry\",a=a instanceof Array?a:[a],this.addShapeList(a,b),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;\nTHREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};\nTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||THREE.error(\"THREE.ExtrudeGeometry: vec does not exist\");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=1,d=a.x-b.x,e=a.y-b.y,f=c.x-a.x,g=c.y-a.y,h=d*d+e*e;if(1E-10<Math.abs(d*g-e*f)){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e/k;b=b.y+d/k;f=((c.x-g/l-h)*g-(c.y+f/l-b)*f)/(d*g-e*f);c=h+d*f-a.x;a=b+e*f-a.y;d=c*c+a*a;if(2>=d)return new THREE.Vector2(c,a);d=Math.sqrt(d/2)}else a=!1,1E-10<d?1E-10<f&&(a=!0):\n-1E-10>d?-1E-10>f&&(a=!0):Math.sign(e)==Math.sign(g)&&(a=!0),a?(c=-e,a=d,d=Math.sqrt(h)):(c=d,a=e,d=Math.sqrt(h/2));return new THREE.Vector2(c/d,a/d)}function e(a,b){var c,d;for(O=a.length;0<=--O;){c=O;d=O-1;0>d&&(d=a.length-1);for(var e=0,f=t+2*p,e=0;e<f;e++){var g=oa*e,h=oa*(e+1),k=b+c+g,g=b+d+g,l=b+d+h,h=b+c+h,k=k+U,g=g+U,l=l+U,h=h+U;I.faces.push(new THREE.Face3(k,g,h,null,null,x));I.faces.push(new THREE.Face3(g,l,h,null,null,x));k=D.generateSideWallUV(I,k,g,l,h);I.faceVertexUvs[0].push([k[0],\nk[1],k[3]]);I.faceVertexUvs[0].push([k[1],k[2],k[3]])}}}function f(a,b,c){I.vertices.push(new THREE.Vector3(a,b,c))}function g(a,b,c){a+=U;b+=U;c+=U;I.faces.push(new THREE.Face3(a,b,c,null,null,v));a=D.generateTopUV(I,a,b,c);I.faceVertexUvs[0].push(a)}var h=void 0!==b.amount?b.amount:100,k=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:k-2,p=void 0!==b.bevelSegments?b.bevelSegments:3,q=void 0!==b.bevelEnabled?b.bevelEnabled:!0,n=void 0!==b.curveSegments?b.curveSegments:\n12,t=void 0!==b.steps?b.steps:1,r=b.extrudePath,s,u=!1,v=b.material,x=b.extrudeMaterial,D=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,y,A,E;r&&(s=r.getSpacedPoints(t),u=!0,q=!1,w=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(r,t,!1),y=new THREE.Vector3,A=new THREE.Vector3,E=new THREE.Vector3);q||(l=k=p=0);var G,F,z,I=this,U=this.vertices.length,r=a.extractPoints(n),n=r.shape,M=r.holes;if(r=!THREE.Shape.Utils.isClockWise(n)){n=n.reverse();F=0;for(z=\nM.length;F<z;F++)G=M[F],THREE.Shape.Utils.isClockWise(G)&&(M[F]=G.reverse());r=!1}var H=THREE.Shape.Utils.triangulateShape(n,M),L=n;F=0;for(z=M.length;F<z;F++)G=M[F],n=n.concat(G);var P,N,R,V,J,oa=n.length,ja,ha=H.length,r=[],O=0;R=L.length;P=R-1;for(N=O+1;O<R;O++,P++,N++)P===R&&(P=0),N===R&&(N=0),r[O]=d(L[O],L[P],L[N]);var ca=[],ba,qa=r.concat();F=0;for(z=M.length;F<z;F++){G=M[F];ba=[];O=0;R=G.length;P=R-1;for(N=O+1;O<R;O++,P++,N++)P===R&&(P=0),N===R&&(N=0),ba[O]=d(G[O],G[P],G[N]);ca.push(ba);qa=\nqa.concat(ba)}for(P=0;P<p;P++){R=P/p;V=k*(1-R);N=l*Math.sin(R*Math.PI/2);O=0;for(R=L.length;O<R;O++)J=c(L[O],r[O],N),f(J.x,J.y,-V);F=0;for(z=M.length;F<z;F++)for(G=M[F],ba=ca[F],O=0,R=G.length;O<R;O++)J=c(G[O],ba[O],N),f(J.x,J.y,-V)}N=l;for(O=0;O<oa;O++)J=q?c(n[O],qa[O],N):n[O],u?(A.copy(w.normals[0]).multiplyScalar(J.x),y.copy(w.binormals[0]).multiplyScalar(J.y),E.copy(s[0]).add(A).add(y),f(E.x,E.y,E.z)):f(J.x,J.y,0);for(R=1;R<=t;R++)for(O=0;O<oa;O++)J=q?c(n[O],qa[O],N):n[O],u?(A.copy(w.normals[R]).multiplyScalar(J.x),\ny.copy(w.binormals[R]).multiplyScalar(J.y),E.copy(s[R]).add(A).add(y),f(E.x,E.y,E.z)):f(J.x,J.y,h/t*R);for(P=p-1;0<=P;P--){R=P/p;V=k*(1-R);N=l*Math.sin(R*Math.PI/2);O=0;for(R=L.length;O<R;O++)J=c(L[O],r[O],N),f(J.x,J.y,h+V);F=0;for(z=M.length;F<z;F++)for(G=M[F],ba=ca[F],O=0,R=G.length;O<R;O++)J=c(G[O],ba[O],N),u?f(J.x,J.y+s[t-1].y,s[t-1].x+V):f(J.x,J.y,h+V)}(function(){if(q){var a;a=0*oa;for(O=0;O<ha;O++)ja=H[O],g(ja[2]+a,ja[1]+a,ja[0]+a);a=t+2*p;a*=oa;for(O=0;O<ha;O++)ja=H[O],g(ja[0]+a,ja[1]+a,ja[2]+\na)}else{for(O=0;O<ha;O++)ja=H[O],g(ja[2],ja[1],ja[0]);for(O=0;O<ha;O++)ja=H[O],g(ja[0]+oa*t,ja[1]+oa*t,ja[2]+oa*t)}})();(function(){var a=0;e(L,a);a+=L.length;F=0;for(z=M.length;F<z;F++)G=M[F],e(G,a),a+=G.length})()};\nTHREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y),new THREE.Vector2(d.x,d.y)]},generateSideWallUV:function(a,b,c,d,e){a=a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return.01>Math.abs(b.y-c.y)?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(d.y,\n1-d.z),new THREE.Vector2(e.y,1-e.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type=\"ShapeGeometry\";!1===a instanceof Array&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};\nTHREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var k=e.shape,l=e.holes;if(!THREE.Shape.Utils.isClockWise(k))for(k=k.reverse(),e=0,f=l.length;e<f;e++)g=l[e],THREE.Shape.Utils.isClockWise(g)&&(l[e]=g.reverse());var p=THREE.Shape.Utils.triangulateShape(k,l);e=0;for(f=l.length;e<f;e++)g=l[e],\nk=k.concat(g);l=k.length;f=p.length;for(e=0;e<l;e++)g=k[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)l=p[e],k=l[0]+h,g=l[1]+h,l=l[2]+h,this.faces.push(new THREE.Face3(k,g,l,null,null,c)),this.faceVertexUvs[0].push(d.generateTopUV(this,k,g,l))};\nTHREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"LatheGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=b||12;c=c||0;d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var k=c+g*f*d,l=Math.cos(k),p=Math.sin(k),k=0,q=a.length;k<q;k++){var n=a[k],t=new THREE.Vector3;t.x=l*n.x-p*n.y;t.y=p*n.x+l*n.y;t.z=n.z;this.vertices.push(t)}c=a.length;g=0;for(h=b;g<h;g++)for(k=0,q=a.length-1;k<q;k++){b=p=k+c*g;d=p+c;var l=p+1+c,p=p+1,n=g*f,t=k*e,r=\nn+f,s=t+e;this.faces.push(new THREE.Face3(b,d,p));this.faceVertexUvs[0].push([new THREE.Vector2(n,t),new THREE.Vector2(r,t),new THREE.Vector2(n,s)]);this.faces.push(new THREE.Face3(d,l,p));this.faceVertexUvs[0].push([new THREE.Vector2(r,t),new THREE.Vector2(r,s),new THREE.Vector2(n,s)])}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;\nTHREE.PlaneGeometry=function(a,b,c,d){console.info(\"THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.\");THREE.Geometry.call(this);this.type=\"PlaneGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;\nTHREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"PlaneBufferGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,f=b/2;c=c||1;d=d||1;var g=c+1,h=d+1,k=a/c,l=b/d;b=new Float32Array(g*h*3);a=new Float32Array(g*h*3);for(var p=new Float32Array(g*h*2),q=0,n=0,t=0;t<h;t++)for(var r=t*l-f,s=0;s<g;s++)b[q]=s*k-e,b[q+1]=-r,a[q+2]=1,p[n]=s/c,p[n+1]=1-t/d,q+=3,n+=2;q=0;e=new (65535<b.length/3?Uint32Array:Uint16Array)(c*d*6);for(t=0;t<d;t++)for(s=\n0;s<c;s++)f=s+g*(t+1),h=s+1+g*(t+1),k=s+1+g*t,e[q]=s+g*t,e[q+1]=f,e[q+2]=k,e[q+3]=f,e[q+4]=h,e[q+5]=k,q+=6;this.addAttribute(\"index\",new THREE.BufferAttribute(e,1));this.addAttribute(\"position\",new THREE.BufferAttribute(b,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(a,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(p,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;\nTHREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"RingGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||0;b=b||50;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):8;var g,h=[],k=a,l=(b-a)/d;for(a=0;a<d+1;a++){for(g=0;g<c+1;g++){var p=new THREE.Vector3,q=e+g/c*f;p.x=k*Math.cos(q);p.y=k*Math.sin(q);this.vertices.push(p);h.push(new THREE.Vector2((p.x/b+1)/2,\n(p.y/b+1)/2))}k+=l}b=new THREE.Vector3(0,0,1);for(a=0;a<d;a++)for(e=a*(c+1),g=0;g<c;g++)f=q=g+e,l=q+c+1,p=q+c+2,this.faces.push(new THREE.Face3(f,l,p,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[l].clone(),h[p].clone()]),f=q,l=q+c+2,p=q+1,this.faces.push(new THREE.Face3(f,l,p,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[l].clone(),h[p].clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,k)};\nTHREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;\nTHREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type=\"SphereGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h,k,l=[],p=[];for(k=0;k<=c;k++){var q=[],n=[];for(h=0;h<=b;h++){var t=h/b,r=k/c,s=new THREE.Vector3;s.x=-a*Math.cos(d+t*e)*Math.sin(f+r*g);\ns.y=a*Math.cos(f+r*g);s.z=a*Math.sin(d+t*e)*Math.sin(f+r*g);this.vertices.push(s);q.push(this.vertices.length-1);n.push(new THREE.Vector2(t,1-r))}l.push(q);p.push(n)}for(k=0;k<c;k++)for(h=0;h<b;h++){d=l[k][h+1];e=l[k][h];f=l[k+1][h];g=l[k+1][h+1];var q=this.vertices[d].clone().normalize(),n=this.vertices[e].clone().normalize(),t=this.vertices[f].clone().normalize(),r=this.vertices[g].clone().normalize(),s=p[k][h+1].clone(),u=p[k][h].clone(),v=p[k+1][h].clone(),x=p[k+1][h+1].clone();Math.abs(this.vertices[d].y)===\na?(s.x=(s.x+u.x)/2,this.faces.push(new THREE.Face3(d,f,g,[q,t,r])),this.faceVertexUvs[0].push([s,v,x])):Math.abs(this.vertices[f].y)===a?(v.x=(v.x+x.x)/2,this.faces.push(new THREE.Face3(d,e,f,[q,n,t])),this.faceVertexUvs[0].push([s,u,v])):(this.faces.push(new THREE.Face3(d,e,g,[q,n,r])),this.faceVertexUvs[0].push([s,u,x]),this.faces.push(new THREE.Face3(e,f,g,[n.clone(),t,r.clone()])),this.faceVertexUvs[0].push([u.clone(),v,x.clone()]))}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,\na)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b);this.type=\"TextGeometry\"};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);\nTHREE.TextGeometry.prototype.constructor=THREE.TextGeometry;\nTHREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.type=\"TorusGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=c||8;d=d||6;e=e||2*Math.PI;for(var f=new THREE.Vector3,g=[],h=[],k=0;k<=c;k++)for(var l=0;l<=d;l++){var p=l/d*e,q=k/c*Math.PI*2;f.x=a*Math.cos(p);f.y=a*Math.sin(p);var n=new THREE.Vector3;n.x=(a+b*Math.cos(q))*Math.cos(p);n.y=(a+b*Math.cos(q))*Math.sin(p);n.z=b*Math.sin(q);this.vertices.push(n);g.push(new THREE.Vector2(l/\nd,k/c));h.push(n.clone().sub(f).normalize())}for(k=1;k<=c;k++)for(l=1;l<=d;l++)a=(d+1)*k+l-1,b=(d+1)*(k-1)+l-1,e=(d+1)*(k-1)+l,f=(d+1)*k+l,p=new THREE.Face3(a,b,f,[h[a].clone(),h[b].clone(),h[f].clone()]),this.faces.push(p),this.faceVertexUvs[0].push([g[a].clone(),g[b].clone(),g[f].clone()]),p=new THREE.Face3(b,e,f,[h[b].clone(),h[e].clone(),h[f].clone()]),this.faces.push(p),this.faceVertexUvs[0].push([g[b].clone(),g[e].clone(),g[f].clone()]);this.computeFaceNormals()};\nTHREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;\nTHREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);a*=b/c;b=Math.cos(a);f*=d*(2+b)*.5;g=d*(2+b)*g*.5;d=e*d*Math.sin(a)*.5;return new THREE.Vector3(f,g,d)}THREE.Geometry.call(this);this.type=\"TorusKnotGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,p:e,q:f,heightScale:g};a=a||100;b=b||40;c=c||64;d=d||8;e=e||2;f=f||3;g=g||1;for(var k=Array(c),l=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,n=0;n<c;++n){k[n]=\nArray(d);var t=n/c*2*e*Math.PI,r=h(t,f,e,a,g),t=h(t+.01,f,e,a,g);l.subVectors(t,r);p.addVectors(t,r);q.crossVectors(l,p);p.crossVectors(q,l);q.normalize();p.normalize();for(t=0;t<d;++t){var s=t/d*2*Math.PI,u=-b*Math.cos(s),s=b*Math.sin(s),v=new THREE.Vector3;v.x=r.x+u*p.x+s*q.x;v.y=r.y+u*p.y+s*q.y;v.z=r.z+u*p.z+s*q.z;k[n][t]=this.vertices.push(v)-1}}for(n=0;n<c;++n)for(t=0;t<d;++t)e=(n+1)%c,f=(t+1)%d,a=k[n][t],b=k[e][t],e=k[e][f],f=k[n][f],g=new THREE.Vector2(n/c,t/d),l=new THREE.Vector2((n+1)/c,\nt/d),p=new THREE.Vector2((n+1)/c,(t+1)/d),q=new THREE.Vector2(n/c,(t+1)/d),this.faces.push(new THREE.Face3(a,b,f)),this.faceVertexUvs[0].push([g,l,q]),this.faces.push(new THREE.Face3(b,e,f)),this.faceVertexUvs[0].push([l.clone(),p,q.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;\nTHREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"TubeGeometry\";this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;f=f||THREE.TubeGeometry.NoTaper;var g=[],h,k,l=b+1,p,q,n,t,r,s=new THREE.Vector3,u,v,x;u=new THREE.TubeGeometry.FrenetFrames(a,b,e);v=u.normals;x=u.binormals;this.tangents=u.tangents;this.normals=v;this.binormals=x;for(u=0;u<l;u++)for(g[u]=[],p=u/(l-1),r=a.getPointAt(p),h=v[u],k=x[u],n=c*f(p),p=0;p<d;p++)q=\np/d*2*Math.PI,t=-n*Math.cos(q),q=n*Math.sin(q),s.copy(r),s.x+=t*h.x+q*k.x,s.y+=t*h.y+q*k.y,s.z+=t*h.z+q*k.z,g[u][p]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1;for(u=0;u<b;u++)for(p=0;p<d;p++)f=e?(u+1)%b:u+1,l=(p+1)%d,a=g[u][p],c=g[f][p],f=g[f][l],l=g[u][l],s=new THREE.Vector2(u/b,p/d),v=new THREE.Vector2((u+1)/b,p/d),x=new THREE.Vector2((u+1)/b,(p+1)/d),h=new THREE.Vector2(u/b,(p+1)/d),this.faces.push(new THREE.Face3(a,c,l)),this.faceVertexUvs[0].push([s,v,h]),this.faces.push(new THREE.Face3(c,\nf,l)),this.faceVertexUvs[0].push([v.clone(),x,h.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};\nTHREE.TubeGeometry.FrenetFrames=function(a,b,c){var d=new THREE.Vector3,e=[],f=[],g=[],h=new THREE.Vector3,k=new THREE.Matrix4;b+=1;var l,p,q;this.tangents=e;this.normals=f;this.binormals=g;for(l=0;l<b;l++)p=l/(b-1),e[l]=a.getTangentAt(p),e[l].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;l=Math.abs(e[0].x);p=Math.abs(e[0].y);q=Math.abs(e[0].z);l<=a&&(a=l,d.set(1,0,0));p<=a&&(a=p,d.set(0,1,0));q<=a&&d.set(0,0,1);h.crossVectors(e[0],d).normalize();f[0].crossVectors(e[0],\nh);g[0].crossVectors(e[0],f[0]);for(l=1;l<b;l++)f[l]=f[l-1].clone(),g[l]=g[l-1].clone(),h.crossVectors(e[l-1],e[l]),1E-4<h.length()&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[l-1].dot(e[l]),-1,1)),f[l].applyMatrix4(k.makeRotationAxis(h,d))),g[l].crossVectors(e[l],f[l]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),l=1;l<b;l++)f[l].applyMatrix4(k.makeRotationAxis(e[l],d*l)),g[l].crossVectors(e[l],f[l])};\nTHREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);k.faces.push(d);u.copy(a).add(b).add(c).divideScalar(3);d=Math.atan2(u.z,-u.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function g(a,\nb){for(var c=Math.pow(2,b),d=e(k.vertices[a.a]),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),l=[],n=0;n<=c;n++){l[n]=[];for(var p=e(d.clone().lerp(h,n/c)),q=e(g.clone().lerp(h,n/c)),s=c-n,r=0;r<=s;r++)l[n][r]=0==r&&n==c?p:e(p.clone().lerp(q,r/s))}for(n=0;n<c;n++)for(r=0;r<2*(c-n)-1;r++)d=Math.floor(r/2),0==r%2?f(l[n][d+1],l[n+1][d],l[n][d]):f(l[n][d+1],l[n+1][d+1],l[n+1][d])}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y));return a.clone()}\nTHREE.Geometry.call(this);this.type=\"PolyhedronGeometry\";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;for(var k=this,l=0,p=a.length;l<p;l+=3)e(new THREE.Vector3(a[l],a[l+1],a[l+2]));a=this.vertices;for(var q=[],n=l=0,p=b.length;l<p;l+=3,n++){var t=a[b[l]],r=a[b[l+1]],s=a[b[l+2]];q[n]=new THREE.Face3(t.index,r.index,s.index,[t.clone(),r.clone(),s.clone()])}for(var u=new THREE.Vector3,l=0,p=q.length;l<p;l++)g(q[l],d);l=0;for(p=this.faceVertexUvs[0].length;l<p;l++)b=this.faceVertexUvs[0][l],\nd=b[0].x,a=b[1].x,q=b[2].x,n=Math.max(d,Math.max(a,q)),t=Math.min(d,Math.min(a,q)),.9<n&&.1>t&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>q&&(b[2].x+=1));l=0;for(p=this.vertices.length;l<p;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;\nTHREE.DodecahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};var c=(1+Math.sqrt(5))/2,d=1/c;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,\n11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b)};THREE.DodecahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;\nTHREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type=\"IcosahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type=\"OctahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;\nTHREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type=\"TetrahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;\nTHREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);this.type=\"ParametricGeometry\";this.parameters={func:a,slices:b,stacks:c};var d=this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,k,l,p=b+1;for(g=0;g<=c;g++)for(l=g/c,h=0;h<=b;h++)k=h/b,k=a(k,l),d.push(k);var q,n,t,r;for(g=0;g<c;g++)for(h=0;h<b;h++)a=g*p+h,d=g*p+h+1,l=(g+1)*p+h+1,k=(g+1)*p+h,q=new THREE.Vector2(h/b,g/c),n=new THREE.Vector2((h+1)/b,g/c),t=new THREE.Vector2((h+1)/b,(g+1)/c),r=new THREE.Vector2(h/b,(g+1)/c),e.push(new THREE.Face3(a,\nd,k)),f.push([q,n,r]),e.push(new THREE.Face3(d,l,k)),f.push([n.clone(),t,r.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;\nTHREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.BufferAttribute(b,3));a.addAttribute(\"color\",new THREE.BufferAttribute(c,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,a,b,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.AxisHelper.prototype.constructor=THREE.AxisHelper;\nTHREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var b=new THREE.CylinderGeometry(0,.5,1,5,1);b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));return function(c,d,e,f,g,h){THREE.Object3D.call(this);void 0===f&&(f=16776960);void 0===e&&(e=1);void 0===g&&(g=.2*e);void 0===h&&(h=.2*g);this.position.copy(d);this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=!1;this.add(this.line);\nthis.cone=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:f}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(c);this.setLength(e,g,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;\nTHREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,a-b,1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};\nTHREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a);this.cone.material.color.set(a)};THREE.BoxHelper=function(a){var b=new THREE.BufferGeometry;b.addAttribute(\"position\",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;\nTHREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,b=b.boundingBox.max,d=this.geometry.attributes.position.array;d[0]=b.x;d[1]=b.y;d[2]=b.z;d[3]=c.x;d[4]=b.y;d[5]=b.z;d[6]=c.x;d[7]=b.y;d[8]=b.z;d[9]=c.x;d[10]=c.y;d[11]=b.z;d[12]=c.x;d[13]=c.y;d[14]=b.z;d[15]=b.x;d[16]=c.y;d[17]=b.z;d[18]=b.x;d[19]=c.y;d[20]=b.z;d[21]=b.x;d[22]=b.y;d[23]=b.z;d[24]=b.x;d[25]=b.y;d[26]=c.z;d[27]=c.x;d[28]=b.y;d[29]=c.z;d[30]=c.x;d[31]=b.y;\nd[32]=c.z;d[33]=c.x;d[34]=c.y;d[35]=c.z;d[36]=c.x;d[37]=c.y;d[38]=c.z;d[39]=b.x;d[40]=c.y;d[41]=c.z;d[42]=b.x;d[43]=c.y;d[44]=c.z;d[45]=b.x;d[46]=b.y;d[47]=c.z;d[48]=b.x;d[49]=b.y;d[50]=b.z;d[51]=b.x;d[52]=b.y;d[53]=c.z;d[54]=c.x;d[55]=b.y;d[56]=b.z;d[57]=c.x;d[58]=b.y;d[59]=c.z;d[60]=c.x;d[61]=c.y;d[62]=b.z;d[63]=c.x;d[64]=c.y;d[65]=c.z;d[66]=b.x;d[67]=c.y;d[68]=b.z;d[69]=b.x;d[70]=c.y;d[71]=c.z;this.geometry.attributes.position.needsUpdate=!0;this.geometry.computeBoundingSphere();this.matrix=a.matrixWorld;\nthis.matrixAutoUpdate=!1};THREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};\nTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b(\"n1\",\"n2\",16755200);b(\"n2\",\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);\nb(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);THREE.Line.call(this,d,e,THREE.LinePieces);this.camera=a;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};\nTHREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;\nTHREE.CameraHelper.prototype.update=function(){var a,b,c=new THREE.Vector3,d=new THREE.Camera,e=function(e,g,h,k){c.set(g,h,k).unproject(d);e=b[e];if(void 0!==e)for(g=0,h=e.length;g<h;g++)a.vertices[e[g]].copy(c)};return function(){a=this.geometry;b=this.pointMap;d.projectionMatrix.copy(this.camera.projectionMatrix);e(\"c\",0,0,-1);e(\"t\",0,0,1);e(\"n1\",-1,-1,-1);e(\"n2\",1,-1,-1);e(\"n3\",-1,1,-1);e(\"n4\",1,1,-1);e(\"f1\",-1,-1,1);e(\"f2\",1,-1,1);e(\"f3\",-1,1,1);e(\"f4\",1,1,1);e(\"u1\",.7,1.1,-1);e(\"u2\",-.7,1.1,\n-1);e(\"u3\",0,2,-1);e(\"cf1\",-1,0,1);e(\"cf2\",1,0,1);e(\"cf3\",0,-1,1);e(\"cf4\",0,1,1);e(\"cn1\",-1,0,-1);e(\"cn2\",1,0,-1);e(\"cn3\",0,-1,-1);e(\"cn4\",0,1,-1);a.verticesNeedUpdate=!0}}();\nTHREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(c,d);this.add(this.lightPlane);\nc=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3);d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(c,d);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;\nTHREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};\nTHREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(c);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();\nTHREE.EdgesHelper=function(a,b,c){b=void 0!==b?b:16777215;c=Math.cos(THREE.Math.degToRad(void 0!==c?c:1));var d=[0,0],e={},f=function(a,b){return a-b},g=[\"a\",\"b\",\"c\"],h=new THREE.BufferGeometry,k;a.geometry instanceof THREE.BufferGeometry?(k=new THREE.Geometry,k.fromBufferGeometry(a.geometry)):k=a.geometry.clone();k.mergeVertices();k.computeFaceNormals();var l=k.vertices;k=k.faces;for(var p=0,q=0,n=k.length;q<n;q++)for(var t=k[q],r=0;3>r;r++){d[0]=t[g[r]];d[1]=t[g[(r+1)%3]];d.sort(f);var s=d.toString();\nvoid 0===e[s]?(e[s]={vert1:d[0],vert2:d[1],face1:q,face2:void 0},p++):e[s].face2=q}d=new Float32Array(6*p);f=0;for(s in e)if(g=e[s],void 0===g.face2||k[g.face1].normal.dot(k[g.face2].normal)<=c)p=l[g.vert1],d[f++]=p.x,d[f++]=p.y,d[f++]=p.z,p=l[g.vert2],d[f++]=p.x,d[f++]=p.y,d[f++]=p.z;h.addAttribute(\"position\",new THREE.BufferAttribute(d,3));THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:b}),THREE.LinePieces);this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};\nTHREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;\nTHREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=new THREE.Geometry;c=0;for(var e=this.object.geometry.faces.length;c<e;c++)b.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:a,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;\nTHREE.FaceNormalsHelper.prototype.update=function(){var a=this.geometry.vertices,b=this.object,c=b.geometry.vertices,d=b.geometry.faces,e=b.matrixWorld;b.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(e);for(var f=b=0,g=d.length;b<g;b++,f+=2){var h=d[b];a[f].copy(c[h.a]).add(c[h.b]).add(c[h.c]).divideScalar(3).applyMatrix4(e);a[f+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(a[f])}this.geometry.verticesNeedUpdate=!0;return this};\nTHREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var e=-a;e<=a;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};\nTHREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var d=0;8>d;d++)c.faces[d].color=this.colors[4>d?0:1];d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,d);this.add(this.lightSphere);\nthis.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};\nTHREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();\nTHREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;\nTHREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};\nTHREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)));c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,b,c,THREE.LinePieces);this.root=a;this.matrix=a.matrixWorld;\nthis.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b};\nTHREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var f=this.bones[e];f.parent instanceof THREE.Bone&&(c.multiplyMatrices(b,f.matrixWorld),a.vertices[d].setFromMatrixPosition(c),c.multiplyMatrices(b,f.parent.matrixWorld),a.vertices[d+1].setFromMatrixPosition(c),d+=2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};\nTHREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.CylinderGeometry(0,1,1,8,1,!0);a.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var b=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(a,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};\nTHREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();\nTHREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;b=void 0!==c?c:16711680;d=void 0!==d?d:1;c=new THREE.Geometry;a=a.geometry.faces;for(var e=0,f=a.length;e<f;e++)for(var g=0,h=a[e].vertexNormals.length;g<h;g++)c.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;\nTHREE.VertexNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=[\"a\",\"b\",\"c\",\"d\"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,k=0,l=f.length;k<l;k++)for(var p=f[k],q=0,n=p.vertexNormals.length;q<n;q++){var t=p.vertexNormals[q];d[h].copy(e[p[a[q]]]).applyMatrix4(g);b.copy(t).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);\nb.add(d[h]);h+=1;d[h].copy(b);h+=1}this.geometry.verticesNeedUpdate=!0;return this}}();\nTHREE.VertexTangentsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;b=void 0!==c?c:255;d=void 0!==d?d:1;c=new THREE.Geometry;a=a.geometry.faces;for(var e=0,f=a.length;e<f;e++)for(var g=0,h=a[e].vertexTangents.length;g<h;g++)c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);\nTHREE.VertexTangentsHelper.prototype.constructor=THREE.VertexTangentsHelper;\nTHREE.VertexTangentsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=[\"a\",\"b\",\"c\",\"d\"];this.object.updateMatrixWorld(!0);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,k=0,l=f.length;k<l;k++)for(var p=f[k],q=0,n=p.vertexTangents.length;q<n;q++){var t=p.vertexTangents[q];d[h].copy(e[p[a[q]]]).applyMatrix4(g);b.copy(t).transformDirection(g).multiplyScalar(this.size);b.add(d[h]);h+=1;d[h].copy(b);\nh+=1}this.geometry.verticesNeedUpdate=!0;return this}}();\nTHREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215,d=[0,0],e={},f=function(a,b){return a-b},g=[\"a\",\"b\",\"c\"],h=new THREE.BufferGeometry;if(a.geometry instanceof THREE.Geometry){for(var k=a.geometry.vertices,l=a.geometry.faces,p=0,q=new Uint32Array(6*l.length),n=0,t=l.length;n<t;n++)for(var r=l[n],s=0;3>s;s++){d[0]=r[g[s]];d[1]=r[g[(s+1)%3]];d.sort(f);var u=d.toString();void 0===e[u]&&(q[2*p]=d[0],q[2*p+1]=d[1],e[u]=!0,p++)}d=new Float32Array(6*p);n=0;for(t=p;n<t;n++)for(s=0;2>s;s++)p=\nk[q[2*n+s]],g=6*n+3*s,d[g+0]=p.x,d[g+1]=p.y,d[g+2]=p.z;h.addAttribute(\"position\",new THREE.BufferAttribute(d,3))}else if(a.geometry instanceof THREE.BufferGeometry){if(void 0!==a.geometry.attributes.index){k=a.geometry.attributes.position.array;t=a.geometry.attributes.index.array;l=a.geometry.drawcalls;p=0;0===l.length&&(l=[{count:t.length,index:0,start:0}]);for(var q=new Uint32Array(2*t.length),r=0,v=l.length;r<v;++r)for(var s=l[r].start,u=l[r].count,g=l[r].index,n=s,x=s+u;n<x;n+=3)for(s=0;3>s;s++)d[0]=\ng+t[n+s],d[1]=g+t[n+(s+1)%3],d.sort(f),u=d.toString(),void 0===e[u]&&(q[2*p]=d[0],q[2*p+1]=d[1],e[u]=!0,p++);d=new Float32Array(6*p);n=0;for(t=p;n<t;n++)for(s=0;2>s;s++)g=6*n+3*s,p=3*q[2*n+s],d[g+0]=k[p],d[g+1]=k[p+1],d[g+2]=k[p+2]}else for(k=a.geometry.attributes.position.array,p=k.length/3,q=p/3,d=new Float32Array(6*p),n=0,t=q;n<t;n++)for(s=0;3>s;s++)g=18*n+6*s,q=9*n+3*s,d[g+0]=k[q],d[g+1]=k[q+1],d[g+2]=k[q+2],p=9*n+(s+1)%3*3,d[g+3]=k[p],d[g+4]=k[p+1],d[g+5]=k[p+2];h.addAttribute(\"position\",new THREE.BufferAttribute(d,\n3))}THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces);this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;\nTHREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation(\"__default\",0,c-1,c/1);this.setAnimationWeight(\"__default\",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;\nTHREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var k=h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};\nTHREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};\nTHREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):THREE.warn(\"THREE.MorphBlendMesh: animation[\"+a+\"] undefined in .playAnimation()\")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};\nTHREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;\nf!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/three.min.js\n// module id = 81\n// module chunks = 14"],"sourceRoot":""}